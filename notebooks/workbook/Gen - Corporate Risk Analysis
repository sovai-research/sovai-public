{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8b139dd8-e3df-490b-9726-ea8027025b75",
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e4c6c93c-b180-43b9-9266-75887c4b58c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import sovai as sov\n",
    "import pandas as pd\n",
    "\n",
    "sov.token_auth(token=\"22fd808d-0947-45f1-995a-82346b921f0f\") "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "2547ec03-662a-42c6-83b6-db54fe088966",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/corprisk/risks\n",
      "Requesting URL: https://data.sov.ai/corprisk/risks with params: {'parquet': 'True', 'full_history': 'False'}\n",
      "Returning cached data\n"
     ]
    }
   ],
   "source": [
    "df_risks = sov.data(\"corprisk/risks\", verbose=True, frequency=None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "263452d7-bb97-4596-837f-74b1d5a98d67",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_risks = sov.data(\"corprisk/risks\", frequency=\"difference\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "d820b749-2f86-4712-92c9-e352c0d933f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ticker</th>\n",
       "      <th>date</th>\n",
       "      <th>accounting</th>\n",
       "      <th>accounting_ind_adjs</th>\n",
       "      <th>misstatement</th>\n",
       "      <th>misstatement_ind_adjs</th>\n",
       "      <th>events</th>\n",
       "      <th>events_ind_adjs</th>\n",
       "      <th>risk</th>\n",
       "      <th>risk_ind_adjs</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6310</th>\n",
       "      <td>WBA</td>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>0.299</td>\n",
       "      <td>0.348</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>-0.005</td>\n",
       "      <td>-0.465</td>\n",
       "      <td>0.098</td>\n",
       "      <td>-0.039</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     ticker       date  accounting  accounting_ind_adjs  misstatement  \\\n",
       "6310    WBA 2024-10-18       0.299                0.348         0.000   \n",
       "\n",
       "      misstatement_ind_adjs  events  events_ind_adjs  risk  risk_ind_adjs  \n",
       "6310                  0.000  -0.005           -0.465 0.098         -0.039  "
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_risks.query(\"ticker == 'WBA'\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "37eb8e62-d95e-4175-9a29-d6ab80b8004a",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_risks = sov.data(\"corprisk/risks\", tickers=[\"WBA\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a997a414-0818-42bb-91d9-674ba919861b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "1cdbad1e-49c9-48cc-aaaf-6ed6d50ce39f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>accounting</th>\n",
       "      <th>accounting_ind_adjs</th>\n",
       "      <th>misstatement</th>\n",
       "      <th>misstatement_ind_adjs</th>\n",
       "      <th>events</th>\n",
       "      <th>events_ind_adjs</th>\n",
       "      <th>risk</th>\n",
       "      <th>risk_ind_adjs</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ticker</th>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"11\" valign=\"top\">WBA</th>\n",
       "      <th>1998-01-02</th>\n",
       "      <td>0.592</td>\n",
       "      <td>0.115</td>\n",
       "      <td>0.989</td>\n",
       "      <td>0.990</td>\n",
       "      <td>0.033</td>\n",
       "      <td>0.289</td>\n",
       "      <td>0.538</td>\n",
       "      <td>0.464</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998-01-09</th>\n",
       "      <td>0.591</td>\n",
       "      <td>0.115</td>\n",
       "      <td>0.989</td>\n",
       "      <td>0.990</td>\n",
       "      <td>0.033</td>\n",
       "      <td>0.289</td>\n",
       "      <td>0.538</td>\n",
       "      <td>0.464</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998-01-16</th>\n",
       "      <td>0.698</td>\n",
       "      <td>0.205</td>\n",
       "      <td>0.989</td>\n",
       "      <td>0.990</td>\n",
       "      <td>0.033</td>\n",
       "      <td>0.289</td>\n",
       "      <td>0.573</td>\n",
       "      <td>0.495</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998-01-23</th>\n",
       "      <td>0.697</td>\n",
       "      <td>0.205</td>\n",
       "      <td>0.989</td>\n",
       "      <td>0.990</td>\n",
       "      <td>0.033</td>\n",
       "      <td>0.289</td>\n",
       "      <td>0.573</td>\n",
       "      <td>0.495</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998-01-30</th>\n",
       "      <td>0.697</td>\n",
       "      <td>0.205</td>\n",
       "      <td>0.989</td>\n",
       "      <td>0.990</td>\n",
       "      <td>0.033</td>\n",
       "      <td>0.289</td>\n",
       "      <td>0.573</td>\n",
       "      <td>0.495</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-20</th>\n",
       "      <td>0.274</td>\n",
       "      <td>0.335</td>\n",
       "      <td>0.499</td>\n",
       "      <td>0.501</td>\n",
       "      <td>0.561</td>\n",
       "      <td>0.723</td>\n",
       "      <td>0.445</td>\n",
       "      <td>0.520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-09-27</th>\n",
       "      <td>0.312</td>\n",
       "      <td>0.380</td>\n",
       "      <td>0.499</td>\n",
       "      <td>0.501</td>\n",
       "      <td>0.561</td>\n",
       "      <td>0.723</td>\n",
       "      <td>0.457</td>\n",
       "      <td>0.535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-10-04</th>\n",
       "      <td>0.312</td>\n",
       "      <td>0.374</td>\n",
       "      <td>0.499</td>\n",
       "      <td>0.501</td>\n",
       "      <td>0.561</td>\n",
       "      <td>0.723</td>\n",
       "      <td>0.458</td>\n",
       "      <td>0.533</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-10-11</th>\n",
       "      <td>0.310</td>\n",
       "      <td>0.374</td>\n",
       "      <td>0.499</td>\n",
       "      <td>0.501</td>\n",
       "      <td>0.561</td>\n",
       "      <td>0.723</td>\n",
       "      <td>0.457</td>\n",
       "      <td>0.533</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-10-18</th>\n",
       "      <td>0.609</td>\n",
       "      <td>0.722</td>\n",
       "      <td>0.499</td>\n",
       "      <td>0.501</td>\n",
       "      <td>0.557</td>\n",
       "      <td>0.259</td>\n",
       "      <td>0.555</td>\n",
       "      <td>0.494</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1399 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                   accounting  accounting_ind_adjs  misstatement  \\\n",
       "ticker date                                                        \n",
       "WBA    1998-01-02       0.592                0.115         0.989   \n",
       "       1998-01-09       0.591                0.115         0.989   \n",
       "       1998-01-16       0.698                0.205         0.989   \n",
       "       1998-01-23       0.697                0.205         0.989   \n",
       "       1998-01-30       0.697                0.205         0.989   \n",
       "...                       ...                  ...           ...   \n",
       "       2024-09-20       0.274                0.335         0.499   \n",
       "       2024-09-27       0.312                0.380         0.499   \n",
       "       2024-10-04       0.312                0.374         0.499   \n",
       "       2024-10-11       0.310                0.374         0.499   \n",
       "       2024-10-18       0.609                0.722         0.499   \n",
       "\n",
       "                   misstatement_ind_adjs  events  events_ind_adjs  risk  \\\n",
       "ticker date                                                               \n",
       "WBA    1998-01-02                  0.990   0.033            0.289 0.538   \n",
       "       1998-01-09                  0.990   0.033            0.289 0.538   \n",
       "       1998-01-16                  0.990   0.033            0.289 0.573   \n",
       "       1998-01-23                  0.990   0.033            0.289 0.573   \n",
       "       1998-01-30                  0.990   0.033            0.289 0.573   \n",
       "...                                  ...     ...              ...   ...   \n",
       "       2024-09-20                  0.501   0.561            0.723 0.445   \n",
       "       2024-09-27                  0.501   0.561            0.723 0.457   \n",
       "       2024-10-04                  0.501   0.561            0.723 0.458   \n",
       "       2024-10-11                  0.501   0.561            0.723 0.457   \n",
       "       2024-10-18                  0.501   0.557            0.259 0.555   \n",
       "\n",
       "                   risk_ind_adjs  \n",
       "ticker date                       \n",
       "WBA    1998-01-02          0.464  \n",
       "       1998-01-09          0.464  \n",
       "       1998-01-16          0.495  \n",
       "       1998-01-23          0.495  \n",
       "       1998-01-30          0.495  \n",
       "...                          ...  \n",
       "       2024-09-20          0.520  \n",
       "       2024-09-27          0.535  \n",
       "       2024-10-04          0.533  \n",
       "       2024-10-11          0.533  \n",
       "       2024-10-18          0.494  \n",
       "\n",
       "[1399 rows x 8 columns]"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_risks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "e9fdbdd8-9fe7-4b55-9839-540e93569885",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>accounting</th>\n",
       "      <th>accounting_ind_adjs</th>\n",
       "      <th>misstatement</th>\n",
       "      <th>misstatement_ind_adjs</th>\n",
       "      <th>events</th>\n",
       "      <th>events_ind_adjs</th>\n",
       "      <th>risk</th>\n",
       "      <th>risk_ind_adjs</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ticker</th>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty CustomDataFrame\n",
       "Columns: [accounting, accounting_ind_adjs, misstatement, misstatement_ind_adjs, events, events_ind_adjs, risk, risk_ind_adjs]\n",
       "Index: []"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_risks.query(\"ticker == 'CPK'\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "3a32dad1-8a5e-426c-9d4f-4412028806ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ticker</th>\n",
       "      <th>date</th>\n",
       "      <th>accounting</th>\n",
       "      <th>accounting_ind_adjs</th>\n",
       "      <th>misstatement</th>\n",
       "      <th>misstatement_ind_adjs</th>\n",
       "      <th>events</th>\n",
       "      <th>events_ind_adjs</th>\n",
       "      <th>risk</th>\n",
       "      <th>risk_ind_adjs</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>570</th>\n",
       "      <td>BX</td>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>4.791</td>\n",
       "      <td>15.275</td>\n",
       "      <td>49.887</td>\n",
       "      <td>50.083</td>\n",
       "      <td>35.302</td>\n",
       "      <td>86.763</td>\n",
       "      <td>29.994</td>\n",
       "      <td>50.707</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    ticker       date  accounting  accounting_ind_adjs  misstatement  \\\n",
       "570     BX 2024-10-18       4.791               15.275        49.887   \n",
       "\n",
       "     misstatement_ind_adjs  events  events_ind_adjs   risk  risk_ind_adjs  \n",
       "570                 50.083  35.302           86.763 29.994         50.707  "
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_risks.query(\"ticker == 'BX'\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "3986f664-be81-44d5-9f37-4d4b966fc5fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "\n",
    "tickers_meta = pd.read_parquet(\"data/tickers.parq\")\n",
    "\n",
    "\n",
    "def select_groups(frequency=\"difference\"):\n",
    "    import pandas as pd\n",
    "    # def get_corp_risk_date\n",
    "    \n",
    "    df_risks = sov.data(\"corprisk/risks\", frequency=frequency).reset_index()\n",
    "    \n",
    "    df_risks = df_risks.set_index([\"ticker\",\"date\"])\n",
    "    \n",
    "    df_risks = df_risks.filter([\"market_cap>100\"])\n",
    "    \n",
    "    # # Adjust prediction values below 50%\n",
    "    # df['prediction'] = np.where(df['prediction'] < 50, df['prediction']-50, df['prediction'])\n",
    "    \n",
    "    df_risks = pd.merge(df_risks.reset_index(),tickers_meta[[\"ticker\",\"sector\",\"industry\"]], on=\"ticker\", how=\"left\")\n",
    "    \n",
    "    \n",
    "    df_risks = df_risks[df_risks[\"industry\"]!=\"Shell Companies\"].drop(columns=[\"industry\",\"sector\"])\n",
    "    \n",
    "    \n",
    "    non_numeric_columns = ['ticker', 'date']\n",
    "    numeric_columns = df_risks.columns.drop(non_numeric_columns)\n",
    "    \n",
    "    # Initialize the scaler\n",
    "    scaler = MinMaxScaler()\n",
    "    \n",
    "    \n",
    "    # Fit and transform the numeric columns\n",
    "    df_risks[numeric_columns] = scaler.fit_transform(df_risks[numeric_columns])\n",
    "    \n",
    "    # Handle NaN values if any\n",
    "    df_risks[numeric_columns] = df_risks[numeric_columns].fillna(0)\n",
    "    \n",
    "    df_risks[numeric_columns] = df_risks[numeric_columns]*100\n",
    "    \n",
    "    \n",
    "    # Rename columns for clarity\n",
    "    risk_rename_mapping = {\n",
    "        'accounting': 'Accounting Risk',\n",
    "        'misstatement': 'Misstatement Risk',\n",
    "        'events': 'Events Risk',\n",
    "        'risk': 'Overall Risk'\n",
    "    }\n",
    "    \n",
    "    df_risks_renamed = df_risks.rename(columns=risk_rename_mapping)\n",
    "    \n",
    "    import pandas as pd\n",
    "    \n",
    "    # Assuming df_risks_renamed is your DataFrame\n",
    "    \n",
    "    # Melt the DataFrame to create the long format\n",
    "    df_long = pd.melt(df_risks_renamed, \n",
    "                      id_vars=['ticker', 'date'],\n",
    "                      value_vars=['Accounting Risk', 'Misstatement Risk', 'Events Risk', 'Overall Risk'],\n",
    "                      var_name='sector',\n",
    "                      value_name='percentilerisk')\n",
    "    \n",
    "    # Sort the DataFrame by ticker, date, and sector\n",
    "    df_long.sort_values(['ticker', 'date', 'sector'], inplace=True)\n",
    "    \n",
    "    # Reset the index\n",
    "    df_long.reset_index(drop=True, inplace=True)\n",
    "    return df_long\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "42406d34-702a-438e-8ebc-bcee3599e2d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "',~~~Accounting Risk~~~,,~~~Events Risk~~~,,~~~Misstatement Risk~~~,,~~~Overall Risk~~~,,\\n,percentilerisk,ticker,percentilerisk,ticker,percentilerisk,ticker,percentilerisk,ticker,\\n1,99.97,<a href=\"https://finance.yahoo.com/quote/OPAD\" target=\"_blank\">OPAD</a>,99.94,<a href=\"https://finance.yahoo.com/quote/NMM\" target=\"_blank\">NMM</a>,99.72,<a href=\"https://finance.yahoo.com/quote/SHMD\" target=\"_blank\">SHMD</a>,85.85,<a href=\"https://finance.yahoo.com/quote/GOOS\" target=\"_blank\">GOOS</a>,\\n2,99.93,<a href=\"https://finance.yahoo.com/quote/ALTI\" target=\"_blank\">ALTI</a>,99.92,<a href=\"https://finance.yahoo.com/quote/YRD\" target=\"_blank\">YRD</a>,99.44,<a href=\"https://finance.yahoo.com/quote/VFS\" target=\"_blank\">VFS</a>,85.65,<a href=\"https://finance.yahoo.com/quote/OTLY\" target=\"_blank\">OTLY</a>,\\n3,99.89,<a href=\"https://finance.yahoo.com/quote/STKS\" target=\"_blank\">STKS</a>,99.91,<a href=\"https://finance.yahoo.com/quote/QD\" target=\"_blank\">QD</a>,99.28,<a href=\"https://finance.yahoo.com/quote/HKD\" target=\"_blank\">HKD</a>,84.50,<a href=\"https://finance.yahoo.com/quote/RNW\" target=\"_blank\">RNW</a>,\\n4,99.89,<a href=\"https://finance.yahoo.com/quote/AFRI\" target=\"_blank\">AFRI</a>,99.85,<a href=\"https://finance.yahoo.com/quote/GSIW\" target=\"_blank\">GSIW</a>,96.14,<a href=\"https://finance.yahoo.com/quote/MMYT\" target=\"_blank\">MMYT</a>,83.21,<a href=\"https://finance.yahoo.com/quote/ZBAO\" target=\"_blank\">ZBAO</a>,\\n5,99.84,<a href=\"https://finance.yahoo.com/quote/BETR\" target=\"_blank\">BETR</a>,99.74,<a href=\"https://finance.yahoo.com/quote/ZBAO\" target=\"_blank\">ZBAO</a>,94.52,<a href=\"https://finance.yahoo.com/quote/OPRA\" target=\"_blank\">OPRA</a>,83.12,<a href=\"https://finance.yahoo.com/quote/PROP\" target=\"_blank\">PROP</a>,\\n6,99.83,<a href=\"https://finance.yahoo.com/quote/NFE\" target=\"_blank\">NFE</a>,99.69,<a href=\"https://finance.yahoo.com/quote/ACTU\" target=\"_blank\">ACTU</a>,93.26,<a href=\"https://finance.yahoo.com/quote/RNW\" target=\"_blank\">RNW</a>,83.07,<a href=\"https://finance.yahoo.com/quote/GSIW\" target=\"_blank\">GSIW</a>,\\n7,99.82,<a href=\"https://finance.yahoo.com/quote/PAL\" target=\"_blank\">PAL</a>,99.63,<a href=\"https://finance.yahoo.com/quote/WDH\" target=\"_blank\">WDH</a>,93.20,<a href=\"https://finance.yahoo.com/quote/MGIC\" target=\"_blank\">MGIC</a>,82.78,<a href=\"https://finance.yahoo.com/quote/AFRI\" target=\"_blank\">AFRI</a>,\\n8,99.82,<a href=\"https://finance.yahoo.com/quote/ZBAO\" target=\"_blank\">ZBAO</a>,99.61,<a href=\"https://finance.yahoo.com/quote/FRHC\" target=\"_blank\">FRHC</a>,93.20,<a href=\"https://finance.yahoo.com/quote/FORTY\" target=\"_blank\">FORTY</a>,82.77,<a href=\"https://finance.yahoo.com/quote/BETR\" target=\"_blank\">BETR</a>,\\n9,99.80,<a href=\"https://finance.yahoo.com/quote/PROP\" target=\"_blank\">PROP</a>,99.50,<a href=\"https://finance.yahoo.com/quote/TD\" target=\"_blank\">TD</a>,91.63,<a href=\"https://finance.yahoo.com/quote/AIRJ\" target=\"_blank\">AIRJ</a>,82.75,<a href=\"https://finance.yahoo.com/quote/TBN\" target=\"_blank\">TBN</a>,\\n10,99.76,<a href=\"https://finance.yahoo.com/quote/BNED\" target=\"_blank\">BNED</a>,99.50,<a href=\"https://finance.yahoo.com/quote/AEG\" target=\"_blank\">AEG</a>,90.19,<a href=\"https://finance.yahoo.com/quote/JKS\" target=\"_blank\">JKS</a>,81.59,<a href=\"https://finance.yahoo.com/quote/VGAS\" target=\"_blank\">VGAS</a>,\\n'"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import io\n",
    "def create_sector_ranking(df, sort_column='sansmarket', top_n=10, select='largest'):\n",
    "    def make_clickable(ticker):\n",
    "        url = f\"https://finance.yahoo.com/quote/{ticker}\"\n",
    "        return f'<a href=\"{url}\" target=\"_blank\">{ticker}</a>'\n",
    "    \n",
    "    # Ensure we're working with the latest date\n",
    "    latest_date = df['date'].max()\n",
    "    df_latest = df[df['date'] == latest_date]\n",
    "    \n",
    "    # Group by sector and get top N for each sector\n",
    "    grouped = df_latest.groupby('sector')\n",
    "    top_n_df = pd.DataFrame()\n",
    "    \n",
    "    for name, group in grouped:\n",
    "        if select == 'largest':\n",
    "            top_group = group.nlargest(top_n, sort_column)\n",
    "        elif select == 'smallest':\n",
    "            top_group = group.nsmallest(top_n, sort_column)\n",
    "        else:\n",
    "            raise ValueError(\"select parameter must be either 'largest' or 'smallest'\")\n",
    "        \n",
    "        top_group['rank'] = range(1, len(top_group) + 1)\n",
    "        top_n_df = pd.concat([top_n_df, top_group])\n",
    "    \n",
    "    top_group['rank'] = top_group['rank'].astype(str)\n",
    "    # Format the sans_market column to two decimal places\n",
    "    top_n_df[sort_column] = top_n_df[sort_column].map(\"{:.2f}\".format)\n",
    "    \n",
    "    # Make tickers clickable\n",
    "    top_n_df['ticker'] = top_n_df['ticker'].apply(make_clickable)\n",
    "    \n",
    "    # Create a pivot table with the rank as index\n",
    "    top_n_pivot = top_n_df.pivot(index='rank', columns='sector', values=[sort_column, 'ticker'])\n",
    "    top_n_pivot = top_n_pivot.swaplevel(axis=1).sort_index(axis=1, level=0)\n",
    "\n",
    "    \n",
    "    # Prepare the data for Datawrapper format\n",
    "    output = io.StringIO()\n",
    "    \n",
    "    # Write the first row (sector names)\n",
    "    sectors = top_n_pivot.columns.get_level_values(0).unique()\n",
    "    output.write(',')\n",
    "    for sector in sectors:\n",
    "        output.write(f'~~~{sector}~~~,,')\n",
    "    output.write('\\n')\n",
    "    \n",
    "    # Write the second row (sans_market and ticker)\n",
    "    output.write(',')\n",
    "    for _ in sectors:\n",
    "        output.write(f'{sort_column},ticker,')\n",
    "    output.write('\\n')\n",
    "    \n",
    "    # Write the data rows\n",
    "    for idx, row in top_n_pivot.iterrows():\n",
    "        output.write(f'{idx},')\n",
    "        for sector in sectors:\n",
    "            sans_market = row[(sector, sort_column)] if (sector, sort_column) in row else ''\n",
    "            ticker = row[(sector, 'ticker')] if (sector, 'ticker') in row else ''\n",
    "            output.write(f'{sans_market},{ticker},')\n",
    "        output.write('\\n')\n",
    "    \n",
    "    # Get the CSV string\n",
    "    csv_string = output.getvalue()\n",
    "    output.close()\n",
    "    \n",
    "    return csv_string\n",
    "\n",
    "create_sector_ranking(df_long,\"percentilerisk\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "8e65266e-63fb-4959-8f68-87ca1441be87",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "from datetime import datetime\n",
    "import pandas as pd\n",
    "# Unified configuration dictionary\n",
    "MODEL_CONFIG = {\n",
    "    'percentilerisk': {\n",
    "        'model_name': \"Risks over Issues\",\n",
    "        'intro': (\n",
    "            \"The model attempt to identity the three main vategories of risks over weekly data\"\n",
    "            \"sometimes these risks can be leading indicators of future price changes | \"\n",
    "            '<a href=\"https://sov.ai\">Sov.ai™</a>'\n",
    "        ),\n",
    "        'start_title': {\n",
    "            True: \"Change in Corporate Risks\",\n",
    "            False: \"Level of Corporate Risks\"\n",
    "        },\n",
    "        'freq':'weekly',\n",
    "        'data_function': select_groups,\n",
    "        'title_template': \"{start_title} - {model_name} ({month_year})\"\n",
    "    },\n",
    "}\n",
    "\n",
    "def generate_title_and_intro(sort_column, frequency):\n",
    "    \"\"\"\n",
    "    Generates the title, retrieves the intro, and returns the data function based on sort_column and frequency.\n",
    "    \n",
    "    Parameters:\n",
    "    - sort_column (str): The column to sort by.\n",
    "    - frequency (bool): Determines the start title based on change or level.\n",
    "    \n",
    "    Returns:\n",
    "    - tuple: (title, intro, data_function)\n",
    "    \"\"\"\n",
    "    if sort_column not in MODEL_CONFIG:\n",
    "        valid_columns = ', '.join(MODEL_CONFIG.keys())\n",
    "        raise ValueError(f\"Invalid sort_column: '{sort_column}'. Available options are: {valid_columns}\")\n",
    "    \n",
    "    config = MODEL_CONFIG[sort_column]\n",
    "    \n",
    "    # Convert frequency to boolean; treat None as False\n",
    "    frequency_bool = bool(frequency)\n",
    "    \n",
    "    # Get the appropriate start_title based on frequency\n",
    "    start_title = config['start_title'].get(frequency_bool, f\"{config['model_name']} Prediction\")\n",
    "    \n",
    "    # Get current date in \"Month Year\" format\n",
    "    current_date = datetime.now()\n",
    "\n",
    "    if config[\"freq\"] == \"month\":\n",
    "        title_year = current_date.strftime(\"%B %Y\")  # e.g., \"October 2024\"\n",
    "    else:\n",
    "        title_year = f\"Week {current_date.strftime('%U')}, {current_date.strftime('%Y')}\"  # e.g., \"Week 42, 2024\"\n",
    "\n",
    "    \n",
    "    # Construct the full title using the template\n",
    "    title = config['title_template'].format(\n",
    "        start_title=start_title,\n",
    "        model_name=config['model_name'],\n",
    "        month_year=title_year\n",
    "    )\n",
    "    \n",
    "    # Get the intro text\n",
    "    intro = config['intro']\n",
    "    \n",
    "    # Get the data function\n",
    "    data_function = config['data_function']\n",
    "    \n",
    "    return title, intro, data_function\n",
    "\n",
    "title, intro, data_func = generate_title_and_intro('percentilerisk', \"difference\")\n",
    "\n",
    "# intro"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "d81e2c30-ac8f-4805-86fe-9bf0f170ee18",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Condition 1: market_cap>100 (Standard filter)\n",
      "\n",
      "Filtering Results:\n",
      "┌─────────────────┬─────────────────┬─────────────────┬─────────────────┐\n",
      "│ Step            │   Total Tickers │         Removed │            Left │\n",
      "┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼\n",
      "│ Initial         │           6,593 │               - │               - │\n",
      "│ Condition 1     │           3,736 │           2,857 │           3,736 │\n",
      "┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼\n",
      "│ Final           │           6,593 │           2,857 │           3,736 │\n",
      "└─────────────────┴─────────────────┴─────────────────┴─────────────────┘\n",
      "Warning: Only 3736 out of 3758 filtered companies found in df_multi.\n",
      "Existing chart found:\n",
      "Chart ID: F320K\n",
      "Data added successfully\n",
      "Chart updated successfully\n",
      "Update result\n",
      "Chart published successfully\n",
      "Published Chart URL: [{'id': 'standalone', 'url': 'https://www.datawrapper.de/_/F320K/?v=7', 'name': 'For sharing'}]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <iframe\n",
       "            width=\"1000\"\n",
       "            height=\"600\"\n",
       "            src=\"https://datawrapper.dwcdn.net/F320K/7/\"\n",
       "            frameborder=\"0\"\n",
       "            allowfullscreen\n",
       "            \n",
       "        ></iframe>\n",
       "        "
      ],
      "text/plain": [
       "<IPython.lib.display.IFrame at 0x2855c3850>"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "from datawrapper import Datawrapper\n",
    "from IPython.display import IFrame\n",
    "from datetime import datetime\n",
    "\n",
    "def get_or_create_chart(dw, title, chart_type):\n",
    "    # Try to find an existing chart with the given title\n",
    "    charts = dw.get_charts(search=title, limit=1)\n",
    "    \n",
    "    if charts['total'] > 0:\n",
    "        # If a chart is found, return its ID\n",
    "        print(\"Existing chart found:\")\n",
    "        return charts['list'][0]['id']\n",
    "    else:\n",
    "        # If no chart is found, create a new one\n",
    "        print(\"No existing chart found. Creating a new one.\")\n",
    "        new_chart = dw.create_chart(title=title, chart_type=chart_type)\n",
    "        print(\"New chart created:\")\n",
    "        return new_chart['id']\n",
    "\n",
    "def get_color_scheme(selection):\n",
    "    if selection == \"smallest\":\n",
    "        return [\n",
    "            {\"color\": \"#f0f9e8\", \"position\": 0},\n",
    "            {\"color\": \"#b6e3bb\", \"position\": 0.16666666666666666},\n",
    "            {\"color\": \"#75c8c5\", \"position\": 0.3333333333333333},\n",
    "            {\"color\": \"#4ba8c9\", \"position\": 0.5},\n",
    "            {\"color\": \"#2989bd\", \"position\": 0.6666666666666666},\n",
    "            {\"color\": \"#0a6aad\", \"position\": 0.8333333333333334},\n",
    "            {\"color\": \"#254b8c\", \"position\": 1}\n",
    "        ]\n",
    "    elif selection == \"largest\":\n",
    "        return [\n",
    "            {\"color\": \"#fff5f0\", \"position\": 0},\n",
    "            {\"color\": \"#fff5f0\", \"position\": 0.16666666666666666},\n",
    "            {\"color\": \"#fee0d2\", \"position\": 0.3333333333333333},\n",
    "            {\"color\": \"#fcbba1\", \"position\": 0.5},\n",
    "            {\"color\": \"#fc9272\", \"position\": 0.6666666666666666},\n",
    "            {\"color\": \"#fb6a4a\", \"position\": 0.8333333333333334},\n",
    "            {\"color\": \"#ef3b2c\", \"position\": 1}\n",
    "        ]\n",
    "    else:\n",
    "        raise ValueError(\"selection must be either 'largest' or 'smallest'\")\n",
    "\n",
    "# Usage:\n",
    "\n",
    "def create_sort_table(sort_column='sansmarket', frequency=None, top_n=10, selection=\"largest\",df=None):\n",
    "    # Function to create sector ranking CSV data\n",
    "\n",
    "    title, intro, data_func = generate_title_and_intro(sort_column, frequency)\n",
    "\n",
    " \n",
    "    df = data_func(frequency=frequency)\n",
    "\n",
    "\n",
    "    csv_data = create_sector_ranking(df, sort_column=sort_column, top_n=top_n, select=selection)\n",
    "\n",
    "\n",
    "    # Initialize Datawrapper with your access token\n",
    "    dw = Datawrapper(access_token=\"Z9FqsGcQfCaeERekoelA1IjU4RBo4XcPhfsGY935YVNol54uN3QzITdFSZphaQov\")\n",
    "    \n",
    "    chart_id = get_or_create_chart(dw, title, \"tables\")\n",
    "    print(f\"Chart ID: {chart_id}\")\n",
    "    \n",
    "    try:\n",
    "        # Update the chart with new data\n",
    "        dw.add_data(chart_id, data=csv_data)\n",
    "        print(\"Data added successfully\")\n",
    "    except Exception as e:\n",
    "        print(f\"Error adding data: {str(e)}\")\n",
    "        return None\n",
    "    \n",
    "    # Define the updated metadata\n",
    "    updated_metadata = {\n",
    "        \"data\": {\n",
    "            \"transpose\": False,\n",
    "            \"vertical-header\": True,\n",
    "            \"horizontal-header\": True,\n",
    "            \"upload-method\": \"copy\"\n",
    "        },\n",
    "        \"visualize\": {\n",
    "            \"dark-mode-invert\": True,\n",
    "            \"perPage\": 10,  # Set this to 10 to show 10 items per page\n",
    "            \"pagination\": {\n",
    "                \"enabled\": True,\n",
    "                \"position\": \"bottom\",  # You can change this to \"top\" if you prefer\n",
    "                \"pagesPerScreen\": 10  # This will show 10 page numbers in the pagination controls\n",
    "            },\n",
    "            \"highlighted-series\": [],\n",
    "            \"highlighted-values\": [],\n",
    "            \"sharing\": {\"enabled\": False, \"url\": f\"https://www.datawrapper.de/_/{chart_id}\", \"auto\": False},\n",
    "            \"rows\": {\n",
    "                \"header\": {\"rows\": 2},\n",
    "                \"row--1\": {\n",
    "                    \"style\": {\"bold\": False, \"color\": False, \"italic\": False, \"fontSize\": 1, \"underline\": False, \"background\": False},\n",
    "                    \"format\": \"0,0.[00]\",\n",
    "                    \"moveTo\": \"top\",\n",
    "                    \"sticky\": False,\n",
    "                    \"moveRow\": False,\n",
    "                    \"stickTo\": \"top\",\n",
    "                    \"borderTop\": \"none\",\n",
    "                    \"borderBottom\": \"none\",\n",
    "                    \"borderTopColor\": \"#333333\",\n",
    "                    \"overrideFormat\": False,\n",
    "                    \"borderBottomColor\": \"#333333\"\n",
    "                }\n",
    "            },\n",
    "            \"header\": {\n",
    "                \"style\": {\"bold\": True, \"color\": False, \"italic\": False, \"fontSize\": 1.1, \"background\": False},\n",
    "                \"borderTop\": \"none\",\n",
    "                \"borderBottom\": \"2px\",\n",
    "                \"borderTopColor\": \"#333333\",\n",
    "                \"borderBottomColor\": \"#333333\"\n",
    "            },\n",
    "            \"legend\": {\n",
    "                \"size\": 170,\n",
    "                \"labels\": \"ranges\",\n",
    "                \"enabled\": False,\n",
    "                \"reverse\": False,\n",
    "                \"labelMax\": \"high\",\n",
    "                \"labelMin\": \"low\",\n",
    "                \"position\": \"above\",\n",
    "                \"interactive\": False,\n",
    "                \"labelCenter\": \"medium\",\n",
    "                \"labelFormat\": \"0,0.[00]\",\n",
    "                \"customLabels\": []\n",
    "            },\n",
    "            \"columns\": {\n",
    "                \"\": {\"align\": \"left\", \"title\": \"Rank\", \"width\": \"auto\"},\n",
    "                \"X.1\": {\"heatmap\": {\"enabled\": True}},\n",
    "                f\"*{sort_column}\": {\n",
    "                    \"type\": \"number\",\n",
    "                    \"format\": \"0.00\",\n",
    "                    \"heatmap\": {\"colors\": {\"max\": \"#ff0000\", \"min\": \"#ffcccb\"}, \"ranges\": {\"max\": 30, \"min\": -50}, \"enabled\": True}\n",
    "                },\n",
    "                \"~~~Accounting Risk~~~\": {\"format\": \"0.[00]%\", \"heatmap\": {\"enabled\": True}},\n",
    "                \"~~~Events Risk~~~\": {\"format\": \"0.[00]%\", \"heatmap\": {\"enabled\": True}},\n",
    "                \"~~~Misstatement Risk~~~\": {\"format\": \"0.[00]%\", \"heatmap\": {\"enabled\": True}},\n",
    "                \"~~~Overall Risk~~~\": {\"format\": \"0.[00]%\", \"heatmap\": {\"enabled\": True}},\n",
    "\n",
    "            },\n",
    "            \"heatmap\": {\n",
    "                \"map\": {},\n",
    "                \"mode\": \"continuous\",\n",
    "                \"stops\": \"equidistant\",\n",
    "            \"colors\": get_color_scheme(selection),\n",
    "                \"palette\": 0,\n",
    "                \"rangeMax\": \"\",\n",
    "                \"rangeMin\": \"\",\n",
    "                \"stopCount\": 5,\n",
    "                \"hideValues\": False,\n",
    "                \"customStops\": [],\n",
    "                \"rangeCenter\": \"\",\n",
    "                \"categoryOrder\": [],\n",
    "                \"interpolation\": \"equidistant\",\n",
    "                \"categoryLabels\": {}\n",
    "            },\n",
    "            \"perPage\": 10,\n",
    "            \"striped\": False,\n",
    "            \"markdown\": True,\n",
    "            \"showRank\": False,\n",
    "            \"sortTable\": False,\n",
    "            \"pagination\": {\"enabled\": True, \"position\": \"bottom\"},\n",
    "            \"searchable\": False,\n",
    "            \"showHeader\": True,\n",
    "            \"compactMode\": True,\n",
    "            \"sortDirection\": \"desc\",\n",
    "            \"chart-type-set\": True,\n",
    "            \"mobileFallback\": False,\n",
    "            \"mergeEmptyCells\": True,\n",
    "            \"firstRowIsHeader\": True,\n",
    "            \"firstColumnIsSticky\": True\n",
    "        },\n",
    "        \"describe\": {\n",
    "            \"intro\": intro,\n",
    "            \"byline\": \"\",\n",
    "            \"source-name\": \"\",\n",
    "            \"source-url\": \"\",\n",
    "            # \"notes\": notes,\n",
    "            \"hide-title\": False\n",
    "        },\n",
    "        \"publish\": {\n",
    "            \"embed-width\": 600,\n",
    "            \"embed-height\": 510,\n",
    "            \"blocks\": {\n",
    "                \"logo\": {\"enabled\": False},\n",
    "                \"embed\": False,\n",
    "                \"download-pdf\": False,\n",
    "                \"download-svg\": False,\n",
    "                \"get-the-data\": True,\n",
    "                \"download-image\": False\n",
    "            },\n",
    "            \"autoDarkMode\": False,\n",
    "            \"chart-height\": 395,\n",
    "            \"force-attribution\": False\n",
    "        }\n",
    "    }\n",
    "    \n",
    "    try:\n",
    "        # Update the chart with the new metadata\n",
    "        result = dw.update_chart(\n",
    "            chart_id,\n",
    "            metadata=updated_metadata\n",
    "        )\n",
    "        print(\"Chart updated successfully\")\n",
    "        print(f\"Update result\")\n",
    "    except Exception as e:\n",
    "        print(f\"Error updating chart: {str(e)}\")\n",
    "        return None\n",
    "    \n",
    "    try:\n",
    "        # Publish the updated chart\n",
    "        publish_result = dw.publish_chart(chart_id)\n",
    "        print(\"Chart published successfully\")\n",
    "        # print(f\"Publish result: {publish_result}\")\n",
    "    except Exception as e:\n",
    "        print(f\"Error publishing chart: {str(e)}\")\n",
    "        return None\n",
    "    \n",
    "    try:\n",
    "        # Retrieve and print the published chart URL\n",
    "        published_url = dw.get_chart_display_urls(chart_id)\n",
    "        print(\"Published Chart URL:\", published_url)\n",
    "    except Exception as e:\n",
    "        print(f\"Error getting chart URL: {str(e)}\")\n",
    "        return None\n",
    "    \n",
    "    # Extract the public URL from the publish result\n",
    "    public_url = publish_result[\"data\"][\"publicUrl\"]\n",
    "    \n",
    "    # Display the chart within the notebook \n",
    "    return IFrame(src=public_url, width=1000, height=600)\n",
    "\n",
    "# Call the function\n",
    "create_sort_table(sort_column='percentilerisk', frequency=None, top_n=20, selection=\"largest\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2514fa06-5c38-470e-9852-aebd73116415",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "for metric in metrics:\n",
    "    df_last_6_weeks[f'{metric}'] = df_last_6_weeks.groupby('ticker')[metric].diff()\n",
    "\n",
    "# Drop the first week (which will have NaN differences)\n",
    "df_last_6_weeks = df_last_6_weeks.dropna(subset=[f'{metric}' for metric in metrics])\n",
    "\n",
    "df_risks = pd.merge(df_last_6_weeks.reset_index(),tickers_meta[[\"ticker\",\"sector\",\"industry\"]], on=\"ticker\", how=\"left\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "24a79b88-4114-49f3-9eac-d83871096215",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>ticker</th>\n",
       "      <th>date</th>\n",
       "      <th>accounting</th>\n",
       "      <th>accounting_ind_adjs</th>\n",
       "      <th>misstatement</th>\n",
       "      <th>misstatement_ind_adjs</th>\n",
       "      <th>events</th>\n",
       "      <th>events_ind_adjs</th>\n",
       "      <th>risk</th>\n",
       "      <th>risk_ind_adjs</th>\n",
       "      <th>sector</th>\n",
       "      <th>industry</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1289</td>\n",
       "      <td>A</td>\n",
       "      <td>2024-08-02</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.501</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.565</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.356</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Diagnostics &amp; Research</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1290</td>\n",
       "      <td>A</td>\n",
       "      <td>2024-08-09</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.501</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.565</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.356</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Diagnostics &amp; Research</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1291</td>\n",
       "      <td>A</td>\n",
       "      <td>2024-08-16</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.501</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.565</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.356</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Diagnostics &amp; Research</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1292</td>\n",
       "      <td>A</td>\n",
       "      <td>2024-08-23</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.501</td>\n",
       "      <td>0.085</td>\n",
       "      <td>0.752</td>\n",
       "      <td>0.028</td>\n",
       "      <td>0.418</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Diagnostics &amp; Research</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1293</td>\n",
       "      <td>A</td>\n",
       "      <td>2024-08-30</td>\n",
       "      <td>0.006</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.501</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.752</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.419</td>\n",
       "      <td>Healthcare</td>\n",
       "      <td>Diagnostics &amp; Research</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   index ticker       date  accounting  accounting_ind_adjs  misstatement  \\\n",
       "0   1289      A 2024-08-02      -0.000                0.002         0.000   \n",
       "1   1290      A 2024-08-09       0.000                0.002         0.000   \n",
       "2   1291      A 2024-08-16      -0.000                0.002         0.000   \n",
       "3   1292      A 2024-08-23      -0.000                0.002         0.000   \n",
       "4   1293      A 2024-08-30       0.006                0.003         0.000   \n",
       "\n",
       "   misstatement_ind_adjs  events  events_ind_adjs   risk  risk_ind_adjs  \\\n",
       "0                  0.501   0.000            0.565 -0.000          0.356   \n",
       "1                  0.501   0.000            0.565  0.000          0.356   \n",
       "2                  0.501   0.000            0.565 -0.000          0.356   \n",
       "3                  0.501   0.085            0.752  0.028          0.418   \n",
       "4                  0.501   0.000            0.752  0.002          0.419   \n",
       "\n",
       "       sector                industry  \n",
       "0  Healthcare  Diagnostics & Research  \n",
       "1  Healthcare  Diagnostics & Research  \n",
       "2  Healthcare  Diagnostics & Research  \n",
       "3  Healthcare  Diagnostics & Research  \n",
       "4  Healthcare  Diagnostics & Research  "
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_risks.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "f93d6fd6-bb41-4f04-9bd6-78ca6473fca2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plotly.com"
       },
       "data": [
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Healthcare",
          "Basic Materials",
          "Consumer Defensive",
          "Industrials",
          "Financial Services",
          "Technology",
          "Consumer Cyclical",
          "Real Estate",
          "Communication Services",
          "Energy",
          "Utilities",
          null,
          null
         ],
         "xaxis": "x",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y",
         "z": [
          [
           1,
           -1,
           0.1174016,
           -0.049593687,
           -0.11218476,
           0.50029147,
           0.4505074,
           0.38025033,
           0.66039765,
           -0.66497076,
           0.25170374
          ],
          [
           -0.6381419,
           -1,
           1,
           0.68653584,
           0.5947219,
           0.52104425,
           -0.7828986,
           0.3592651,
           -0.005420983,
           0.10520971,
           0.254838
          ],
          [
           -1,
           -0.09989762,
           -0.16701066,
           0.4485699,
           -0.9550136,
           -0.34853512,
           -0.27794933,
           -0.18551832,
           0.29342294,
           0.4378333,
           1
          ],
          [
           -0.37754202,
           -1,
           1,
           0.70416796,
           0.5725672,
           0.61867356,
           -0.57710403,
           0.4564575,
           0.18097663,
           0.07602537,
           0.37284517
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Healthcare",
          "Basic Materials",
          "Consumer Defensive",
          "Industrials",
          "Financial Services",
          "Technology",
          "Consumer Cyclical",
          "Real Estate",
          "Communication Services",
          "Energy",
          "Utilities",
          null,
          null
         ],
         "xaxis": "x2",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y2",
         "z": [
          [
           0.88835883,
           -0.20176673,
           -1,
           1,
           0.7847382,
           0.26143074,
           0.23097324,
           0.71832407,
           0.031361222,
           0.6643728,
           0.29514098
          ],
          [
           -0.5600353,
           -1,
           0.059274077,
           1,
           0.517889,
           0.18761122,
           -0.46046144,
           0.25314176,
           -0.39874184,
           0.2372508,
           -0.011397183
          ],
          [
           -0.42961186,
           0.15804291,
           -0.03908956,
           0.678452,
           -1,
           -0.061395288,
           -0.113171995,
           0.07956827,
           0.552022,
           0.8795639,
           1
          ],
          [
           -0.38206077,
           -1,
           -0.2752847,
           1,
           0.51163614,
           0.12254369,
           -0.44184655,
           0.28522837,
           -0.42443895,
           0.27123702,
           -0.024814546
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Healthcare",
          "Basic Materials",
          "Consumer Defensive",
          "Industrials",
          "Financial Services",
          "Technology",
          "Consumer Cyclical",
          "Real Estate",
          "Communication Services",
          "Energy",
          "Utilities",
          null,
          null
         ],
         "xaxis": "x3",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y3",
         "z": [
          [
           -0.67670673,
           0.9003813,
           -1,
           1,
           0.59317625,
           0.965996,
           0.36706364,
           0.22731125,
           0.7742388,
           0.743029,
           -0.40646625
          ],
          [
           -0.7082081,
           1,
           -1,
           0.94603837,
           0.23622358,
           0.49461126,
           -0.021746755,
           0.6428455,
           0.25816393,
           0.24376833,
           0.24434614
          ],
          [
           -0.4151777,
           -0.12516832,
           -0.06496751,
           0.29612708,
           -1,
           -0.16439539,
           -0.27114666,
           -0.07083547,
           0.21390152,
           0.29077935,
           1
          ],
          [
           -0.70897496,
           1,
           -1,
           0.9818355,
           0.28417933,
           0.58494985,
           0.0473547,
           0.5878712,
           0.3632728,
           0.34783542,
           0.17287529
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Healthcare",
          "Basic Materials",
          "Consumer Defensive",
          "Industrials",
          "Financial Services",
          "Technology",
          "Consumer Cyclical",
          "Real Estate",
          "Communication Services",
          "Energy",
          "Utilities",
          null,
          null
         ],
         "xaxis": "x4",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y4",
         "z": [
          [
           0.41206777,
           0.6865473,
           0.25651324,
           -0.73651874,
           -1,
           -0.16452801,
           -0.70240957,
           -0.12160534,
           -0.05776483,
           1,
           0.3007015
          ],
          [
           -0.0035730004,
           0.61110485,
           0.2172091,
           1,
           -0.114852905,
           -1,
           -0.6467762,
           -0.7476023,
           -0.5998098,
           -0.4200228,
           -0.2807244
          ],
          [
           -0.18375772,
           0.22848392,
           0.055327892,
           0.5612395,
           -1,
           0.02162981,
           -0.0054914355,
           0.24974287,
           0.5018015,
           0.50919497,
           1
          ],
          [
           0.10070324,
           0.78508854,
           0.31426013,
           1,
           -0.2339868,
           -1,
           -0.71081746,
           -0.726796,
           -0.5578344,
           -0.22627842,
           -0.16401851
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Healthcare",
          "Basic Materials",
          "Consumer Defensive",
          "Industrials",
          "Financial Services",
          "Technology",
          "Consumer Cyclical",
          "Real Estate",
          "Communication Services",
          "Energy",
          "Utilities",
          null,
          null
         ],
         "xaxis": "x5",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y5",
         "z": [
          [
           -1,
           -0.13334459,
           0.39605868,
           -0.44798428,
           1,
           0.4400109,
           0.30189288,
           0.2525562,
           0.5354034,
           -0.44171536,
           -0.116901934
          ],
          [
           -0.4909563,
           0.5316465,
           0.7709248,
           0.37318993,
           0.057970524,
           0.40451515,
           -1,
           0.08625674,
           0.9153298,
           -0.050391972,
           1
          ],
          [
           -1,
           0.66962063,
           -0.102279365,
           0.44801247,
           -0.43194997,
           0.10389161,
           0.25224137,
           0.6926198,
           0.8646332,
           0.88601315,
           1
          ],
          [
           -1,
           0.5119512,
           0.5101943,
           0.26480174,
           -0.08319187,
           0.29717016,
           -0.7850986,
           0.2216667,
           0.978987,
           0.081245065,
           1
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Healthcare",
          "Basic Materials",
          "Consumer Defensive",
          "Industrials",
          "Financial Services",
          "Technology",
          "Consumer Cyclical",
          "Real Estate",
          "Communication Services",
          "Energy",
          "Utilities",
          null,
          null
         ],
         "xaxis": "x6",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y6",
         "z": [
          [
           -0.1349771,
           1,
           0.24750578,
           0.7378298,
           -0.57957685,
           0.55929685,
           0.80775833,
           0.69105744,
           0.7900299,
           0.44540966,
           -1
          ],
          [
           0.44102275,
           0.96069694,
           0.78145313,
           0.7210474,
           0.99918675,
           0.47376966,
           0.0014387369,
           0.8255265,
           0.54581594,
           -1,
           1
          ],
          [
           -0.25092608,
           -0.42490578,
           -0.17554462,
           0.7659389,
           0.4310565,
           0.13847709,
           0.6027671,
           -1,
           -0.20555276,
           0.055252552,
           1
          ],
          [
           0.30160975,
           1,
           0.6984798,
           0.7280669,
           0.7722968,
           0.45385754,
           0.038980722,
           0.812891,
           0.56159365,
           -1,
           0.70422506
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Healthcare",
          "Basic Materials",
          "Consumer Defensive",
          "Industrials",
          "Financial Services",
          "Technology",
          "Consumer Cyclical",
          "Real Estate",
          "Communication Services",
          "Energy",
          "Utilities",
          null,
          null
         ],
         "xaxis": "x7",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y7",
         "z": [
          [
           0.051326394,
           -0.24410802,
           0.91871,
           -1,
           0.30040073,
           -0.57043314,
           1,
           -0.46948975,
           -0.0851199,
           -0.5201055,
           0.25745225
          ],
          [
           -1,
           -0.34331942,
           -0.5090898,
           1,
           -0.72980434,
           -0.47707874,
           -0.19406223,
           -0.49111313,
           -0.16161036,
           0.0674386,
           -0.26072615
          ],
          [
           -0.14787805,
           -0.59863204,
           -0.089665174,
           0.8540765,
           0.49658847,
           0.23057854,
           0.7127423,
           -1,
           -0.31943744,
           -0.0011441112,
           1
          ],
          [
           -1,
           -0.33617485,
           -0.23304546,
           1,
           -0.630107,
           -0.5617758,
           0.14703667,
           -0.56078327,
           -0.09052801,
           0.062351346,
           -0.109099805
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": true,
         "type": "heatmap",
         "x": [
          "Healthcare",
          "Basic Materials",
          "Consumer Defensive",
          "Industrials",
          "Financial Services",
          "Technology",
          "Consumer Cyclical",
          "Real Estate",
          "Communication Services",
          "Energy",
          "Utilities",
          null,
          null
         ],
         "xaxis": "x8",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y8",
         "z": [
          [
           -0.80530703,
           -0.5288011,
           -0.3389688,
           0.20996308,
           1,
           -0.14756715,
           -0.8181075,
           -0.38051647,
           -0.3727175,
           -0.48394066,
           -1
          ],
          [
           -1,
           0.74090946,
           -0.13368344,
           0.98713994,
           0.29144382,
           0.079969525,
           0.060003877,
           -0.91934264,
           -0.28990173,
           -0.4465868,
           1
          ],
          [
           0.19938242,
           -1,
           -0.025914788,
           1,
           0.37532377,
           0.16861546,
           0.5351323,
           -0.9957719,
           -0.83941245,
           -0.23310441,
           0.6637001
          ],
          [
           -1,
           0.5596565,
           -0.12434518,
           1,
           0.6372138,
           0.11567962,
           -0.09791428,
           -0.812217,
           -0.27223378,
           -0.43532532,
           0.6505419
          ]
         ],
         "zmax": 1,
         "zmin": -1
        }
       ],
       "layout": {
        "annotations": [
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "2024-08-30",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.9999999999999998,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "2024-09-06",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.8807999999999998,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "2024-09-13",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.7615999999999998,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "2024-09-20",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.6423999999999999,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "2024-09-27",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.5231999999999999,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "2024-10-04",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.40399999999999997,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "2024-10-11",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.2848,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "2024-10-18",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.1656,
          "yanchor": "bottom",
          "yref": "paper"
         }
        ],
        "height": 800,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#f2f5fa"
            },
            "error_y": {
             "color": "#f2f5fa"
            },
            "marker": {
             "line": {
              "color": "rgb(17,17,17)",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "rgb(17,17,17)",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#A2B1C6",
             "gridcolor": "#506784",
             "linecolor": "#506784",
             "minorgridcolor": "#506784",
             "startlinecolor": "#A2B1C6"
            },
            "baxis": {
             "endlinecolor": "#A2B1C6",
             "gridcolor": "#506784",
             "linecolor": "#506784",
             "minorgridcolor": "#506784",
             "startlinecolor": "#A2B1C6"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "line": {
              "color": "#283442"
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "line": {
              "color": "#283442"
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#506784"
             },
             "line": {
              "color": "rgb(17,17,17)"
             }
            },
            "header": {
             "fill": {
              "color": "#2a3f5f"
             },
             "line": {
              "color": "rgb(17,17,17)"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#f2f5fa",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#f2f5fa"
          },
          "geo": {
           "bgcolor": "rgb(17,17,17)",
           "lakecolor": "rgb(17,17,17)",
           "landcolor": "rgb(17,17,17)",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "#506784"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "dark"
          },
          "paper_bgcolor": "rgb(17,17,17)",
          "plot_bgcolor": "rgb(17,17,17)",
          "polar": {
           "angularaxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           },
           "bgcolor": "rgb(17,17,17)",
           "radialaxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "rgb(17,17,17)",
            "gridcolor": "#506784",
            "gridwidth": 2,
            "linecolor": "#506784",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#C8D4E3"
           },
           "yaxis": {
            "backgroundcolor": "rgb(17,17,17)",
            "gridcolor": "#506784",
            "gridwidth": 2,
            "linecolor": "#506784",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#C8D4E3"
           },
           "zaxis": {
            "backgroundcolor": "rgb(17,17,17)",
            "gridcolor": "#506784",
            "gridwidth": 2,
            "linecolor": "#506784",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#C8D4E3"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#f2f5fa"
           }
          },
          "sliderdefaults": {
           "bgcolor": "#C8D4E3",
           "bordercolor": "rgb(17,17,17)",
           "borderwidth": 1,
           "tickwidth": 0
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           },
           "bgcolor": "rgb(17,17,17)",
           "caxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "updatemenudefaults": {
           "bgcolor": "#506784",
           "borderwidth": 0
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "#283442",
           "linecolor": "#506784",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "#283442",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "#283442",
           "linecolor": "#506784",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "#283442",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Weekly Normalized Metrics by Sector (Last 8 Weeks)"
        },
        "width": 1200,
        "xaxis": {
         "anchor": "y",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x8",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis2": {
         "anchor": "y2",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x8",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis3": {
         "anchor": "y3",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x8",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis4": {
         "anchor": "y4",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x8",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis5": {
         "anchor": "y5",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x8",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis6": {
         "anchor": "y6",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x8",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis7": {
         "anchor": "y7",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x8",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis8": {
         "anchor": "y8",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "range": [
          -0.5,
          10.5
         ],
         "tickangle": 45,
         "title": {
          "text": "Sector"
         },
         "type": "category"
        },
        "yaxis": {
         "anchor": "x",
         "autorange": true,
         "domain": [
          0.9207999999999998,
          0.9999999999999998
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis2": {
         "anchor": "x2",
         "autorange": true,
         "domain": [
          0.8015999999999999,
          0.8807999999999998
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis3": {
         "anchor": "x3",
         "autorange": true,
         "domain": [
          0.6823999999999999,
          0.7615999999999998
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis4": {
         "anchor": "x4",
         "autorange": true,
         "domain": [
          0.5631999999999999,
          0.6423999999999999
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis5": {
         "anchor": "x5",
         "autorange": true,
         "domain": [
          0.44399999999999995,
          0.5231999999999999
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis6": {
         "anchor": "x6",
         "autorange": true,
         "domain": [
          0.3248,
          0.40399999999999997
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis7": {
         "anchor": "x7",
         "autorange": true,
         "domain": [
          0.2056,
          0.2848
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis8": {
         "anchor": "x8",
         "autorange": true,
         "domain": [
          0,
          0.1656
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        }
       }
      },
      "image/png": "",
      "text/html": [
       "<div>                            <div id=\"71153bb0-208c-425b-ba4f-105ebe85a17f\" class=\"plotly-graph-div\" style=\"height:800px; width:1200px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"71153bb0-208c-425b-ba4f-105ebe85a17f\")) {                    Plotly.newPlot(                        \"71153bb0-208c-425b-ba4f-105ebe85a17f\",                        [{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Healthcare\",\"Basic Materials\",\"Consumer Defensive\",\"Industrials\",\"Financial Services\",\"Technology\",\"Consumer Cyclical\",\"Real Estate\",\"Communication Services\",\"Energy\",\"Utilities\",null,null],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[1.0,-1.0,0.1174016,-0.049593687,-0.11218476,0.50029147,0.4505074,0.38025033,0.66039765,-0.66497076,0.25170374],[-0.6381419,-1.0,1.0,0.68653584,0.5947219,0.52104425,-0.7828986,0.3592651,-0.005420983,0.10520971,0.254838],[-1.0,-0.09989762,-0.16701066,0.4485699,-0.9550136,-0.34853512,-0.27794933,-0.18551832,0.29342294,0.4378333,1.0],[-0.37754202,-1.0,1.0,0.70416796,0.5725672,0.61867356,-0.57710403,0.4564575,0.18097663,0.07602537,0.37284517]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Healthcare\",\"Basic Materials\",\"Consumer Defensive\",\"Industrials\",\"Financial Services\",\"Technology\",\"Consumer Cyclical\",\"Real Estate\",\"Communication Services\",\"Energy\",\"Utilities\",null,null],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[0.88835883,-0.20176673,-1.0,1.0,0.7847382,0.26143074,0.23097324,0.71832407,0.031361222,0.6643728,0.29514098],[-0.5600353,-1.0,0.059274077,1.0,0.517889,0.18761122,-0.46046144,0.25314176,-0.39874184,0.2372508,-0.011397183],[-0.42961186,0.15804291,-0.03908956,0.678452,-1.0,-0.061395288,-0.113171995,0.07956827,0.552022,0.8795639,1.0],[-0.38206077,-1.0,-0.2752847,1.0,0.51163614,0.12254369,-0.44184655,0.28522837,-0.42443895,0.27123702,-0.024814546]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Healthcare\",\"Basic Materials\",\"Consumer Defensive\",\"Industrials\",\"Financial Services\",\"Technology\",\"Consumer Cyclical\",\"Real Estate\",\"Communication Services\",\"Energy\",\"Utilities\",null,null],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[-0.67670673,0.9003813,-1.0,1.0,0.59317625,0.965996,0.36706364,0.22731125,0.7742388,0.743029,-0.40646625],[-0.7082081,1.0,-1.0,0.94603837,0.23622358,0.49461126,-0.021746755,0.6428455,0.25816393,0.24376833,0.24434614],[-0.4151777,-0.12516832,-0.06496751,0.29612708,-1.0,-0.16439539,-0.27114666,-0.07083547,0.21390152,0.29077935,1.0],[-0.70897496,1.0,-1.0,0.9818355,0.28417933,0.58494985,0.0473547,0.5878712,0.3632728,0.34783542,0.17287529]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Healthcare\",\"Basic Materials\",\"Consumer Defensive\",\"Industrials\",\"Financial Services\",\"Technology\",\"Consumer Cyclical\",\"Real Estate\",\"Communication Services\",\"Energy\",\"Utilities\",null,null],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[0.41206777,0.6865473,0.25651324,-0.73651874,-1.0,-0.16452801,-0.70240957,-0.12160534,-0.05776483,1.0,0.3007015],[-0.0035730004,0.61110485,0.2172091,1.0,-0.114852905,-1.0,-0.6467762,-0.7476023,-0.5998098,-0.4200228,-0.2807244],[-0.18375772,0.22848392,0.055327892,0.5612395,-1.0,0.02162981,-0.0054914355,0.24974287,0.5018015,0.50919497,1.0],[0.10070324,0.78508854,0.31426013,1.0,-0.2339868,-1.0,-0.71081746,-0.726796,-0.5578344,-0.22627842,-0.16401851]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x4\",\"yaxis\":\"y4\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Healthcare\",\"Basic Materials\",\"Consumer Defensive\",\"Industrials\",\"Financial Services\",\"Technology\",\"Consumer Cyclical\",\"Real Estate\",\"Communication Services\",\"Energy\",\"Utilities\",null,null],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[-1.0,-0.13334459,0.39605868,-0.44798428,1.0,0.4400109,0.30189288,0.2525562,0.5354034,-0.44171536,-0.116901934],[-0.4909563,0.5316465,0.7709248,0.37318993,0.057970524,0.40451515,-1.0,0.08625674,0.9153298,-0.050391972,1.0],[-1.0,0.66962063,-0.102279365,0.44801247,-0.43194997,0.10389161,0.25224137,0.6926198,0.8646332,0.88601315,1.0],[-1.0,0.5119512,0.5101943,0.26480174,-0.08319187,0.29717016,-0.7850986,0.2216667,0.978987,0.081245065,1.0]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x5\",\"yaxis\":\"y5\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Healthcare\",\"Basic Materials\",\"Consumer Defensive\",\"Industrials\",\"Financial Services\",\"Technology\",\"Consumer Cyclical\",\"Real Estate\",\"Communication Services\",\"Energy\",\"Utilities\",null,null],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[-0.1349771,1.0,0.24750578,0.7378298,-0.57957685,0.55929685,0.80775833,0.69105744,0.7900299,0.44540966,-1.0],[0.44102275,0.96069694,0.78145313,0.7210474,0.99918675,0.47376966,0.0014387369,0.8255265,0.54581594,-1.0,1.0],[-0.25092608,-0.42490578,-0.17554462,0.7659389,0.4310565,0.13847709,0.6027671,-1.0,-0.20555276,0.055252552,1.0],[0.30160975,1.0,0.6984798,0.7280669,0.7722968,0.45385754,0.038980722,0.812891,0.56159365,-1.0,0.70422506]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x6\",\"yaxis\":\"y6\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Healthcare\",\"Basic Materials\",\"Consumer Defensive\",\"Industrials\",\"Financial Services\",\"Technology\",\"Consumer Cyclical\",\"Real Estate\",\"Communication Services\",\"Energy\",\"Utilities\",null,null],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[0.051326394,-0.24410802,0.91871,-1.0,0.30040073,-0.57043314,1.0,-0.46948975,-0.0851199,-0.5201055,0.25745225],[-1.0,-0.34331942,-0.5090898,1.0,-0.72980434,-0.47707874,-0.19406223,-0.49111313,-0.16161036,0.0674386,-0.26072615],[-0.14787805,-0.59863204,-0.089665174,0.8540765,0.49658847,0.23057854,0.7127423,-1.0,-0.31943744,-0.0011441112,1.0],[-1.0,-0.33617485,-0.23304546,1.0,-0.630107,-0.5617758,0.14703667,-0.56078327,-0.09052801,0.062351346,-0.109099805]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x7\",\"yaxis\":\"y7\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":true,\"x\":[\"Healthcare\",\"Basic Materials\",\"Consumer Defensive\",\"Industrials\",\"Financial Services\",\"Technology\",\"Consumer Cyclical\",\"Real Estate\",\"Communication Services\",\"Energy\",\"Utilities\",null,null],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[-0.80530703,-0.5288011,-0.3389688,0.20996308,1.0,-0.14756715,-0.8181075,-0.38051647,-0.3727175,-0.48394066,-1.0],[-1.0,0.74090946,-0.13368344,0.98713994,0.29144382,0.079969525,0.060003877,-0.91934264,-0.28990173,-0.4465868,1.0],[0.19938242,-1.0,-0.025914788,1.0,0.37532377,0.16861546,0.5351323,-0.9957719,-0.83941245,-0.23310441,0.6637001],[-1.0,0.5596565,-0.12434518,1.0,0.6372138,0.11567962,-0.09791428,-0.812217,-0.27223378,-0.43532532,0.6505419]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x8\",\"yaxis\":\"y8\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#f2f5fa\"},\"error_y\":{\"color\":\"#f2f5fa\"},\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scattergl\"}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"baxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#506784\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"header\":{\"fill\":{\"color\":\"#2a3f5f\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#f2f5fa\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"rgb(17,17,17)\",\"plot_bgcolor\":\"rgb(17,17,17)\",\"polar\":{\"bgcolor\":\"rgb(17,17,17)\",\"angularaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"rgb(17,17,17)\",\"aaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#f2f5fa\"}},\"annotationdefaults\":{\"arrowcolor\":\"#f2f5fa\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"rgb(17,17,17)\",\"landcolor\":\"rgb(17,17,17)\",\"subunitcolor\":\"#506784\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"rgb(17,17,17)\"},\"title\":{\"x\":0.05},\"updatemenudefaults\":{\"bgcolor\":\"#506784\",\"borderwidth\":0},\"sliderdefaults\":{\"bgcolor\":\"#C8D4E3\",\"borderwidth\":1,\"bordercolor\":\"rgb(17,17,17)\",\"tickwidth\":0},\"mapbox\":{\"style\":\"dark\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"matches\":\"x8\",\"showticklabels\":false},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.9207999999999998,0.9999999999999998],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis2\":{\"anchor\":\"y2\",\"domain\":[0.0,1.0],\"matches\":\"x8\",\"showticklabels\":false},\"yaxis2\":{\"anchor\":\"x2\",\"domain\":[0.8015999999999999,0.8807999999999998],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis3\":{\"anchor\":\"y3\",\"domain\":[0.0,1.0],\"matches\":\"x8\",\"showticklabels\":false},\"yaxis3\":{\"anchor\":\"x3\",\"domain\":[0.6823999999999999,0.7615999999999998],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis4\":{\"anchor\":\"y4\",\"domain\":[0.0,1.0],\"matches\":\"x8\",\"showticklabels\":false},\"yaxis4\":{\"anchor\":\"x4\",\"domain\":[0.5631999999999999,0.6423999999999999],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis5\":{\"anchor\":\"y5\",\"domain\":[0.0,1.0],\"matches\":\"x8\",\"showticklabels\":false},\"yaxis5\":{\"anchor\":\"x5\",\"domain\":[0.44399999999999995,0.5231999999999999],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis6\":{\"anchor\":\"y6\",\"domain\":[0.0,1.0],\"matches\":\"x8\",\"showticklabels\":false},\"yaxis6\":{\"anchor\":\"x6\",\"domain\":[0.3248,0.40399999999999997],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis7\":{\"anchor\":\"y7\",\"domain\":[0.0,1.0],\"matches\":\"x8\",\"showticklabels\":false},\"yaxis7\":{\"anchor\":\"x7\",\"domain\":[0.2056,0.2848],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis8\":{\"anchor\":\"y8\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Sector\"},\"tickangle\":45},\"yaxis8\":{\"anchor\":\"x8\",\"domain\":[0.0,0.1656],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"annotations\":[{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"2024-08-30\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.9999999999999998,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"2024-09-06\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.8807999999999998,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"2024-09-13\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.7615999999999998,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"2024-09-20\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.6423999999999999,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"2024-09-27\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.5231999999999999,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"2024-10-04\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.40399999999999997,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"2024-10-11\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.2848,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"2024-10-18\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.1656,\"yanchor\":\"bottom\",\"yref\":\"paper\"}],\"title\":{\"text\":\"Weekly Normalized Metrics by Sector (Last 8 Weeks)\"},\"height\":800,\"width\":1200},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('71153bb0-208c-425b-ba4f-105ebe85a17f');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import plotly.graph_objects as go\n",
    "from plotly.subplots import make_subplots\n",
    "import numpy as np\n",
    "\n",
    "# Assuming df_risks is your dataframe\n",
    "df_risks['date'] = pd.to_datetime(df_risks['date'])\n",
    "\n",
    "# Function to normalize to [-1, 1] range\n",
    "def normalize_minus1_to_1(x):\n",
    "    return 2 * (x - np.min(x)) / (np.max(x) - np.min(x)) - 1\n",
    "\n",
    "# Get the last 8 weeks of data\n",
    "last_8_weeks = df_risks['date'].unique()[-8:]\n",
    "weeks = [date.strftime('%Y-%m-%d') for date in last_8_weeks]\n",
    "\n",
    "# Normalize the relevant columns\n",
    "metrics = ['accounting', 'events', 'misstatement', 'risk']\n",
    "\n",
    "# Prepare data for heatmap\n",
    "sectors = df_risks['sector'].unique().tolist()\n",
    "z_values = []\n",
    "\n",
    "for week in weeks:\n",
    "    week_data = df_risks[df_risks['date'] == week]\n",
    "    sector_metrics = week_data.groupby('sector')[metrics].mean().reset_index()\n",
    "    \n",
    "    for metric in metrics:\n",
    "        sector_metrics[metric] = normalize_minus1_to_1(sector_metrics[metric])\n",
    "    \n",
    "    z_values.append(sector_metrics[metrics].values.T)\n",
    "\n",
    "# Create subplots\n",
    "fig = make_subplots(rows=8, cols=1, shared_xaxes=True, vertical_spacing=0.04,\n",
    "                    row_heights=[0.11]*7 + [0.23],  # Make the last row taller for labels\n",
    "                    subplot_titles=weeks)\n",
    "\n",
    "# Add heatmaps for each week\n",
    "for i, week_data in enumerate(z_values, 1):\n",
    "    fig.add_trace(\n",
    "        go.Heatmap(\n",
    "            z=week_data,\n",
    "            x=sectors,\n",
    "            y=metrics,\n",
    "            colorscale=[\n",
    "                [0, 'green'],\n",
    "                [0.5, 'white'],\n",
    "                [1, 'red']\n",
    "            ],\n",
    "            zmin=-1,\n",
    "            zmax=1,\n",
    "            showscale=i == len(weeks),  # Only show colorbar for the last heatmap\n",
    "        ),\n",
    "        row=i, col=1\n",
    "    )\n",
    "\n",
    "# Update layout\n",
    "fig.update_layout(\n",
    "    title='Weekly Normalized Metrics by Sector (Last 8 Weeks)',\n",
    "    height=800,\n",
    "    width=1200,\n",
    "    yaxis8_title='Metric',\n",
    "    xaxis8_title='Sector',\n",
    ")\n",
    "\n",
    "# Rotate x-axis labels for better readability\n",
    "fig.update_xaxes(tickangle=45, row=8, col=1)  # Only show x-axis labels for the last row\n",
    "\n",
    "# Remove y-axis labels and adjust subplot titles\n",
    "for i in range(1, 9):\n",
    "    fig.update_yaxes(title_text='', showticklabels=True, row=i, col=1)\n",
    "    fig.layout.annotations[i-1].update(y=fig.layout.annotations[i-1].y )  # Move subplot titles down\n",
    "\n",
    "# Hide x-axis labels for all but the last row\n",
    "for i in range(1, 8):\n",
    "    fig.update_xaxes(showticklabels=False, row=i, col=1)\n",
    "\n",
    "# Show the plot\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 273,
   "id": "a5d24db7-12e4-4a42-91ea-eea654e92878",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import plotly.graph_objects as go\n",
    "from plotly.subplots import make_subplots\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import plotly.graph_objects as go\n",
    "import numpy as np\n",
    "\n",
    "\n",
    "df_risks = sov.data(\"corprisk/risks\", full_history=True)\n",
    "\n",
    "df_risks = df_risks.reset_index()\n",
    "\n",
    "# Assuming df_risks is already sorted by ticker and date\n",
    "# Select the last 6 weeks of data\n",
    "df_risks['date'] = pd.to_datetime(df_risks['date'])\n",
    "max_date = df_risks['date'].max()\n",
    "six_weeks_ago = max_date - pd.Timedelta(weeks=13)\n",
    "df_last_6_weeks = df_risks[df_risks['date'] > six_weeks_ago].copy()\n",
    "\n",
    "# Calculate week-over-week differences\n",
    "metrics = ['accounting', 'events', 'misstatement', 'risk']\n",
    "\n",
    "# Ensure the dataframe is sorted by ticker and date in descending order\n",
    "df_last_6_weeks = df_last_6_weeks.sort_values(['ticker', 'date'])\n",
    "\n",
    "df_last_6_weeks.head()\n",
    "\n",
    "for metric in metrics:\n",
    "    df_last_6_weeks[f'{metric}'] = df_last_6_weeks.groupby('ticker')[metric].diff()\n",
    "\n",
    "# Create a function to assign week numbers in reverse order\n",
    "def assign_week_reverse(group):\n",
    "    total_weeks = len(group)\n",
    "    group['week'] = [f'Week-{total_weeks - 1 - i}' for i in range(total_weeks)]\n",
    "    return group\n",
    "\n",
    "# Apply the function to each ticker group\n",
    "df_last_6_weeks = df_last_6_weeks.groupby('ticker').apply(assign_week_reverse).reset_index(drop=True)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 274,
   "id": "ca20f4b9-9ae9-45af-96ab-02daf2387434",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>week</th>\n",
       "      <th>date</th>\n",
       "      <th>sector</th>\n",
       "      <th>accounting</th>\n",
       "      <th>events</th>\n",
       "      <th>misstatement</th>\n",
       "      <th>risk</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>Week-11</td>\n",
       "      <td>2024-08-02</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>-0.004</td>\n",
       "      <td>-0.020</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>-0.008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Week-10</td>\n",
       "      <td>2024-08-09</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>-0.004</td>\n",
       "      <td>-0.015</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>-0.006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>Week-9</td>\n",
       "      <td>2024-08-16</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>-0.007</td>\n",
       "      <td>0.008</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>Week-8</td>\n",
       "      <td>2024-08-23</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>-0.004</td>\n",
       "      <td>0.007</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>Week-7</td>\n",
       "      <td>2024-08-30</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.004</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Week-6</td>\n",
       "      <td>2024-09-06</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.007</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>Week-5</td>\n",
       "      <td>2024-09-13</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>-0.003</td>\n",
       "      <td>0.008</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>Week-4</td>\n",
       "      <td>2024-09-20</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>-0.001</td>\n",
       "      <td>0.002</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>Week-3</td>\n",
       "      <td>2024-09-27</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.002</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>Week-2</td>\n",
       "      <td>2024-10-04</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.006</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Week-1</td>\n",
       "      <td>2024-10-11</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>-0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Week-0</td>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>Industrials</td>\n",
       "      <td>-0.001</td>\n",
       "      <td>-0.009</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>-0.004</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        week       date       sector  accounting  events  misstatement   risk\n",
       "40   Week-11 2024-08-02  Industrials      -0.004  -0.020        -0.000 -0.008\n",
       "29   Week-10 2024-08-09  Industrials      -0.004  -0.015        -0.000 -0.006\n",
       "128   Week-9 2024-08-16  Industrials      -0.007   0.008        -0.000  0.000\n",
       "117   Week-8 2024-08-23  Industrials      -0.004   0.007        -0.000  0.001\n",
       "106   Week-7 2024-08-30  Industrials      -0.000   0.004        -0.000  0.001\n",
       "95    Week-6 2024-09-06  Industrials       0.003   0.007        -0.000  0.003\n",
       "84    Week-5 2024-09-13  Industrials      -0.003   0.008        -0.000  0.002\n",
       "73    Week-4 2024-09-20  Industrials      -0.001   0.002        -0.000  0.000\n",
       "62    Week-3 2024-09-27  Industrials      -0.000   0.002        -0.000  0.000\n",
       "51    Week-2 2024-10-04  Industrials       0.000   0.006         0.000  0.002\n",
       "18    Week-1 2024-10-11  Industrials      -0.000  -0.000        -0.000 -0.000\n",
       "7     Week-0 2024-10-18  Industrials      -0.001  -0.009        -0.000 -0.004"
      ]
     },
     "execution_count": 274,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# Drop the first week (which will have NaN differences)\n",
    "df_last_6_weeks = df_last_6_weeks.dropna(subset=[f'{metric}' for metric in metrics])\n",
    "\n",
    "# Assuming the data is in a DataFrame called 'df_risks'\n",
    "\n",
    "# Function to normalize to [-1, 1] range\n",
    "def normalize_minus1_to_1(x):\n",
    "    return 2 * (x - np.min(x)) / (np.max(x) - np.min(x)) - 1\n",
    "\n",
    "# Normalize the relevant columns\n",
    "metrics = ['accounting', 'events', 'misstatement', 'risk']\n",
    "\n",
    "df_risks = pd.merge(df_last_6_weeks.reset_index(),tickers_meta[[\"ticker\",\"sector\",\"industry\"]], on=\"ticker\", how=\"left\").sort_values(['ticker', 'date'])\n",
    "\n",
    "sector_metrics = df_risks.groupby(['sector', 'week'])[metrics].mean().reset_index()\n",
    "\n",
    "# Add the date back to sector_metrics\n",
    "date_mapping = df_risks.groupby('week')['date'].first().reset_index()\n",
    "sector_metrics = date_mapping.merge(sector_metrics, on='week', how='left').sort_values(['sector', 'date'])\n",
    "\n",
    "sector_metrics[sector_metrics[\"sector\"]==\"Industrials\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "id": "0aec0166-da01-4bd1-ba65-6b4041cb2bca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plotly.com"
       },
       "data": [
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Basic Materials",
          "Communication Services",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Energy",
          "Financial Services",
          "Healthcare",
          "Industrials",
          "Real Estate",
          "Technology",
          "Utilities"
         ],
         "xaxis": "x",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y",
         "z": [
          [
           -0.9029472,
           0.515715,
           -1,
           0.6390512,
           1,
           0.41418922,
           0.18269217,
           -0.5520053,
           -0.62174505,
           0.4049827,
           0.56691945
          ],
          [
           -0.28803623,
           0.988752,
           -0.10245603,
           0.23026729,
           1,
           0.13899875,
           0.58830655,
           -0.25545746,
           0.30455458,
           -1,
           -0.33403045
          ],
          [
           -1,
           -0.27121347,
           -0.5176418,
           0.14368677,
           -0.91905636,
           -0.5857126,
           1,
           -0.48900092,
           0.029883504,
           0.16910923,
           0.03051579
          ],
          [
           -0.772784,
           0.8440331,
           -0.62930816,
           0.19513333,
           1,
           0.034186006,
           0.3867283,
           -0.62790835,
           -0.13405138,
           -1,
           -0.3432082
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Basic Materials",
          "Communication Services",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Energy",
          "Financial Services",
          "Healthcare",
          "Industrials",
          "Real Estate",
          "Technology",
          "Utilities"
         ],
         "xaxis": "x2",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y2",
         "z": [
          [
           -0.6001421,
           0.46564853,
           0.096006274,
           -0.036814332,
           -1,
           0.6778251,
           -0.066180825,
           0.06503832,
           -0.07456398,
           -0.15078127,
           1
          ],
          [
           -1,
           0.41234434,
           0.3006481,
           1,
           0.24074268,
           0.97005093,
           0.04882717,
           0.26914155,
           0.42511225,
           0.7225723,
           0.9604155
          ],
          [
           -0.65964353,
           0.30719697,
           -0.21047342,
           0.78507435,
           -1,
           -0.4133737,
           0.059731126,
           0.0009535551,
           0.5921551,
           1,
           0.715914
          ],
          [
           -1,
           0.40742624,
           0.18510914,
           0.6307645,
           -0.2801196,
           0.87910986,
           -0.053518057,
           0.15182161,
           0.21043158,
           0.39236748,
           1
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Basic Materials",
          "Communication Services",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Energy",
          "Financial Services",
          "Healthcare",
          "Industrials",
          "Real Estate",
          "Technology",
          "Utilities"
         ],
         "xaxis": "x3",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y3",
         "z": [
          [
           -1,
           0.5946846,
           -0.19809037,
           -0.22738457,
           -0.7702925,
           0.43135273,
           -0.25227344,
           -0.88018143,
           -0.16072536,
           0.4475484,
           1
          ],
          [
           -0.7165264,
           -0.43763906,
           1,
           -0.8192655,
           -0.785251,
           -0.24088246,
           -1,
           0.20065463,
           -0.35875034,
           -0.55807036,
           -0.6408677
          ],
          [
           -0.4133606,
           -0.6080725,
           -0.30905253,
           0.32647502,
           -1,
           -0.34495956,
           -0.23259151,
           -0.36193812,
           0.2399894,
           0.8334732,
           1
          ],
          [
           -1,
           -0.010165095,
           1,
           -0.7322657,
           -0.9705555,
           0.10687101,
           -0.92507774,
           -0.072336376,
           -0.26544946,
           -0.16708583,
           0.0092538595
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Basic Materials",
          "Communication Services",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Energy",
          "Financial Services",
          "Healthcare",
          "Industrials",
          "Real Estate",
          "Technology",
          "Utilities"
         ],
         "xaxis": "x4",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y4",
         "z": [
          [
           0.044379354,
           -1,
           -0.16589594,
           0.9187149,
           1,
           0.49118853,
           -0.33644605,
           -0.108588636,
           0.5012971,
           0.11934519,
           0.83311594
          ],
          [
           0.4213277,
           0.7757549,
           1,
           0.8002225,
           -0.34698433,
           0.6482955,
           0.91071033,
           0.40492904,
           0.055582523,
           -1,
           0.6113918
          ],
          [
           -0.3949324,
           -0.5301272,
           -0.32205278,
           0.038986564,
           -0.9892326,
           -0.3333847,
           0.22121394,
           -1,
           0.07537496,
           0.38916028,
           1
          ],
          [
           0.26041412,
           0.13804257,
           0.7095741,
           1,
           -0.06299323,
           0.66402566,
           0.57166433,
           0.15991485,
           0.1320554,
           -1,
           0.8198199
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Basic Materials",
          "Communication Services",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Energy",
          "Financial Services",
          "Healthcare",
          "Industrials",
          "Real Estate",
          "Technology",
          "Utilities"
         ],
         "xaxis": "x5",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y5",
         "z": [
          [
           1,
           -1,
           0.21551704,
           -0.06829387,
           -0.11932123,
           0.49886894,
           0.3053738,
           0.37255704,
           0.6636884,
           -0.20802158,
           0.2575519
          ],
          [
           -0.627894,
           -1,
           1,
           0.7103791,
           0.52158034,
           0.51562667,
           -0.7595243,
           0.31989646,
           -0.0029147267,
           0.10103071,
           0.25228417
          ],
          [
           -1,
           -0.10586321,
           -0.1754601,
           0.44185293,
           -0.9848318,
           -0.35192204,
           -0.27994454,
           -0.16894275,
           0.29342294,
           0.39091158,
           1
          ],
          [
           -0.37295562,
           -1,
           1,
           0.7096014,
           0.49271083,
           0.60114765,
           -0.5820198,
           0.40894544,
           0.17459488,
           0.1345228,
           0.36073518
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Basic Materials",
          "Communication Services",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Energy",
          "Financial Services",
          "Healthcare",
          "Industrials",
          "Real Estate",
          "Technology",
          "Utilities"
         ],
         "xaxis": "x6",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y6",
         "z": [
          [
           0.8835325,
           -0.20128405,
           -1,
           1,
           0.76513696,
           0.25858152,
           0.18939114,
           0.7434964,
           0.028337598,
           0.6725887,
           0.29323077
          ],
          [
           -0.529384,
           -1,
           0.105938554,
           1,
           0.5521438,
           0.2085464,
           -0.45127726,
           0.27611315,
           -0.38276494,
           0.2701614,
           0.014872432
          ],
          [
           -0.44344968,
           0.14989328,
           -0.03994888,
           0.6966163,
           -1,
           -0.07317227,
           -0.12574989,
           0.06386459,
           0.54768574,
           0.87896466,
           1
          ],
          [
           -0.35230553,
           -1,
           -0.24442679,
           1,
           0.5363002,
           0.13780665,
           -0.44340587,
           0.31131625,
           -0.41237068,
           0.30195403,
           -0.0034204125
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Basic Materials",
          "Communication Services",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Energy",
          "Financial Services",
          "Healthcare",
          "Industrials",
          "Real Estate",
          "Technology",
          "Utilities"
         ],
         "xaxis": "x7",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y7",
         "z": [
          [
           -0.7146112,
           0.80338275,
           -1,
           0.90654016,
           0.5653962,
           1,
           0.23138869,
           0.16827083,
           0.68388736,
           0.5506201,
           -0.4544782
          ],
          [
           -0.73603106,
           0.99897444,
           -1,
           1,
           0.23497367,
           0.47978115,
           -0.056239188,
           0.62933195,
           0.2455008,
           0.22111416,
           0.2314663
          ],
          [
           -0.4201603,
           -0.12912995,
           -0.066776216,
           0.30293596,
           -1,
           -0.16753197,
           -0.27363384,
           -0.069817364,
           0.21113372,
           0.28393745,
           1
          ],
          [
           -0.740121,
           0.97039986,
           -1,
           1,
           0.27393615,
           0.57344615,
           -0.00775671,
           0.5545329,
           0.333436,
           0.29174924,
           0.14252555
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Basic Materials",
          "Communication Services",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Energy",
          "Financial Services",
          "Healthcare",
          "Industrials",
          "Real Estate",
          "Technology",
          "Utilities"
         ],
         "xaxis": "x8",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y8",
         "z": [
          [
           0.2597798,
           0.5701573,
           0.15813243,
           -0.96615463,
           -0.7401781,
           -0.3918203,
           -1,
           -0.43640345,
           -0.27570164,
           1,
           0.13240206
          ],
          [
           0.0024214983,
           0.6454339,
           0.20576847,
           1,
           -0.108730376,
           -1,
           -0.65080494,
           -0.731754,
           -0.60745907,
           -0.43702978,
           -0.27204835
          ],
          [
           -0.21514058,
           0.21135736,
           0.04747665,
           0.6025157,
           -1,
           -0.0021104217,
           -0.027310133,
           0.21105206,
           0.48859358,
           0.5376992,
           1
          ],
          [
           0.104516745,
           0.8170682,
           0.30870354,
           1,
           -0.15994048,
           -1,
           -0.71879876,
           -0.7235458,
           -0.56704426,
           -0.23000944,
           -0.15535694
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Basic Materials",
          "Communication Services",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Energy",
          "Financial Services",
          "Healthcare",
          "Industrials",
          "Real Estate",
          "Technology",
          "Utilities"
         ],
         "xaxis": "x9",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y9",
         "z": [
          [
           -1,
           -0.14279002,
           0.31270576,
           -0.43491304,
           1,
           0.42864048,
           0.31321907,
           0.23040545,
           0.50598645,
           -0.39769536,
           -0.13190532
          ],
          [
           -0.49690574,
           0.52196705,
           0.7725005,
           0.41367888,
           -0.01042366,
           0.38461947,
           -1,
           0.091635585,
           0.914992,
           -0.055323184,
           1
          ],
          [
           -1,
           0.6700946,
           -0.036640406,
           0.5871911,
           -0.27961808,
           0.10758972,
           0.25619948,
           0.66208136,
           0.8646332,
           0.9255607,
           1
          ],
          [
           -1,
           0.50670886,
           0.5262128,
           0.35015094,
           -0.07665062,
           0.28650165,
           -0.7725862,
           0.21810246,
           0.97849905,
           0.10209358,
           1
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Basic Materials",
          "Communication Services",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Energy",
          "Financial Services",
          "Healthcare",
          "Industrials",
          "Real Estate",
          "Technology",
          "Utilities"
         ],
         "xaxis": "x10",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y10",
         "z": [
          [
           0.47525406,
           1,
           0.43077528,
           0.7225872,
           -0.57156086,
           0.55937886,
           0.7047975,
           0.6800363,
           0.79613614,
           0.1828407,
           -1
          ],
          [
           0.42293632,
           0.947407,
           0.7429981,
           0.66251767,
           0.9942534,
           0.46829462,
           -0.011377156,
           0.7604259,
           0.534093,
           -1,
           1
          ],
          [
           0.5827626,
           0.5623342,
           -0.09762138,
           0.64339864,
           -1,
           0.6323298,
           1,
           0.8294041,
           0.58867633,
           0.6022384,
           0.7414262
          ],
          [
           0.4096943,
           1,
           0.6810616,
           0.6834347,
           0.7141553,
           0.46940696,
           0.050245166,
           0.7771733,
           0.571035,
           -1,
           0.7156882
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": false,
         "type": "heatmap",
         "x": [
          "Basic Materials",
          "Communication Services",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Energy",
          "Financial Services",
          "Healthcare",
          "Industrials",
          "Real Estate",
          "Technology",
          "Utilities"
         ],
         "xaxis": "x11",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y11",
         "z": [
          [
           -0.034976423,
           -0.6312517,
           0.64109457,
           -1,
           0.18528628,
           -0.64456,
           1,
           -0.45796788,
           -0.16820908,
           -0.71386933,
           0.1661017
          ],
          [
           -1,
           -0.33429408,
           -0.46101123,
           1,
           -0.64844465,
           -0.46004444,
           -0.16011256,
           -0.45123816,
           -0.13799232,
           0.105278134,
           -0.23820823
          ],
          [
           -0.1419419,
           -0.57239795,
           -0.07858962,
           0.048768878,
           0.49691212,
           0.23482597,
           0.43642557,
           -1,
           -0.30951947,
           -0.195162,
           1
          ],
          [
           -1,
           -0.409657,
           -0.21586794,
           1,
           -0.5422644,
           -0.54920757,
           0.22029686,
           -0.4988401,
           -0.06568533,
           0.06608939,
           -0.08207953
          ]
         ],
         "zmax": 1,
         "zmin": -1
        },
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "showscale": true,
         "type": "heatmap",
         "x": [
          "Basic Materials",
          "Communication Services",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Energy",
          "Financial Services",
          "Healthcare",
          "Industrials",
          "Real Estate",
          "Technology",
          "Utilities"
         ],
         "xaxis": "x12",
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "yaxis": "y12",
         "z": [
          [
           -1,
           -0.37468237,
           -0.15745628,
           -0.7294036,
           1,
           0.01423645,
           -0.66241586,
           -0.21426457,
           -0.20033562,
           -0.2860976,
           -0.806774
          ],
          [
           -1,
           0.7316606,
           -0.08894223,
           0.9413649,
           0.35350716,
           0.09918523,
           0.07976651,
           -0.7477716,
           -0.2931012,
           -0.43897855,
           1
          ],
          [
           0.91989183,
           0.7180853,
           0.88200295,
           -1,
           0.949718,
           0.914793,
           0.51199126,
           0.71981573,
           0.7937304,
           0.18992221,
           1
          ],
          [
           -1,
           0.87529564,
           0.16834009,
           0.88843656,
           1,
           0.41032648,
           0.14044869,
           -0.49096727,
           -0.046216547,
           -0.2391221,
           0.9931644
          ]
         ],
         "zmax": 1,
         "zmin": -1
        }
       ],
       "layout": {
        "annotations": [
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "Week-11",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.998,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "Week-10",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.9192903225806451,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "Week-9",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.8405806451612904,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "Week-8",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.7618709677419355,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "Week-7",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.6831612903225807,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "Week-6",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.6044516129032258,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "Week-5",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.5257419354838709,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "Week-4",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.44703225806451613,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "Week-3",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.36832258064516127,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "Week-2",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.2896129032258064,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "Week-1",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.21090322580645154,
          "yanchor": "bottom",
          "yref": "paper"
         },
         {
          "font": {
           "size": 16
          },
          "showarrow": false,
          "text": "Week-0",
          "x": 0.5,
          "xanchor": "center",
          "xref": "paper",
          "y": 0.13219354838709674,
          "yanchor": "bottom",
          "yref": "paper"
         }
        ],
        "height": 1200,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#f2f5fa"
            },
            "error_y": {
             "color": "#f2f5fa"
            },
            "marker": {
             "line": {
              "color": "rgb(17,17,17)",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "rgb(17,17,17)",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#A2B1C6",
             "gridcolor": "#506784",
             "linecolor": "#506784",
             "minorgridcolor": "#506784",
             "startlinecolor": "#A2B1C6"
            },
            "baxis": {
             "endlinecolor": "#A2B1C6",
             "gridcolor": "#506784",
             "linecolor": "#506784",
             "minorgridcolor": "#506784",
             "startlinecolor": "#A2B1C6"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "line": {
              "color": "#283442"
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "line": {
              "color": "#283442"
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#506784"
             },
             "line": {
              "color": "rgb(17,17,17)"
             }
            },
            "header": {
             "fill": {
              "color": "#2a3f5f"
             },
             "line": {
              "color": "rgb(17,17,17)"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#f2f5fa",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#f2f5fa"
          },
          "geo": {
           "bgcolor": "rgb(17,17,17)",
           "lakecolor": "rgb(17,17,17)",
           "landcolor": "rgb(17,17,17)",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "#506784"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "dark"
          },
          "paper_bgcolor": "rgb(17,17,17)",
          "plot_bgcolor": "rgb(17,17,17)",
          "polar": {
           "angularaxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           },
           "bgcolor": "rgb(17,17,17)",
           "radialaxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "rgb(17,17,17)",
            "gridcolor": "#506784",
            "gridwidth": 2,
            "linecolor": "#506784",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#C8D4E3"
           },
           "yaxis": {
            "backgroundcolor": "rgb(17,17,17)",
            "gridcolor": "#506784",
            "gridwidth": 2,
            "linecolor": "#506784",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#C8D4E3"
           },
           "zaxis": {
            "backgroundcolor": "rgb(17,17,17)",
            "gridcolor": "#506784",
            "gridwidth": 2,
            "linecolor": "#506784",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#C8D4E3"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#f2f5fa"
           }
          },
          "sliderdefaults": {
           "bgcolor": "#C8D4E3",
           "bordercolor": "rgb(17,17,17)",
           "borderwidth": 1,
           "tickwidth": 0
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           },
           "bgcolor": "rgb(17,17,17)",
           "caxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "updatemenudefaults": {
           "bgcolor": "#506784",
           "borderwidth": 0
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "#283442",
           "linecolor": "#506784",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "#283442",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "#283442",
           "linecolor": "#506784",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "#283442",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Weekly Normalized Metrics by Sector"
        },
        "width": 1200,
        "xaxis": {
         "anchor": "y",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x12",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "xaxis10": {
         "anchor": "y10",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x12",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis11": {
         "anchor": "y11",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x12",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis12": {
         "anchor": "y12",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "range": [
          -0.5,
          10.5
         ],
         "tickangle": 45,
         "type": "category"
        },
        "xaxis2": {
         "anchor": "y2",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x12",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis3": {
         "anchor": "y3",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x12",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis4": {
         "anchor": "y4",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x12",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis5": {
         "anchor": "y5",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x12",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis6": {
         "anchor": "y6",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x12",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis7": {
         "anchor": "y7",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x12",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis8": {
         "anchor": "y8",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x12",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "xaxis9": {
         "anchor": "y9",
         "autorange": true,
         "domain": [
          0,
          1
         ],
         "matches": "x12",
         "range": [
          -0.5,
          10.5
         ],
         "showticklabels": false,
         "type": "category"
        },
        "yaxis": {
         "anchor": "x",
         "autorange": true,
         "domain": [
          0.9412903225806452,
          1
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis10": {
         "anchor": "x10",
         "autorange": true,
         "domain": [
          0.2329032258064516,
          0.2916129032258064
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis11": {
         "anchor": "x11",
         "autorange": true,
         "domain": [
          0.15419354838709673,
          0.21290322580645155
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis12": {
         "anchor": "x12",
         "autorange": true,
         "domain": [
          0,
          0.13419354838709674
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis2": {
         "anchor": "x2",
         "autorange": true,
         "domain": [
          0.8625806451612903,
          0.9212903225806451
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis3": {
         "anchor": "x3",
         "autorange": true,
         "domain": [
          0.7838709677419355,
          0.8425806451612904
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis4": {
         "anchor": "x4",
         "autorange": true,
         "domain": [
          0.7051612903225807,
          0.7638709677419355
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis5": {
         "anchor": "x5",
         "autorange": true,
         "domain": [
          0.6264516129032258,
          0.6851612903225807
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis6": {
         "anchor": "x6",
         "autorange": true,
         "domain": [
          0.547741935483871,
          0.6064516129032258
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis7": {
         "anchor": "x7",
         "autorange": true,
         "domain": [
          0.4690322580645161,
          0.5277419354838709
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis8": {
         "anchor": "x8",
         "autorange": true,
         "domain": [
          0.3903225806451613,
          0.44903225806451613
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        },
        "yaxis9": {
         "anchor": "x9",
         "autorange": true,
         "domain": [
          0.3116129032258064,
          0.37032258064516127
         ],
         "range": [
          -0.5,
          3.5
         ],
         "showticklabels": true,
         "title": {
          "text": ""
         },
         "type": "category"
        }
       }
      },
      "image/png": "",
      "text/html": [
       "<div>                            <div id=\"c9e10b52-96b5-4dbc-afa6-7dd8b7b23cda\" class=\"plotly-graph-div\" style=\"height:1200px; width:1200px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"c9e10b52-96b5-4dbc-afa6-7dd8b7b23cda\")) {                    Plotly.newPlot(                        \"c9e10b52-96b5-4dbc-afa6-7dd8b7b23cda\",                        [{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Basic Materials\",\"Communication Services\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Energy\",\"Financial Services\",\"Healthcare\",\"Industrials\",\"Real Estate\",\"Technology\",\"Utilities\"],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[-0.9029472,0.515715,-1.0,0.6390512,1.0,0.41418922,0.18269217,-0.5520053,-0.62174505,0.4049827,0.56691945],[-0.28803623,0.988752,-0.10245603,0.23026729,1.0,0.13899875,0.58830655,-0.25545746,0.30455458,-1.0,-0.33403045],[-1.0,-0.27121347,-0.5176418,0.14368677,-0.91905636,-0.5857126,1.0,-0.48900092,0.029883504,0.16910923,0.03051579],[-0.772784,0.8440331,-0.62930816,0.19513333,1.0,0.034186006,0.3867283,-0.62790835,-0.13405138,-1.0,-0.3432082]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Basic Materials\",\"Communication Services\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Energy\",\"Financial Services\",\"Healthcare\",\"Industrials\",\"Real Estate\",\"Technology\",\"Utilities\"],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[-0.6001421,0.46564853,0.096006274,-0.036814332,-1.0,0.6778251,-0.066180825,0.06503832,-0.07456398,-0.15078127,1.0],[-1.0,0.41234434,0.3006481,1.0,0.24074268,0.97005093,0.04882717,0.26914155,0.42511225,0.7225723,0.9604155],[-0.65964353,0.30719697,-0.21047342,0.78507435,-1.0,-0.4133737,0.059731126,0.0009535551,0.5921551,1.0,0.715914],[-1.0,0.40742624,0.18510914,0.6307645,-0.2801196,0.87910986,-0.053518057,0.15182161,0.21043158,0.39236748,1.0]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Basic Materials\",\"Communication Services\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Energy\",\"Financial Services\",\"Healthcare\",\"Industrials\",\"Real Estate\",\"Technology\",\"Utilities\"],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[-1.0,0.5946846,-0.19809037,-0.22738457,-0.7702925,0.43135273,-0.25227344,-0.88018143,-0.16072536,0.4475484,1.0],[-0.7165264,-0.43763906,1.0,-0.8192655,-0.785251,-0.24088246,-1.0,0.20065463,-0.35875034,-0.55807036,-0.6408677],[-0.4133606,-0.6080725,-0.30905253,0.32647502,-1.0,-0.34495956,-0.23259151,-0.36193812,0.2399894,0.8334732,1.0],[-1.0,-0.010165095,1.0,-0.7322657,-0.9705555,0.10687101,-0.92507774,-0.072336376,-0.26544946,-0.16708583,0.0092538595]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Basic Materials\",\"Communication Services\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Energy\",\"Financial Services\",\"Healthcare\",\"Industrials\",\"Real Estate\",\"Technology\",\"Utilities\"],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[0.044379354,-1.0,-0.16589594,0.9187149,1.0,0.49118853,-0.33644605,-0.108588636,0.5012971,0.11934519,0.83311594],[0.4213277,0.7757549,1.0,0.8002225,-0.34698433,0.6482955,0.91071033,0.40492904,0.055582523,-1.0,0.6113918],[-0.3949324,-0.5301272,-0.32205278,0.038986564,-0.9892326,-0.3333847,0.22121394,-1.0,0.07537496,0.38916028,1.0],[0.26041412,0.13804257,0.7095741,1.0,-0.06299323,0.66402566,0.57166433,0.15991485,0.1320554,-1.0,0.8198199]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x4\",\"yaxis\":\"y4\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Basic Materials\",\"Communication Services\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Energy\",\"Financial Services\",\"Healthcare\",\"Industrials\",\"Real Estate\",\"Technology\",\"Utilities\"],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[1.0,-1.0,0.21551704,-0.06829387,-0.11932123,0.49886894,0.3053738,0.37255704,0.6636884,-0.20802158,0.2575519],[-0.627894,-1.0,1.0,0.7103791,0.52158034,0.51562667,-0.7595243,0.31989646,-0.0029147267,0.10103071,0.25228417],[-1.0,-0.10586321,-0.1754601,0.44185293,-0.9848318,-0.35192204,-0.27994454,-0.16894275,0.29342294,0.39091158,1.0],[-0.37295562,-1.0,1.0,0.7096014,0.49271083,0.60114765,-0.5820198,0.40894544,0.17459488,0.1345228,0.36073518]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x5\",\"yaxis\":\"y5\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Basic Materials\",\"Communication Services\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Energy\",\"Financial Services\",\"Healthcare\",\"Industrials\",\"Real Estate\",\"Technology\",\"Utilities\"],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[0.8835325,-0.20128405,-1.0,1.0,0.76513696,0.25858152,0.18939114,0.7434964,0.028337598,0.6725887,0.29323077],[-0.529384,-1.0,0.105938554,1.0,0.5521438,0.2085464,-0.45127726,0.27611315,-0.38276494,0.2701614,0.014872432],[-0.44344968,0.14989328,-0.03994888,0.6966163,-1.0,-0.07317227,-0.12574989,0.06386459,0.54768574,0.87896466,1.0],[-0.35230553,-1.0,-0.24442679,1.0,0.5363002,0.13780665,-0.44340587,0.31131625,-0.41237068,0.30195403,-0.0034204125]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x6\",\"yaxis\":\"y6\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Basic Materials\",\"Communication Services\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Energy\",\"Financial Services\",\"Healthcare\",\"Industrials\",\"Real Estate\",\"Technology\",\"Utilities\"],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[-0.7146112,0.80338275,-1.0,0.90654016,0.5653962,1.0,0.23138869,0.16827083,0.68388736,0.5506201,-0.4544782],[-0.73603106,0.99897444,-1.0,1.0,0.23497367,0.47978115,-0.056239188,0.62933195,0.2455008,0.22111416,0.2314663],[-0.4201603,-0.12912995,-0.066776216,0.30293596,-1.0,-0.16753197,-0.27363384,-0.069817364,0.21113372,0.28393745,1.0],[-0.740121,0.97039986,-1.0,1.0,0.27393615,0.57344615,-0.00775671,0.5545329,0.333436,0.29174924,0.14252555]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x7\",\"yaxis\":\"y7\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Basic Materials\",\"Communication Services\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Energy\",\"Financial Services\",\"Healthcare\",\"Industrials\",\"Real Estate\",\"Technology\",\"Utilities\"],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[0.2597798,0.5701573,0.15813243,-0.96615463,-0.7401781,-0.3918203,-1.0,-0.43640345,-0.27570164,1.0,0.13240206],[0.0024214983,0.6454339,0.20576847,1.0,-0.108730376,-1.0,-0.65080494,-0.731754,-0.60745907,-0.43702978,-0.27204835],[-0.21514058,0.21135736,0.04747665,0.6025157,-1.0,-0.0021104217,-0.027310133,0.21105206,0.48859358,0.5376992,1.0],[0.104516745,0.8170682,0.30870354,1.0,-0.15994048,-1.0,-0.71879876,-0.7235458,-0.56704426,-0.23000944,-0.15535694]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x8\",\"yaxis\":\"y8\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Basic Materials\",\"Communication Services\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Energy\",\"Financial Services\",\"Healthcare\",\"Industrials\",\"Real Estate\",\"Technology\",\"Utilities\"],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[-1.0,-0.14279002,0.31270576,-0.43491304,1.0,0.42864048,0.31321907,0.23040545,0.50598645,-0.39769536,-0.13190532],[-0.49690574,0.52196705,0.7725005,0.41367888,-0.01042366,0.38461947,-1.0,0.091635585,0.914992,-0.055323184,1.0],[-1.0,0.6700946,-0.036640406,0.5871911,-0.27961808,0.10758972,0.25619948,0.66208136,0.8646332,0.9255607,1.0],[-1.0,0.50670886,0.5262128,0.35015094,-0.07665062,0.28650165,-0.7725862,0.21810246,0.97849905,0.10209358,1.0]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x9\",\"yaxis\":\"y9\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Basic Materials\",\"Communication Services\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Energy\",\"Financial Services\",\"Healthcare\",\"Industrials\",\"Real Estate\",\"Technology\",\"Utilities\"],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[0.47525406,1.0,0.43077528,0.7225872,-0.57156086,0.55937886,0.7047975,0.6800363,0.79613614,0.1828407,-1.0],[0.42293632,0.947407,0.7429981,0.66251767,0.9942534,0.46829462,-0.011377156,0.7604259,0.534093,-1.0,1.0],[0.5827626,0.5623342,-0.09762138,0.64339864,-1.0,0.6323298,1.0,0.8294041,0.58867633,0.6022384,0.7414262],[0.4096943,1.0,0.6810616,0.6834347,0.7141553,0.46940696,0.050245166,0.7771733,0.571035,-1.0,0.7156882]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x10\",\"yaxis\":\"y10\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":false,\"x\":[\"Basic Materials\",\"Communication Services\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Energy\",\"Financial Services\",\"Healthcare\",\"Industrials\",\"Real Estate\",\"Technology\",\"Utilities\"],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[-0.034976423,-0.6312517,0.64109457,-1.0,0.18528628,-0.64456,1.0,-0.45796788,-0.16820908,-0.71386933,0.1661017],[-1.0,-0.33429408,-0.46101123,1.0,-0.64844465,-0.46004444,-0.16011256,-0.45123816,-0.13799232,0.105278134,-0.23820823],[-0.1419419,-0.57239795,-0.07858962,0.048768878,0.49691212,0.23482597,0.43642557,-1.0,-0.30951947,-0.195162,1.0],[-1.0,-0.409657,-0.21586794,1.0,-0.5422644,-0.54920757,0.22029686,-0.4988401,-0.06568533,0.06608939,-0.08207953]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x11\",\"yaxis\":\"y11\"},{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"showscale\":true,\"x\":[\"Basic Materials\",\"Communication Services\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Energy\",\"Financial Services\",\"Healthcare\",\"Industrials\",\"Real Estate\",\"Technology\",\"Utilities\"],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[-1.0,-0.37468237,-0.15745628,-0.7294036,1.0,0.01423645,-0.66241586,-0.21426457,-0.20033562,-0.2860976,-0.806774],[-1.0,0.7316606,-0.08894223,0.9413649,0.35350716,0.09918523,0.07976651,-0.7477716,-0.2931012,-0.43897855,1.0],[0.91989183,0.7180853,0.88200295,-1.0,0.949718,0.914793,0.51199126,0.71981573,0.7937304,0.18992221,1.0],[-1.0,0.87529564,0.16834009,0.88843656,1.0,0.41032648,0.14044869,-0.49096727,-0.046216547,-0.2391221,0.9931644]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\",\"xaxis\":\"x12\",\"yaxis\":\"y12\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#f2f5fa\"},\"error_y\":{\"color\":\"#f2f5fa\"},\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scattergl\"}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"baxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#506784\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"header\":{\"fill\":{\"color\":\"#2a3f5f\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#f2f5fa\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"rgb(17,17,17)\",\"plot_bgcolor\":\"rgb(17,17,17)\",\"polar\":{\"bgcolor\":\"rgb(17,17,17)\",\"angularaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"rgb(17,17,17)\",\"aaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#f2f5fa\"}},\"annotationdefaults\":{\"arrowcolor\":\"#f2f5fa\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"rgb(17,17,17)\",\"landcolor\":\"rgb(17,17,17)\",\"subunitcolor\":\"#506784\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"rgb(17,17,17)\"},\"title\":{\"x\":0.05},\"updatemenudefaults\":{\"bgcolor\":\"#506784\",\"borderwidth\":0},\"sliderdefaults\":{\"bgcolor\":\"#C8D4E3\",\"borderwidth\":1,\"bordercolor\":\"rgb(17,17,17)\",\"tickwidth\":0},\"mapbox\":{\"style\":\"dark\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"matches\":\"x12\",\"showticklabels\":false,\"title\":{\"text\":\"\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.9412903225806452,1.0],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis2\":{\"anchor\":\"y2\",\"domain\":[0.0,1.0],\"matches\":\"x12\",\"showticklabels\":false},\"yaxis2\":{\"anchor\":\"x2\",\"domain\":[0.8625806451612903,0.9212903225806451],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis3\":{\"anchor\":\"y3\",\"domain\":[0.0,1.0],\"matches\":\"x12\",\"showticklabels\":false},\"yaxis3\":{\"anchor\":\"x3\",\"domain\":[0.7838709677419355,0.8425806451612904],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis4\":{\"anchor\":\"y4\",\"domain\":[0.0,1.0],\"matches\":\"x12\",\"showticklabels\":false},\"yaxis4\":{\"anchor\":\"x4\",\"domain\":[0.7051612903225807,0.7638709677419355],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis5\":{\"anchor\":\"y5\",\"domain\":[0.0,1.0],\"matches\":\"x12\",\"showticklabels\":false},\"yaxis5\":{\"anchor\":\"x5\",\"domain\":[0.6264516129032258,0.6851612903225807],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis6\":{\"anchor\":\"y6\",\"domain\":[0.0,1.0],\"matches\":\"x12\",\"showticklabels\":false},\"yaxis6\":{\"anchor\":\"x6\",\"domain\":[0.547741935483871,0.6064516129032258],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis7\":{\"anchor\":\"y7\",\"domain\":[0.0,1.0],\"matches\":\"x12\",\"showticklabels\":false},\"yaxis7\":{\"anchor\":\"x7\",\"domain\":[0.4690322580645161,0.5277419354838709],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis8\":{\"anchor\":\"y8\",\"domain\":[0.0,1.0],\"matches\":\"x12\",\"showticklabels\":false},\"yaxis8\":{\"anchor\":\"x8\",\"domain\":[0.3903225806451613,0.44903225806451613],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis9\":{\"anchor\":\"y9\",\"domain\":[0.0,1.0],\"matches\":\"x12\",\"showticklabels\":false},\"yaxis9\":{\"anchor\":\"x9\",\"domain\":[0.3116129032258064,0.37032258064516127],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis10\":{\"anchor\":\"y10\",\"domain\":[0.0,1.0],\"matches\":\"x12\",\"showticklabels\":false},\"yaxis10\":{\"anchor\":\"x10\",\"domain\":[0.2329032258064516,0.2916129032258064],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis11\":{\"anchor\":\"y11\",\"domain\":[0.0,1.0],\"matches\":\"x12\",\"showticklabels\":false},\"yaxis11\":{\"anchor\":\"x11\",\"domain\":[0.15419354838709673,0.21290322580645155],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"xaxis12\":{\"anchor\":\"y12\",\"domain\":[0.0,1.0],\"tickangle\":45},\"yaxis12\":{\"anchor\":\"x12\",\"domain\":[0.0,0.13419354838709674],\"title\":{\"text\":\"\"},\"showticklabels\":true},\"annotations\":[{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"Week-11\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.998,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"Week-10\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.9192903225806451,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"Week-9\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.8405806451612904,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"Week-8\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.7618709677419355,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"Week-7\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.6831612903225807,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"Week-6\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.6044516129032258,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"Week-5\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.5257419354838709,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"Week-4\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.44703225806451613,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"Week-3\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.36832258064516127,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"Week-2\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.2896129032258064,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"Week-1\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.21090322580645154,\"yanchor\":\"bottom\",\"yref\":\"paper\"},{\"font\":{\"size\":16},\"showarrow\":false,\"text\":\"Week-0\",\"x\":0.5,\"xanchor\":\"center\",\"xref\":\"paper\",\"y\":0.13219354838709674,\"yanchor\":\"bottom\",\"yref\":\"paper\"}],\"title\":{\"text\":\"Weekly Normalized Metrics by Sector\"},\"height\":1200,\"width\":1200},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('c9e10b52-96b5-4dbc-afa6-7dd8b7b23cda');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import plotly.graph_objects as go\n",
    "from plotly.subplots import make_subplots\n",
    "import numpy as np\n",
    "\n",
    "\n",
    "# Assuming sector_metrics is already calculated and contains the data\n",
    "\n",
    "# Extract week numbers and sort them in descending order\n",
    "week_numbers = sorted([int(week.split(\"-\")[1]) for week in sector_metrics['week'].unique()], reverse=True)\n",
    "weeks = [f'Week-{num}' for num in week_numbers]\n",
    "\n",
    "sectors = sector_metrics['sector'].unique().tolist()\n",
    "\n",
    "# Normalize the relevant columns\n",
    "metrics = ['accounting', 'events', 'misstatement', 'risk']\n",
    "\n",
    "# Prepare data for heatmap\n",
    "z_values = []\n",
    "for week in weeks:\n",
    "    week_data = sector_metrics[sector_metrics['week'] == week]\n",
    "    \n",
    "    for metric in metrics:\n",
    "        week_data[metric] = normalize_minus1_to_1(week_data[metric])\n",
    "    \n",
    "    z_values.append(week_data[metrics].values.T)\n",
    "\n",
    "# Create subplots\n",
    "fig = make_subplots(rows=len(weeks), cols=1, shared_xaxes=True, vertical_spacing=0.02,\n",
    "                    row_heights=[0.07]*(len(weeks)-1) + [0.16],  # Make the last row taller for labels\n",
    "                    subplot_titles=weeks)\n",
    "\n",
    "# Add heatmaps for each week\n",
    "for i, week_data in enumerate(z_values, 1):\n",
    "    fig.add_trace(\n",
    "        go.Heatmap(\n",
    "            z=week_data,\n",
    "            x=sectors,\n",
    "            y=metrics,\n",
    "            colorscale=[\n",
    "                [0, 'green'],\n",
    "                [0.5, 'white'],\n",
    "                [1, 'red']\n",
    "            ],\n",
    "            zmin=-1,\n",
    "            zmax=1,\n",
    "            showscale=i == len(weeks),  # Only show colorbar for the last heatmap\n",
    "        ),\n",
    "        row=i, col=1\n",
    "    )\n",
    "\n",
    "# Update layout\n",
    "fig.update_layout(\n",
    "    title='Weekly Normalized Metrics by Sector',\n",
    "    height=1200,\n",
    "    width=1200,\n",
    "    yaxis_title='Metric',\n",
    "    xaxis_title='',\n",
    ")\n",
    "\n",
    "# Rotate x-axis labels for better readability\n",
    "fig.update_xaxes(tickangle=45, row=len(weeks), col=1)  # Only show x-axis labels for the last row\n",
    "\n",
    "# Remove y-axis labels and adjust subplot titles\n",
    "for i in range(1, len(weeks)+1):\n",
    "    fig.update_yaxes(title_text='', showticklabels=True, row=i, col=1)\n",
    "    fig.layout.annotations[i-1].update(y=fig.layout.annotations[i-1].y-0.002)  # Move subplot titles down\n",
    "\n",
    "# Hide x-axis labels for all but the last row\n",
    "for i in range(1, len(weeks)):\n",
    "    fig.update_xaxes(showticklabels=False, row=i, col=1)\n",
    "\n",
    "# Show the plot\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 290,
   "id": "2aa63f61-c6d7-4a64-9160-237981fb5663",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>week</th>\n",
       "      <th>date</th>\n",
       "      <th>sector</th>\n",
       "      <th>accounting</th>\n",
       "      <th>events</th>\n",
       "      <th>misstatement</th>\n",
       "      <th>risk</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Week-11</td>\n",
       "      <td>2024-08-02</td>\n",
       "      <td>Basic Materials</td>\n",
       "      <td>-0.006</td>\n",
       "      <td>-0.020</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>-0.009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Week-10</td>\n",
       "      <td>2024-08-09</td>\n",
       "      <td>Basic Materials</td>\n",
       "      <td>-0.014</td>\n",
       "      <td>-0.051</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>-0.022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>Week-9</td>\n",
       "      <td>2024-08-16</td>\n",
       "      <td>Basic Materials</td>\n",
       "      <td>-0.008</td>\n",
       "      <td>-0.002</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>-0.003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>Week-8</td>\n",
       "      <td>2024-08-23</td>\n",
       "      <td>Basic Materials</td>\n",
       "      <td>-0.003</td>\n",
       "      <td>0.008</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>Week-7</td>\n",
       "      <td>2024-08-30</td>\n",
       "      <td>Basic Materials</td>\n",
       "      <td>0.000</td>\n",
       "      <td>-0.003</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>-0.001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>Week-4</td>\n",
       "      <td>2024-09-20</td>\n",
       "      <td>Utilities</td>\n",
       "      <td>-0.000</td>\n",
       "      <td>0.007</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>Week-3</td>\n",
       "      <td>2024-09-27</td>\n",
       "      <td>Utilities</td>\n",
       "      <td>-0.001</td>\n",
       "      <td>0.013</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>Week-2</td>\n",
       "      <td>2024-10-04</td>\n",
       "      <td>Utilities</td>\n",
       "      <td>-0.003</td>\n",
       "      <td>0.009</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Week-1</td>\n",
       "      <td>2024-10-11</td>\n",
       "      <td>Utilities</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Week-0</td>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>Utilities</td>\n",
       "      <td>-0.003</td>\n",
       "      <td>0.007</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.001</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>132 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        week       date           sector  accounting  events  misstatement  \\\n",
       "33   Week-11 2024-08-02  Basic Materials      -0.006  -0.020        -0.000   \n",
       "22   Week-10 2024-08-09  Basic Materials      -0.014  -0.051        -0.000   \n",
       "121   Week-9 2024-08-16  Basic Materials      -0.008  -0.002        -0.000   \n",
       "110   Week-8 2024-08-23  Basic Materials      -0.003   0.008        -0.000   \n",
       "99    Week-7 2024-08-30  Basic Materials       0.000  -0.003        -0.000   \n",
       "..       ...        ...              ...         ...     ...           ...   \n",
       "76    Week-4 2024-09-20        Utilities      -0.000   0.007         0.000   \n",
       "65    Week-3 2024-09-27        Utilities      -0.001   0.013         0.002   \n",
       "54    Week-2 2024-10-04        Utilities      -0.003   0.009         0.000   \n",
       "21    Week-1 2024-10-11        Utilities       0.001   0.002         0.000   \n",
       "10    Week-0 2024-10-18        Utilities      -0.003   0.007         0.000   \n",
       "\n",
       "      risk  \n",
       "33  -0.009  \n",
       "22  -0.022  \n",
       "121 -0.003  \n",
       "110  0.001  \n",
       "99  -0.001  \n",
       "..     ...  \n",
       "76   0.002  \n",
       "65   0.004  \n",
       "54   0.002  \n",
       "21   0.001  \n",
       "10   0.001  \n",
       "\n",
       "[132 rows x 7 columns]"
      ]
     },
     "execution_count": 290,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sector_metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 292,
   "id": "0c65db77-c060-4137-9c4b-7f4873c35d54",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>Week</th>\n",
       "      <th>Basic Materials</th>\n",
       "      <th>Communication Services</th>\n",
       "      <th>Consumer Cyclical</th>\n",
       "      <th>Consumer Defensive</th>\n",
       "      <th>Energy</th>\n",
       "      <th>Financial Services</th>\n",
       "      <th>Healthcare</th>\n",
       "      <th>Industrials</th>\n",
       "      <th>Real Estate</th>\n",
       "      <th>Technology</th>\n",
       "      <th>Utilities</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-08-02</td>\n",
       "      <td>Week-11</td>\n",
       "      <td>-0.773</td>\n",
       "      <td>0.844</td>\n",
       "      <td>-0.629</td>\n",
       "      <td>0.195</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.034</td>\n",
       "      <td>0.387</td>\n",
       "      <td>-0.628</td>\n",
       "      <td>-0.134</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>-0.343</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-08-09</td>\n",
       "      <td>Week-10</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>0.407</td>\n",
       "      <td>0.185</td>\n",
       "      <td>0.631</td>\n",
       "      <td>-0.280</td>\n",
       "      <td>0.879</td>\n",
       "      <td>-0.054</td>\n",
       "      <td>0.152</td>\n",
       "      <td>0.210</td>\n",
       "      <td>0.392</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-08-16</td>\n",
       "      <td>Week-9</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>-0.010</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.732</td>\n",
       "      <td>-0.971</td>\n",
       "      <td>0.107</td>\n",
       "      <td>-0.925</td>\n",
       "      <td>-0.072</td>\n",
       "      <td>-0.265</td>\n",
       "      <td>-0.167</td>\n",
       "      <td>0.009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-08-23</td>\n",
       "      <td>Week-8</td>\n",
       "      <td>0.260</td>\n",
       "      <td>0.138</td>\n",
       "      <td>0.710</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.063</td>\n",
       "      <td>0.664</td>\n",
       "      <td>0.572</td>\n",
       "      <td>0.160</td>\n",
       "      <td>0.132</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>0.820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-08-30</td>\n",
       "      <td>Week-7</td>\n",
       "      <td>-0.373</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.710</td>\n",
       "      <td>0.493</td>\n",
       "      <td>0.601</td>\n",
       "      <td>-0.582</td>\n",
       "      <td>0.409</td>\n",
       "      <td>0.175</td>\n",
       "      <td>0.135</td>\n",
       "      <td>0.361</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2024-09-06</td>\n",
       "      <td>Week-6</td>\n",
       "      <td>-0.352</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>-0.244</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.536</td>\n",
       "      <td>0.138</td>\n",
       "      <td>-0.443</td>\n",
       "      <td>0.311</td>\n",
       "      <td>-0.412</td>\n",
       "      <td>0.302</td>\n",
       "      <td>-0.003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2024-09-13</td>\n",
       "      <td>Week-5</td>\n",
       "      <td>-0.740</td>\n",
       "      <td>0.970</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.274</td>\n",
       "      <td>0.573</td>\n",
       "      <td>-0.008</td>\n",
       "      <td>0.555</td>\n",
       "      <td>0.333</td>\n",
       "      <td>0.292</td>\n",
       "      <td>0.143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2024-09-20</td>\n",
       "      <td>Week-4</td>\n",
       "      <td>0.105</td>\n",
       "      <td>0.817</td>\n",
       "      <td>0.309</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.160</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>-0.719</td>\n",
       "      <td>-0.724</td>\n",
       "      <td>-0.567</td>\n",
       "      <td>-0.230</td>\n",
       "      <td>-0.155</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2024-09-27</td>\n",
       "      <td>Week-3</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>0.507</td>\n",
       "      <td>0.526</td>\n",
       "      <td>0.350</td>\n",
       "      <td>-0.077</td>\n",
       "      <td>0.287</td>\n",
       "      <td>-0.773</td>\n",
       "      <td>0.218</td>\n",
       "      <td>0.978</td>\n",
       "      <td>0.102</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2024-10-04</td>\n",
       "      <td>Week-2</td>\n",
       "      <td>0.410</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.681</td>\n",
       "      <td>0.683</td>\n",
       "      <td>0.714</td>\n",
       "      <td>0.469</td>\n",
       "      <td>0.050</td>\n",
       "      <td>0.777</td>\n",
       "      <td>0.571</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>0.716</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2024-10-11</td>\n",
       "      <td>Week-1</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>-0.410</td>\n",
       "      <td>-0.216</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.542</td>\n",
       "      <td>-0.549</td>\n",
       "      <td>0.220</td>\n",
       "      <td>-0.499</td>\n",
       "      <td>-0.066</td>\n",
       "      <td>0.066</td>\n",
       "      <td>-0.082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>Week-0</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>0.875</td>\n",
       "      <td>0.168</td>\n",
       "      <td>0.888</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.410</td>\n",
       "      <td>0.140</td>\n",
       "      <td>-0.491</td>\n",
       "      <td>-0.046</td>\n",
       "      <td>-0.239</td>\n",
       "      <td>0.993</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         date     Week  Basic Materials  Communication Services  \\\n",
       "0  2024-08-02  Week-11           -0.773                   0.844   \n",
       "1  2024-08-09  Week-10           -1.000                   0.407   \n",
       "2  2024-08-16   Week-9           -1.000                  -0.010   \n",
       "3  2024-08-23   Week-8            0.260                   0.138   \n",
       "4  2024-08-30   Week-7           -0.373                  -1.000   \n",
       "5  2024-09-06   Week-6           -0.352                  -1.000   \n",
       "6  2024-09-13   Week-5           -0.740                   0.970   \n",
       "7  2024-09-20   Week-4            0.105                   0.817   \n",
       "8  2024-09-27   Week-3           -1.000                   0.507   \n",
       "9  2024-10-04   Week-2            0.410                   1.000   \n",
       "10 2024-10-11   Week-1           -1.000                  -0.410   \n",
       "11 2024-10-18   Week-0           -1.000                   0.875   \n",
       "\n",
       "    Consumer Cyclical  Consumer Defensive  Energy  Financial Services  \\\n",
       "0              -0.629               0.195   1.000               0.034   \n",
       "1               0.185               0.631  -0.280               0.879   \n",
       "2               1.000              -0.732  -0.971               0.107   \n",
       "3               0.710               1.000  -0.063               0.664   \n",
       "4               1.000               0.710   0.493               0.601   \n",
       "5              -0.244               1.000   0.536               0.138   \n",
       "6              -1.000               1.000   0.274               0.573   \n",
       "7               0.309               1.000  -0.160              -1.000   \n",
       "8               0.526               0.350  -0.077               0.287   \n",
       "9               0.681               0.683   0.714               0.469   \n",
       "10             -0.216               1.000  -0.542              -0.549   \n",
       "11              0.168               0.888   1.000               0.410   \n",
       "\n",
       "    Healthcare  Industrials  Real Estate  Technology  Utilities  \n",
       "0        0.387       -0.628       -0.134      -1.000     -0.343  \n",
       "1       -0.054        0.152        0.210       0.392      1.000  \n",
       "2       -0.925       -0.072       -0.265      -0.167      0.009  \n",
       "3        0.572        0.160        0.132      -1.000      0.820  \n",
       "4       -0.582        0.409        0.175       0.135      0.361  \n",
       "5       -0.443        0.311       -0.412       0.302     -0.003  \n",
       "6       -0.008        0.555        0.333       0.292      0.143  \n",
       "7       -0.719       -0.724       -0.567      -0.230     -0.155  \n",
       "8       -0.773        0.218        0.978       0.102      1.000  \n",
       "9        0.050        0.777        0.571      -1.000      0.716  \n",
       "10       0.220       -0.499       -0.066       0.066     -0.082  \n",
       "11       0.140       -0.491       -0.046      -0.239      0.993  "
      ]
     },
     "execution_count": 292,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 282,
   "id": "ef407e17-4eeb-4769-ba80-7447c22e96bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Week</th>\n",
       "      <th>Basic Materials</th>\n",
       "      <th>Communication Services</th>\n",
       "      <th>Consumer Cyclical</th>\n",
       "      <th>Consumer Defensive</th>\n",
       "      <th>Energy</th>\n",
       "      <th>Financial Services</th>\n",
       "      <th>Healthcare</th>\n",
       "      <th>Industrials</th>\n",
       "      <th>Real Estate</th>\n",
       "      <th>Technology</th>\n",
       "      <th>Utilities</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Week-11</td>\n",
       "      <td>-0.773</td>\n",
       "      <td>0.844</td>\n",
       "      <td>-0.629</td>\n",
       "      <td>0.195</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.034</td>\n",
       "      <td>0.387</td>\n",
       "      <td>-0.628</td>\n",
       "      <td>-0.134</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>-0.343</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Week-10</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>0.407</td>\n",
       "      <td>0.185</td>\n",
       "      <td>0.631</td>\n",
       "      <td>-0.280</td>\n",
       "      <td>0.879</td>\n",
       "      <td>-0.054</td>\n",
       "      <td>0.152</td>\n",
       "      <td>0.210</td>\n",
       "      <td>0.392</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Week-9</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>-0.010</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.732</td>\n",
       "      <td>-0.971</td>\n",
       "      <td>0.107</td>\n",
       "      <td>-0.925</td>\n",
       "      <td>-0.072</td>\n",
       "      <td>-0.265</td>\n",
       "      <td>-0.167</td>\n",
       "      <td>0.009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Week-8</td>\n",
       "      <td>0.260</td>\n",
       "      <td>0.138</td>\n",
       "      <td>0.710</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.063</td>\n",
       "      <td>0.664</td>\n",
       "      <td>0.572</td>\n",
       "      <td>0.160</td>\n",
       "      <td>0.132</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>0.820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Week-7</td>\n",
       "      <td>-0.373</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.710</td>\n",
       "      <td>0.493</td>\n",
       "      <td>0.601</td>\n",
       "      <td>-0.582</td>\n",
       "      <td>0.409</td>\n",
       "      <td>0.175</td>\n",
       "      <td>0.135</td>\n",
       "      <td>0.361</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Week-6</td>\n",
       "      <td>-0.352</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>-0.244</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.536</td>\n",
       "      <td>0.138</td>\n",
       "      <td>-0.443</td>\n",
       "      <td>0.311</td>\n",
       "      <td>-0.412</td>\n",
       "      <td>0.302</td>\n",
       "      <td>-0.003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Week-5</td>\n",
       "      <td>-0.740</td>\n",
       "      <td>0.970</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.274</td>\n",
       "      <td>0.573</td>\n",
       "      <td>-0.008</td>\n",
       "      <td>0.555</td>\n",
       "      <td>0.333</td>\n",
       "      <td>0.292</td>\n",
       "      <td>0.143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Week-4</td>\n",
       "      <td>0.105</td>\n",
       "      <td>0.817</td>\n",
       "      <td>0.309</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.160</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>-0.719</td>\n",
       "      <td>-0.724</td>\n",
       "      <td>-0.567</td>\n",
       "      <td>-0.230</td>\n",
       "      <td>-0.155</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Week-3</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>0.507</td>\n",
       "      <td>0.526</td>\n",
       "      <td>0.350</td>\n",
       "      <td>-0.077</td>\n",
       "      <td>0.287</td>\n",
       "      <td>-0.773</td>\n",
       "      <td>0.218</td>\n",
       "      <td>0.978</td>\n",
       "      <td>0.102</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Week-2</td>\n",
       "      <td>0.410</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.681</td>\n",
       "      <td>0.683</td>\n",
       "      <td>0.714</td>\n",
       "      <td>0.469</td>\n",
       "      <td>0.050</td>\n",
       "      <td>0.777</td>\n",
       "      <td>0.571</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>0.716</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Week-1</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>-0.410</td>\n",
       "      <td>-0.216</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.542</td>\n",
       "      <td>-0.549</td>\n",
       "      <td>0.220</td>\n",
       "      <td>-0.499</td>\n",
       "      <td>-0.066</td>\n",
       "      <td>0.066</td>\n",
       "      <td>-0.082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Week-0</td>\n",
       "      <td>-1.000</td>\n",
       "      <td>0.875</td>\n",
       "      <td>0.168</td>\n",
       "      <td>0.888</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.410</td>\n",
       "      <td>0.140</td>\n",
       "      <td>-0.491</td>\n",
       "      <td>-0.046</td>\n",
       "      <td>-0.239</td>\n",
       "      <td>0.993</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Week  Basic Materials  Communication Services  Consumer Cyclical  \\\n",
       "0   Week-11           -0.773                   0.844             -0.629   \n",
       "1   Week-10           -1.000                   0.407              0.185   \n",
       "2    Week-9           -1.000                  -0.010              1.000   \n",
       "3    Week-8            0.260                   0.138              0.710   \n",
       "4    Week-7           -0.373                  -1.000              1.000   \n",
       "5    Week-6           -0.352                  -1.000             -0.244   \n",
       "6    Week-5           -0.740                   0.970             -1.000   \n",
       "7    Week-4            0.105                   0.817              0.309   \n",
       "8    Week-3           -1.000                   0.507              0.526   \n",
       "9    Week-2            0.410                   1.000              0.681   \n",
       "10   Week-1           -1.000                  -0.410             -0.216   \n",
       "11   Week-0           -1.000                   0.875              0.168   \n",
       "\n",
       "    Consumer Defensive  Energy  Financial Services  Healthcare  Industrials  \\\n",
       "0                0.195   1.000               0.034       0.387       -0.628   \n",
       "1                0.631  -0.280               0.879      -0.054        0.152   \n",
       "2               -0.732  -0.971               0.107      -0.925       -0.072   \n",
       "3                1.000  -0.063               0.664       0.572        0.160   \n",
       "4                0.710   0.493               0.601      -0.582        0.409   \n",
       "5                1.000   0.536               0.138      -0.443        0.311   \n",
       "6                1.000   0.274               0.573      -0.008        0.555   \n",
       "7                1.000  -0.160              -1.000      -0.719       -0.724   \n",
       "8                0.350  -0.077               0.287      -0.773        0.218   \n",
       "9                0.683   0.714               0.469       0.050        0.777   \n",
       "10               1.000  -0.542              -0.549       0.220       -0.499   \n",
       "11               0.888   1.000               0.410       0.140       -0.491   \n",
       "\n",
       "    Real Estate  Technology  Utilities  \n",
       "0        -0.134      -1.000     -0.343  \n",
       "1         0.210       0.392      1.000  \n",
       "2        -0.265      -0.167      0.009  \n",
       "3         0.132      -1.000      0.820  \n",
       "4         0.175       0.135      0.361  \n",
       "5        -0.412       0.302     -0.003  \n",
       "6         0.333       0.292      0.143  \n",
       "7        -0.567      -0.230     -0.155  \n",
       "8         0.978       0.102      1.000  \n",
       "9         0.571      -1.000      0.716  \n",
       "10       -0.066       0.066     -0.082  \n",
       "11       -0.046      -0.239      0.993  "
      ]
     },
     "execution_count": 282,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 302,
   "id": "d8b2ff7e-a8b6-4f1e-8334-aa8fe7cdb1a6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Existing chart found:\n",
      "Published chart URL: https://datawrapper.dwcdn.net/XhqT0/2/\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <iframe\n",
       "            width=\"1400\"\n",
       "            height=\"600\"\n",
       "            src=\"https://datawrapper.dwcdn.net/XhqT0/2/\"\n",
       "            frameborder=\"0\"\n",
       "            allowfullscreen\n",
       "            \n",
       "        ></iframe>\n",
       "        "
      ],
      "text/plain": [
       "<IPython.lib.display.IFrame at 0x2b5638a90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from datawrapper import Datawrapper\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from IPython.display import IFrame\n",
    "from datetime import datetime\n",
    "\n",
    "# Initialize Datawrapper with your API key\n",
    "dw = Datawrapper(access_token=\"Z9FqsGcQfCaeERekoelA1IjU4RBo4XcPhfsGY935YVNol54uN3QzITdFSZphaQov\")\n",
    "\n",
    "def get_or_create_chart(dw, title, chart_type):\n",
    "    # Try to find an existing chart with the given title\n",
    "    charts = dw.get_charts(search=title, limit=1)\n",
    "    \n",
    "    if charts['total'] > 0:\n",
    "        # If a chart is found, return its ID\n",
    "        print(\"Existing chart found:\")\n",
    "        return charts['list'][0]['id']\n",
    "    else:\n",
    "        # If no chart is found, create a new one\n",
    "        print(\"No existing chart found. Creating a new one.\")\n",
    "        new_chart = dw.create_chart(title=title, chart_type=chart_type)\n",
    "        print(\"New chart created:\")\n",
    "        return new_chart['id']\n",
    "\n",
    "\n",
    "# Function to convert to percentage range [-100%, 100%]\n",
    "def to_percentage(x):\n",
    "    return 100 * (x - np.mean(x)) / np.max(np.abs(x - np.mean(x)))\n",
    "\n",
    "# Assuming sector_metrics is already calculated and contains the data\n",
    "# Extract week numbers and sort them in descending order\n",
    "week_numbers = sorted([int(week.split(\"-\")[1]) for week in sector_metrics['week'].unique()], reverse=True)\n",
    "weeks = [f'Week-{num}' for num in week_numbers]\n",
    "\n",
    "sectors = sector_metrics['sector'].unique().tolist()\n",
    "\n",
    "# Prepare data for table\n",
    "data = []\n",
    "for week in weeks:\n",
    "    week_data = sector_metrics[sector_metrics['week'] == week]\n",
    "    risk_values = week_data['risk'].values\n",
    "    percentage_risk = to_percentage(risk_values)\n",
    "    row_data = [week] + percentage_risk.tolist()\n",
    "    data.append(row_data)\n",
    "\n",
    "# Create a DataFrame\n",
    "df = pd.DataFrame(data, columns=['Week'] + sectors)\n",
    "\n",
    "# Round all numeric columns to 2 decimal places\n",
    "df = df.round(2)\n",
    "\n",
    "df = sector_metrics.drop_duplicates([\"week\",\"date\"])[[\"week\",\"date\"]].reset_index(drop=True).merge(df, left_on=\"week\", right_on=\"Week\", how=\"left\").drop(columns=[\"week\"])\n",
    "\n",
    "# Create a new chart or get existing one\n",
    "chart_id = get_or_create_chart(dw, \"Weekly Risk Changes across Sectors\", \"tables\")\n",
    "\n",
    "# Add data to the chart\n",
    "dw.add_data(chart_id, df)\n",
    "\n",
    "# Define color scheme\n",
    "color_scheme = [\n",
    "    {\"color\": \"#008000\", \"position\": 0},     # Green for lowest values\n",
    "    {\"color\": \"#FFFFFF\", \"position\": 0.5},   # White for middle values\n",
    "    {\"color\": \"#FF0000\", \"position\": 1}      # Red for highest values\n",
    "]\n",
    "\n",
    "# Assuming 'sectors' is a list of your sector names\n",
    "columns_settings = {\n",
    "    \"Week\": {\n",
    "        \"type\": \"text\",\n",
    "        \"align\": \"left\"\n",
    "    },\n",
    "    \"date\": {\n",
    "        \"type\": \"date\",\n",
    "        \"align\": \"left\",\n",
    "        \"format\": \"YYYY-MM-DD\"\n",
    "    }\n",
    "}\n",
    "for sector in sectors:\n",
    "    columns_settings[sector] = {\n",
    "        \"format\": \"0.00%\",  # or whatever format is appropriate\n",
    "        \"heatmap\": {\n",
    "            \"enabled\": True\n",
    "        }\n",
    "    }\n",
    "\n",
    "# Update visualization properties\n",
    "vis_properties = {\n",
    "    \"data\": {\n",
    "        \"transpose\": False,\n",
    "        \"vertical-header\": True,\n",
    "        \"horizontal-header\": True\n",
    "    },\n",
    "    \"visualize\": {\n",
    "        \"heatmap\": {\n",
    "            \"enabled\": True,\n",
    "            \"mode\": \"continuous\",\n",
    "            \"stops\": \"equidistant\",\n",
    "            \"colors\": color_scheme,\n",
    "            \"palette\": 0,\n",
    "            \"rangeMax\": 100,\n",
    "            \"rangeMin\": -100,\n",
    "            \"stopCount\": 5,\n",
    "            \"hideValues\": False,\n",
    "            \"customStops\": [],\n",
    "            \"rangeCenter\": 0,\n",
    "            \"interpolation\": \"equidistant\"\n",
    "        },\n",
    "        \"columns\": columns_settings,\n",
    "        \"dark-mode-invert\": True,\n",
    "        \"rows\": {\n",
    "            \"header\": {\n",
    "                \"rows\": 1\n",
    "            }\n",
    "        },\n",
    "        \"header\": {\n",
    "            \"style\": {\n",
    "                \"bold\": True,\n",
    "                \"fontSize\": 1.1\n",
    "            },\n",
    "            \"borderBottom\": \"2px\"\n",
    "        },\n",
    "        \"pagination\": {\n",
    "            \"enabled\": False\n",
    "        },\n",
    "        \"numberFormat\": \"+0.00%\",  # Format as percentage with 2 decimal places and +/- sign\n",
    "        \"sortTable\": False,  # Disable automatic sorting\n",
    "        \"sortDirection\": \"asc\",  # Set sort direction to ascending (this will keep our descending order)\n",
    "    }\n",
    "}\n",
    "\n",
    "# Update the chart with visualization properties\n",
    "dw.update_chart(chart_id, metadata=vis_properties)\n",
    "\n",
    "# Update description separately\n",
    "description = {\n",
    "    \"describe\": {\n",
    "        \"intro\": \"This table shows the weekly percentage risk by sector. Green represents lower risk (negative values), white represents neutral risk (near zero), and red represents higher risk (positive values). Values range from -100% (lowest risk) to +100% (highest risk). Week 1 is at the bottom of the table.\"\n",
    "    }\n",
    "}\n",
    "dw.update_chart(chart_id, metadata=description)\n",
    "\n",
    "# Publish the chart\n",
    "publish_result = dw.publish_chart(chart_id)\n",
    "\n",
    "# Extract the public URL from the publish result\n",
    "public_url = publish_result[\"data\"][\"publicUrl\"]\n",
    "\n",
    "# Display the chart within the notebook\n",
    "iframe = IFrame(src=public_url, width=1400, height=600)\n",
    "\n",
    "# Print the URL and display the iframe\n",
    "print(f\"Published chart URL: {public_url}\")\n",
    "display(iframe)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 299,
   "id": "ee912c71-4b9d-4379-ba7f-0c693ccd9234",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Published chart URL: https://datawrapper.dwcdn.net/M7P9G/1/\n"
     ]
    }
   ],
   "source": [
    "from datawrapper import Datawrapper\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "# Initialize Datawrapper with your API key\n",
    "dw = Datawrapper(access_token=\"Z9FqsGcQfCaeERekoelA1IjU4RBo4XcPhfsGY935YVNol54uN3QzITdFSZphaQov\")\n",
    "\n",
    "# Function to normalize to [-1, 1] range\n",
    "# Function to normalize to [-1, 1] range\n",
    "def normalize_minus1_to_1(x):\n",
    "    return 2 * (x - np.min(x)) / (np.max(x) - np.min(x)) - 1\n",
    "\n",
    "# Assuming sector_metrics is already calculated and contains the data\n",
    "# Extract week numbers and sort them in ascending order\n",
    "week_numbers = sorted([int(week.split(\"-\")[1]) for week in sector_metrics['week'].unique()], reverse=True)\n",
    "weeks = [f'Week-{num}' for num in week_numbers]\n",
    "sectors = sector_metrics['sector'].unique().tolist()\n",
    "\n",
    "# Prepare data for table\n",
    "data = []\n",
    "for week in weeks:\n",
    "    week_data = sector_metrics[sector_metrics['week'] == week]\n",
    "    risk_values = week_data['risk'].values\n",
    "    normalized_risk = normalize_minus1_to_1(risk_values)\n",
    "    row_data = [week] + normalized_risk.tolist()\n",
    "    data.append(row_data)\n",
    "\n",
    "# Create a DataFrame\n",
    "df = pd.DataFrame(data, columns=['Week'] + sectors)\n",
    "\n",
    "# Create a new chart\n",
    "chart = dw.create_chart(title=\"Weekly Normalised Risk by Sector\", chart_type=\"tables\")\n",
    "\n",
    "# Add data to the chart\n",
    "dw.add_data(chart['id'], df)\n",
    "\n",
    "# Update visualization properties\n",
    "vis_properties = {\n",
    "    \"heatmap\": {\n",
    "        \"enabled\": True,\n",
    "        \"colors\": {\n",
    "            \"min\": \"#008000\",  # Green for low risk\n",
    "            \"max\": \"#FF0000\"   # Red for high risk\n",
    "        },\n",
    "        \"ranges\": {\n",
    "            \"min\": -1,\n",
    "            \"max\": 1\n",
    "        }\n",
    "    },\n",
    "    \"columns\": {\n",
    "        \"Week\": {\n",
    "            \"type\": \"text\",\n",
    "            \"align\": \"left\"\n",
    "        }\n",
    "    },\n",
    "    \"dark-mode-invert\": True,\n",
    "    \"rows\": {\n",
    "        \"header\": {\n",
    "            \"rows\": 1\n",
    "        }\n",
    "    },\n",
    "    \"header\": {\n",
    "        \"style\": {\n",
    "            \"bold\": True,\n",
    "            \"fontSize\": 1.1\n",
    "        },\n",
    "        \"borderBottom\": \"2px\"\n",
    "    },\n",
    "    \"pagination\": {\n",
    "        \"enabled\": False\n",
    "    },\n",
    "    \"numberFormat\": \".2f\"\n",
    "}\n",
    "\n",
    "# Update the chart with visualization properties\n",
    "dw.update_chart(chart['id'], metadata={\"visualize\": vis_properties})\n",
    "\n",
    "# Update description separately\n",
    "description = {\n",
    "    \"intro\": \"This table shows the weekly normalized risk by sector. Green represents lower risk, white represents neutral risk, and red represents higher risk. Values range from -1 (lowest risk) to 1 (highest risk).\"\n",
    "}\n",
    "dw.update_chart(chart['id'], metadata={\"describe\": description})\n",
    "\n",
    "# Publish the chart\n",
    "dw.publish_chart(chart['id'])\n",
    "\n",
    "# Get the published chart URL\n",
    "published_chart = dw.get_chart(chart['id'])\n",
    "print(f\"Published chart URL: {published_chart['publicUrl']}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "id": "e4973a26-be76-4213-b88d-2ac423c1ef78",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plotly.com"
       },
       "data": [
        {
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "type": "heatmap",
         "x": [
          "Basic Materials",
          "Communication Services",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Energy",
          "Financial Services",
          "Healthcare",
          "Industrials",
          "Real Estate",
          "Technology",
          "Utilities"
         ],
         "y": [
          "Week 1",
          "Week 2",
          "Week 3",
          "Week 4",
          "Week 5",
          "Week 6",
          "Week 7",
          "Week 8",
          "Week 9",
          "Week 10",
          "Week 11",
          "Week 12"
         ],
         "z": [
          [
           -0.8247332572937012,
           0.7399860620498657,
           -0.6604000329971313,
           0.05544090270996094,
           1,
           -0.018944501876831055,
           0.3290160894393921,
           -0.5379670858383179,
           -0.20470386743545532,
           -1,
           -0.40325039625167847
          ],
          [
           -1,
           0.4102628231048584,
           0.16300725936889648,
           0.5645352602005005,
           -0.2813374400138855,
           0.86243736743927,
           -0.038376033306121826,
           0.19178688526153564,
           0.22943568229675293,
           0.40152788162231445,
           1
          ],
          [
           -1,
           -0.046484529972076416,
           1,
           -0.7189271450042725,
           -0.9488891959190369,
           0.11050701141357422,
           -0.9454736113548279,
           -0.04871493577957153,
           -0.2850092649459839,
           -0.261454701423645,
           -0.024380028247833252
          ],
          [
           0.2628899812698364,
           0.04149317741394043,
           0.7345806360244751,
           1,
           -0.16012704372406006,
           0.6060426235198975,
           0.5253762006759644,
           0.07232141494750977,
           0.03712010383605957,
           -1,
           0.7195168733596802
          ],
          [
           -0.37411510944366455,
           -1,
           1,
           0.7072715759277344,
           0.5757100582122803,
           0.6218405961990356,
           -0.5699130296707153,
           0.45078587532043457,
           0.18485724925994873,
           0.0791006088256836,
           0.3760477304458618
          ],
          [
           -0.3818584084510803,
           -1,
           -0.27449125051498413,
           1,
           0.5117075443267822,
           0.12273085117340088,
           -0.45408350229263306,
           0.2936652898788452,
           -0.42116880416870117,
           0.2713439464569092,
           -0.024664461612701416
          ],
          [
           -0.713671088218689,
           1,
           -1,
           0.9490498304367065,
           0.2629837989807129,
           0.5589165687561035,
           0.03455197811126709,
           0.5558017492294312,
           0.3368312120437622,
           0.3255819082260132,
           0.15352892875671387
          ],
          [
           0.09643733501434326,
           0.7842707633972168,
           0.3092237710952759,
           1,
           -0.23984044790267944,
           -1,
           -0.7191897630691528,
           -0.7358461618423462,
           -0.542195200920105,
           -0.23401659727096558,
           -0.16954028606414795
          ],
          [
           -1,
           0.4683438539505005,
           0.5113693475723267,
           0.27240753173828125,
           -0.0831918716430664,
           0.28926026821136475,
           -0.7576175928115845,
           0.18810737133026123,
           0.9605185985565186,
           0.08131110668182373,
           1
          ],
          [
           0.2928570508956909,
           1,
           0.6866739988327026,
           0.6783608198165894,
           0.7197471857070923,
           0.44363903999328613,
           0.012952566146850586,
           0.8167963027954102,
           0.5498523712158203,
           -1,
           0.6910419464111328
          ],
          [
           -1,
           -0.3108114004135132,
           -0.2201971411705017,
           1,
           -0.6306048631668091,
           -0.5633341073989868,
           0.11330676078796387,
           -0.5682216882705688,
           -0.0920947790145874,
           0.06632769107818604,
           -0.11248356103897095
          ],
          [
           -1,
           0.5388970375061035,
           -0.12693458795547485,
           1,
           0.6366108655929565,
           0.1287553310394287,
           -0.10170340538024902,
           -0.7800039052963257,
           -0.275238573551178,
           -0.4295450448989868,
           0.6467372179031372
          ]
         ],
         "zmax": 1,
         "zmin": -1
        }
       ],
       "layout": {
        "height": 800,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#f2f5fa"
            },
            "error_y": {
             "color": "#f2f5fa"
            },
            "marker": {
             "line": {
              "color": "rgb(17,17,17)",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "rgb(17,17,17)",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#A2B1C6",
             "gridcolor": "#506784",
             "linecolor": "#506784",
             "minorgridcolor": "#506784",
             "startlinecolor": "#A2B1C6"
            },
            "baxis": {
             "endlinecolor": "#A2B1C6",
             "gridcolor": "#506784",
             "linecolor": "#506784",
             "minorgridcolor": "#506784",
             "startlinecolor": "#A2B1C6"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "line": {
              "color": "#283442"
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "line": {
              "color": "#283442"
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#506784"
             },
             "line": {
              "color": "rgb(17,17,17)"
             }
            },
            "header": {
             "fill": {
              "color": "#2a3f5f"
             },
             "line": {
              "color": "rgb(17,17,17)"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#f2f5fa",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#f2f5fa"
          },
          "geo": {
           "bgcolor": "rgb(17,17,17)",
           "lakecolor": "rgb(17,17,17)",
           "landcolor": "rgb(17,17,17)",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "#506784"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "dark"
          },
          "paper_bgcolor": "rgb(17,17,17)",
          "plot_bgcolor": "rgb(17,17,17)",
          "polar": {
           "angularaxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           },
           "bgcolor": "rgb(17,17,17)",
           "radialaxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "rgb(17,17,17)",
            "gridcolor": "#506784",
            "gridwidth": 2,
            "linecolor": "#506784",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#C8D4E3"
           },
           "yaxis": {
            "backgroundcolor": "rgb(17,17,17)",
            "gridcolor": "#506784",
            "gridwidth": 2,
            "linecolor": "#506784",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#C8D4E3"
           },
           "zaxis": {
            "backgroundcolor": "rgb(17,17,17)",
            "gridcolor": "#506784",
            "gridwidth": 2,
            "linecolor": "#506784",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#C8D4E3"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#f2f5fa"
           }
          },
          "sliderdefaults": {
           "bgcolor": "#C8D4E3",
           "bordercolor": "rgb(17,17,17)",
           "borderwidth": 1,
           "tickwidth": 0
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           },
           "bgcolor": "rgb(17,17,17)",
           "caxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "updatemenudefaults": {
           "bgcolor": "#506784",
           "borderwidth": 0
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "#283442",
           "linecolor": "#506784",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "#283442",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "#283442",
           "linecolor": "#506784",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "#283442",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Weekly Normalized Risk by Sector"
        },
        "width": 1200,
        "xaxis": {
         "autorange": true,
         "range": [
          -0.5,
          10.5
         ],
         "tickangle": 45,
         "title": {
          "text": "Sector"
         },
         "type": "category"
        },
        "yaxis": {
         "autorange": true,
         "range": [
          -0.5,
          11.5
         ],
         "title": {
          "text": "Week"
         },
         "type": "category"
        }
       }
      },
      "image/png": "",
      "text/html": [
       "<div>                            <div id=\"6b22510c-ce26-468e-bc8e-5749a8b47a46\" class=\"plotly-graph-div\" style=\"height:800px; width:1200px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"6b22510c-ce26-468e-bc8e-5749a8b47a46\")) {                    Plotly.newPlot(                        \"6b22510c-ce26-468e-bc8e-5749a8b47a46\",                        [{\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"x\":[\"Basic Materials\",\"Communication Services\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Energy\",\"Financial Services\",\"Healthcare\",\"Industrials\",\"Real Estate\",\"Technology\",\"Utilities\"],\"y\":[\"Week 1\",\"Week 2\",\"Week 3\",\"Week 4\",\"Week 5\",\"Week 6\",\"Week 7\",\"Week 8\",\"Week 9\",\"Week 10\",\"Week 11\",\"Week 12\"],\"z\":[[-0.8247332572937012,0.7399860620498657,-0.6604000329971313,0.05544090270996094,1.0,-0.018944501876831055,0.3290160894393921,-0.5379670858383179,-0.20470386743545532,-1.0,-0.40325039625167847],[-1.0,0.4102628231048584,0.16300725936889648,0.5645352602005005,-0.2813374400138855,0.86243736743927,-0.038376033306121826,0.19178688526153564,0.22943568229675293,0.40152788162231445,1.0],[-1.0,-0.046484529972076416,1.0,-0.7189271450042725,-0.9488891959190369,0.11050701141357422,-0.9454736113548279,-0.04871493577957153,-0.2850092649459839,-0.261454701423645,-0.024380028247833252],[0.2628899812698364,0.04149317741394043,0.7345806360244751,1.0,-0.16012704372406006,0.6060426235198975,0.5253762006759644,0.07232141494750977,0.03712010383605957,-1.0,0.7195168733596802],[-0.37411510944366455,-1.0,1.0,0.7072715759277344,0.5757100582122803,0.6218405961990356,-0.5699130296707153,0.45078587532043457,0.18485724925994873,0.0791006088256836,0.3760477304458618],[-0.3818584084510803,-1.0,-0.27449125051498413,1.0,0.5117075443267822,0.12273085117340088,-0.45408350229263306,0.2936652898788452,-0.42116880416870117,0.2713439464569092,-0.024664461612701416],[-0.713671088218689,1.0,-1.0,0.9490498304367065,0.2629837989807129,0.5589165687561035,0.03455197811126709,0.5558017492294312,0.3368312120437622,0.3255819082260132,0.15352892875671387],[0.09643733501434326,0.7842707633972168,0.3092237710952759,1.0,-0.23984044790267944,-1.0,-0.7191897630691528,-0.7358461618423462,-0.542195200920105,-0.23401659727096558,-0.16954028606414795],[-1.0,0.4683438539505005,0.5113693475723267,0.27240753173828125,-0.0831918716430664,0.28926026821136475,-0.7576175928115845,0.18810737133026123,0.9605185985565186,0.08131110668182373,1.0],[0.2928570508956909,1.0,0.6866739988327026,0.6783608198165894,0.7197471857070923,0.44363903999328613,0.012952566146850586,0.8167963027954102,0.5498523712158203,-1.0,0.6910419464111328],[-1.0,-0.3108114004135132,-0.2201971411705017,1.0,-0.6306048631668091,-0.5633341073989868,0.11330676078796387,-0.5682216882705688,-0.0920947790145874,0.06632769107818604,-0.11248356103897095],[-1.0,0.5388970375061035,-0.12693458795547485,1.0,0.6366108655929565,0.1287553310394287,-0.10170340538024902,-0.7800039052963257,-0.275238573551178,-0.4295450448989868,0.6467372179031372]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#f2f5fa\"},\"error_y\":{\"color\":\"#f2f5fa\"},\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scattergl\"}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"baxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#506784\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"header\":{\"fill\":{\"color\":\"#2a3f5f\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#f2f5fa\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"rgb(17,17,17)\",\"plot_bgcolor\":\"rgb(17,17,17)\",\"polar\":{\"bgcolor\":\"rgb(17,17,17)\",\"angularaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"rgb(17,17,17)\",\"aaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#f2f5fa\"}},\"annotationdefaults\":{\"arrowcolor\":\"#f2f5fa\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"rgb(17,17,17)\",\"landcolor\":\"rgb(17,17,17)\",\"subunitcolor\":\"#506784\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"rgb(17,17,17)\"},\"title\":{\"x\":0.05},\"updatemenudefaults\":{\"bgcolor\":\"#506784\",\"borderwidth\":0},\"sliderdefaults\":{\"bgcolor\":\"#C8D4E3\",\"borderwidth\":1,\"bordercolor\":\"rgb(17,17,17)\",\"tickwidth\":0},\"mapbox\":{\"style\":\"dark\"}}},\"title\":{\"text\":\"Weekly Normalized Risk by Sector\"},\"height\":800,\"width\":1200,\"yaxis\":{\"title\":{\"text\":\"Week\"}},\"xaxis\":{\"title\":{\"text\":\"Sector\"},\"tickangle\":45}},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('6b22510c-ce26-468e-bc8e-5749a8b47a46');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import plotly.graph_objects as go\n",
    "import numpy as np\n",
    "\n",
    "# Function to normalize to [-1, 1] range\n",
    "def normalize_minus1_to_1(x):\n",
    "    return 2 * (x - np.min(x)) / (np.max(x) - np.min(x)) - 1\n",
    "\n",
    "# Assuming sector_metrics is already calculated and contains the data\n",
    "\n",
    "# Extract week numbers and sort them in ascending order\n",
    "week_numbers = sorted([int(week.split()[1]) for week in sector_metrics['week'].unique()])\n",
    "weeks = [f'Week {num}' for num in week_numbers]\n",
    "\n",
    "sectors = sector_metrics['sector'].unique().tolist()\n",
    "\n",
    "# Prepare data for heatmap\n",
    "z_values = []\n",
    "for week in weeks:\n",
    "    week_data = sector_metrics[sector_metrics['week'] == week]\n",
    "    risk_values = week_data['risk'].values\n",
    "    normalized_risk = normalize_minus1_to_1(risk_values)\n",
    "    z_values.append(normalized_risk)\n",
    "\n",
    "# Create the heatmap\n",
    "fig = go.Figure(data=go.Heatmap(\n",
    "    z=z_values,\n",
    "    x=sectors,\n",
    "    y=weeks,\n",
    "    colorscale=[\n",
    "        [0, 'green'],\n",
    "        [0.5, 'white'],\n",
    "        [1, 'red']\n",
    "    ],\n",
    "    zmin=-1,\n",
    "    zmax=1,\n",
    "))\n",
    "\n",
    "# Update layout\n",
    "fig.update_layout(\n",
    "    title='Weekly Normalized Risk by Sector',\n",
    "    height=800,\n",
    "    width=1200,\n",
    "    yaxis_title='Week',\n",
    "    xaxis_title='Sector',\n",
    ")\n",
    "\n",
    "# Rotate x-axis labels for better readability\n",
    "fig.update_xaxes(tickangle=45)\n",
    "\n",
    "# Show the plot\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "id": "fca80860-7f9b-4ccf-8822-cb92ce053bf2",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import pandas as pd\n",
    "from datawrapper import Datawrapper\n",
    "\n",
    "# Assuming you have your API key\n",
    "dw = Datawrapper(access_token=\"Z9FqsGcQfCaeERekoelA1IjU4RBo4XcPhfsGY935YVNol54uN3QzITdFSZphaQov\")\n",
    "\n",
    "# Normalize function\n",
    "def normalize_minus1_to_1(series):\n",
    "    return 2 * (series - series.min()) / (series.max() - series.min()) - 1\n",
    "\n",
    "# Prepare data\n",
    "metrics = ['accounting', 'events', 'misstatement', 'risk']\n",
    "weeks = sorted(sector_metrics['week'].unique(), reverse=True)\n",
    "sectors = sector_metrics['sector'].unique().tolist()\n",
    "\n",
    "# Create a dictionary to store DataFrames for each week\n",
    "weekly_dfs = {}\n",
    "\n",
    "for week in weeks:\n",
    "    week_data = sector_metrics[sector_metrics['week'] == week].copy()\n",
    "    for metric in metrics:\n",
    "        week_data[metric] = normalize_minus1_to_1(week_data[metric])\n",
    "    \n",
    "    # Reshape the data for Datawrapper\n",
    "    week_df = week_data[['sector'] + metrics].set_index('sector')\n",
    "    \n",
    "    weekly_dfs[week] = week_df\n",
    "\n",
    "# Function to create color codes\n",
    "def get_color(value):\n",
    "    if value < -0.5:\n",
    "        return '#00FF00'  # Green\n",
    "    elif value > 0.5:\n",
    "        return '#FF0000'  # Red\n",
    "    else:\n",
    "        return '#FFFFFF'  # White"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "id": "1c7cf161-cc95-4183-8b94-649d95e9005d",
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'Datawrapper' object has no attribute 'get_chart_url'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[228], line 84\u001b[0m\n\u001b[1;32m     81\u001b[0m \u001b[38;5;66;03m# Publish the main chart\u001b[39;00m\n\u001b[1;32m     82\u001b[0m dw\u001b[38;5;241m.\u001b[39mpublish_chart(main_chart[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mid\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[0;32m---> 84\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mMain chart published. URL: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[43mdw\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_chart_url\u001b[49m(main_chart[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mid\u001b[39m\u001b[38;5;124m'\u001b[39m])\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m)\n",
      "\u001b[0;31mAttributeError\u001b[0m: 'Datawrapper' object has no attribute 'get_chart_url'"
     ]
    }
   ],
   "source": [
    "chart_ids = {}\n",
    "\n",
    "for week, df in weekly_dfs.items():\n",
    "    # Create a new chart\n",
    "    chart = dw.create_chart(\n",
    "        title=f\"Normalized Metrics by Sector - {week}\",\n",
    "        chart_type=\"tables\",\n",
    "        data=df.reset_index()  # Reset index to include 'sector' as a column\n",
    "    )\n",
    "    \n",
    "    chart_ids[week] = chart['id']\n",
    "    \n",
    "    # Update the chart with styling\n",
    "    dw.update_chart(\n",
    "        chart_ids[week],\n",
    "        metadata={\n",
    "            \"visualize\": {\n",
    "                \"tables\": {\n",
    "                    \"cells\": {\n",
    "                        \"show\": True\n",
    "                    },\n",
    "                    \"header\": {\n",
    "                        \"show\": True\n",
    "                    }\n",
    "                }\n",
    "            }\n",
    "        }\n",
    "    )\n",
    "    \n",
    "    # Apply color coding to cells\n",
    "    for col in metrics:\n",
    "        dw.update_chart(\n",
    "            chart_ids[week],\n",
    "            metadata={\n",
    "                \"visualize\": {\n",
    "                    \"columns\": {\n",
    "                        col: {\n",
    "                            \"cellFormat\": {\n",
    "                                \"type\": \"custom\",\n",
    "                                \"formatMethod\": \"custom\",\n",
    "                                \"customFormat\": \"{:.2f}\"\n",
    "                            },\n",
    "                            \"cellBackgroundColor\": {\n",
    "                                \"mode\": \"custom\",\n",
    "                                \"customColors\": df[col].apply(get_color).tolist()\n",
    "                            }\n",
    "                        }\n",
    "                    }\n",
    "                }\n",
    "            }\n",
    "        )\n",
    "    \n",
    "    # Publish the chart\n",
    "    dw.publish_chart(chart_ids[week])\n",
    "\n",
    "# Create a main chart with tabs (same as before)\n",
    "main_chart = dw.create_chart(\n",
    "    title=\"Weekly Normalized Metrics by Sector\",\n",
    "    chart_type=\"tables\",\n",
    "    data=pd.DataFrame()  # Empty DataFrame as we'll use tabs\n",
    ")\n",
    "\n",
    "# Update the chart to use tabs\n",
    "dw.update_chart(\n",
    "    main_chart['id'],\n",
    "    metadata={\n",
    "        \"visualize\": {\n",
    "            \"tabs\": {\n",
    "                \"enabled\": True,\n",
    "                \"tabs\": [\n",
    "                    {\n",
    "                        \"title\": week,\n",
    "                        \"chart_id\": chart_id\n",
    "                    } for week, chart_id in chart_ids.items()\n",
    "                ]\n",
    "            }\n",
    "        }\n",
    "    }\n",
    ")\n",
    "\n",
    "# Publish the main chart\n",
    "dw.publish_chart(main_chart['id'])\n",
    "\n",
    "print(f\"Main chart published. URL: {dw.get_chart_url(main_chart['id'])}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 230,
   "id": "8f60dc2a-3ac0-4e70-9283-e0b896ec83c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "published_url = dw.get_chart_display_urls(main_chart['id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "id": "e5c8a2c1-0e27-4547-b77c-1ccb872227f5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[{'id': 'standalone',\n",
       "  'url': 'https://www.datawrapper.de/_/eH19w/',\n",
       "  'name': 'For sharing'}]"
      ]
     },
     "execution_count": 231,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "published_url"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7a5a732c-d43e-43bb-a8b4-6a23191c2a83",
   "metadata": {},
   "outputs": [],
   "source": [
    "dw.get_chart_url(main_chart['id'])}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "id": "3e092d90-9e56-4d9b-b2e9-c8bfbcc6b6fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Week 9':                         accounting  events  misstatement   risk\n",
       " sector                                                         \n",
       " Basic Materials             -1.000  -0.509        -1.000 -1.000\n",
       " Communication Services      -0.152   0.474         0.670  0.468\n",
       " Consumer Cyclical            0.396   0.771        -0.105  0.511\n",
       " Consumer Defensive          -0.472   0.380         0.447  0.272\n",
       " Energy                       1.000   0.046        -0.432 -0.083\n",
       " Financial Services           0.385   0.397         0.104  0.289\n",
       " Healthcare                   0.366  -1.000         0.250 -0.758\n",
       " Industrials                  0.143   0.052         0.692  0.188\n",
       " Real Estate                  0.536   0.891         0.865  0.961\n",
       " Technology                  -0.443  -0.063         0.887  0.081\n",
       " Utilities                   -0.117   1.000         1.000  1.000,\n",
       " 'Week 8':                         accounting  events  misstatement   risk\n",
       " sector                                                         \n",
       " Basic Materials              0.425  -0.004        -0.184  0.096\n",
       " Communication Services       0.703   0.611         0.228  0.784\n",
       " Consumer Cyclical            0.229   0.221         0.054  0.309\n",
       " Consumer Defensive          -0.734   1.000         0.561  1.000\n",
       " Energy                      -1.000  -0.115        -1.000 -0.240\n",
       " Financial Services          -0.088  -1.000         0.022 -1.000\n",
       " Healthcare                  -0.706  -0.646        -0.007 -0.719\n",
       " Industrials                 -0.096  -0.751         0.246 -0.736\n",
       " Real Estate                 -0.047  -0.578         0.502 -0.542\n",
       " Technology                   1.000  -0.420         0.509 -0.234\n",
       " Utilities                    0.312  -0.281         1.000 -0.170,\n",
       " 'Week 7':                         accounting  events  misstatement   risk\n",
       " sector                                                         \n",
       " Basic Materials             -0.676  -0.713        -0.415 -0.714\n",
       " Communication Services       0.934   1.000        -0.125  1.000\n",
       " Consumer Cyclical           -1.000  -1.000        -0.065 -1.000\n",
       " Consumer Defensive           1.000   0.914         0.296  0.949\n",
       " Energy                       0.593   0.216        -1.000  0.263\n",
       " Financial Services           0.967   0.470        -0.164  0.559\n",
       " Healthcare                   0.394  -0.038        -0.272  0.035\n",
       " Industrials                  0.264   0.602        -0.072  0.556\n",
       " Real Estate                  0.775   0.233         0.214  0.337\n",
       " Technology                   0.743   0.223         0.291  0.326\n",
       " Utilities                   -0.406   0.224         1.000  0.154,\n",
       " 'Week 6':                         accounting  events  misstatement   risk\n",
       " sector                                                         \n",
       " Basic Materials              0.888  -0.560        -0.430 -0.382\n",
       " Communication Services      -0.205  -1.000         0.158 -1.000\n",
       " Consumer Cyclical           -1.000   0.059        -0.039 -0.274\n",
       " Consumer Defensive           1.000   1.000         0.678  1.000\n",
       " Energy                       0.784   0.518        -1.000  0.512\n",
       " Financial Services           0.261   0.188        -0.061  0.123\n",
       " Healthcare                   0.175  -0.460        -0.113 -0.454\n",
       " Industrials                  0.672   0.275         0.081  0.294\n",
       " Real Estate                  0.028  -0.395         0.552 -0.421\n",
       " Technology                   0.664   0.237         0.880  0.271\n",
       " Utilities                    0.294  -0.011         1.000 -0.025,\n",
       " 'Week 5':                         accounting  events  misstatement   risk\n",
       " sector                                                         \n",
       " Basic Materials              1.000  -0.637        -1.000 -0.374\n",
       " Communication Services      -1.000  -1.000        -0.100 -1.000\n",
       " Consumer Cyclical            0.130   1.000        -0.165  1.000\n",
       " Consumer Defensive          -0.038   0.690         0.449  0.707\n",
       " Energy                      -0.100   0.598        -0.955  0.576\n",
       " Financial Services           0.506   0.524        -0.349  0.622\n",
       " Healthcare                   0.457  -0.779        -0.276 -0.570\n",
       " Industrials                  0.461   0.339        -0.178  0.451\n",
       " Real Estate                  0.668  -0.004         0.293  0.185\n",
       " Technology                  -0.646   0.107         0.438  0.079\n",
       " Utilities                    0.260   0.257         1.000  0.376,\n",
       " 'Week 4':                         accounting  events  misstatement   risk\n",
       " sector                                                         \n",
       " Basic Materials              0.039   0.486        -0.399  0.263\n",
       " Communication Services      -1.000   0.714        -0.524  0.041\n",
       " Consumer Cyclical            0.016   1.000        -0.325  0.735\n",
       " Consumer Defensive           0.941   0.862         0.036  1.000\n",
       " Energy                       1.000  -0.373        -1.000 -0.160\n",
       " Financial Services           0.550   0.625        -0.334  0.606\n",
       " Healthcare                  -0.272   0.885         0.198  0.525\n",
       " Industrials                 -0.036   0.334        -0.957  0.072\n",
       " Real Estate                  0.500   0.023         0.073  0.037\n",
       " Technology                   0.274  -1.000         0.386 -1.000\n",
       " Utilities                    0.843   0.571         1.000  0.720,\n",
       " 'Week 3':                         accounting  events  misstatement   risk\n",
       " sector                                                         \n",
       " Basic Materials             -1.000  -0.749        -0.434 -1.000\n",
       " Communication Services       0.568  -0.460        -0.613 -0.046\n",
       " Consumer Cyclical           -0.075   1.000        -0.316  1.000\n",
       " Consumer Defensive          -0.195  -0.844         0.190 -0.719\n",
       " Energy                      -0.697  -0.831        -1.000 -0.949\n",
       " Financial Services           0.531  -0.274        -0.358  0.111\n",
       " Healthcare                  -0.368  -1.000        -0.295 -0.945\n",
       " Industrials                 -0.674   0.138        -0.340 -0.049\n",
       " Real Estate                 -0.155  -0.386         0.230 -0.285\n",
       " Technology                   0.282  -0.583         0.779 -0.261\n",
       " Utilities                    1.000  -0.676         1.000 -0.024,\n",
       " 'Week 2':                         accounting  events  misstatement   risk\n",
       " sector                                                         \n",
       " Basic Materials             -0.595  -1.000        -0.668 -1.000\n",
       " Communication Services       0.455   0.423         0.352  0.410\n",
       " Consumer Cyclical            0.019   0.311        -0.183  0.163\n",
       " Consumer Defensive          -0.214   1.000         0.649  0.565\n",
       " Energy                      -1.000   0.236        -1.000 -0.281\n",
       " Financial Services           0.646   0.963        -0.404  0.862\n",
       " Healthcare                  -0.057   0.066         0.015 -0.038\n",
       " Industrials                  0.055   0.331         0.063  0.192\n",
       " Real Estate                 -0.071   0.449         0.643  0.229\n",
       " Technology                  -0.144   0.730         1.000  0.402\n",
       " Utilities                    1.000   0.960         0.772  1.000,\n",
       " 'Week 12':                         accounting  events  misstatement   risk\n",
       " sector                                                         \n",
       " Basic Materials             -0.808  -1.000         0.219 -1.000\n",
       " Communication Services      -0.534   0.722        -0.947  0.539\n",
       " Consumer Cyclical           -0.342  -0.134        -0.000 -0.127\n",
       " Consumer Defensive           0.199   0.995         1.000  1.000\n",
       " Energy                       1.000   0.293         0.390  0.637\n",
       " Financial Services          -0.148   0.098         0.189  0.129\n",
       " Healthcare                  -0.824   0.059         0.546 -0.102\n",
       " Industrials                 -0.333  -0.898        -1.000 -0.780\n",
       " Real Estate                 -0.376  -0.291        -0.791 -0.275\n",
       " Technology                  -0.417  -0.463        -0.202 -0.430\n",
       " Utilities                   -1.000   1.000         0.668  0.647,\n",
       " 'Week 11':                         accounting  events  misstatement   risk\n",
       " sector                                                         \n",
       " Basic Materials              0.059  -1.000        -0.120 -1.000\n",
       " Communication Services      -0.233  -0.322        -0.561 -0.311\n",
       " Consumer Cyclical            0.914  -0.500        -0.064 -0.220\n",
       " Consumer Defensive          -1.000   1.000         0.863  1.000\n",
       " Energy                       0.307  -0.732         0.510 -0.631\n",
       " Financial Services          -0.551  -0.480         0.250 -0.563\n",
       " Healthcare                   1.000  -0.228         0.723  0.113\n",
       " Industrials                 -0.494  -0.490        -1.000 -0.568\n",
       " Real Estate                 -0.072  -0.166        -0.291 -0.092\n",
       " Technology                  -0.484   0.064         0.021  0.066\n",
       " Utilities                    0.261  -0.266         1.000 -0.112,\n",
       " 'Week 10':                         accounting  events  misstatement   risk\n",
       " sector                                                         \n",
       " Basic Materials             -0.134   0.441        -0.226  0.293\n",
       " Communication Services       1.000   0.976        -0.397  1.000\n",
       " Consumer Cyclical            0.246   0.782        -0.154  0.687\n",
       " Consumer Defensive           0.494   0.725         0.775  0.678\n",
       " Energy                      -0.825   1.000         0.443  0.720\n",
       " Financial Services           0.560   0.474         0.155  0.444\n",
       " Healthcare                   0.807  -0.017         0.613  0.013\n",
       " Industrials                  0.725   0.838        -1.000  0.817\n",
       " Real Estate                  0.790   0.546        -0.183  0.550\n",
       " Technology                   0.447  -1.000         0.073 -1.000\n",
       " Utilities                   -1.000   0.998         1.000  0.691,\n",
       " 'Week 1':                         accounting  events  misstatement   risk\n",
       " sector                                                         \n",
       " Basic Materials             -0.959  -0.335        -0.976 -0.825\n",
       " Communication Services       0.306   0.954        -0.225  0.740\n",
       " Consumer Cyclical           -1.000  -0.140        -0.533 -0.660\n",
       " Consumer Defensive           0.483   0.116         0.053  0.055\n",
       " Energy                       1.000   1.000        -1.000  1.000\n",
       " Financial Services           0.292   0.108        -0.546 -0.019\n",
       " Healthcare                   0.072   0.564         1.000  0.329\n",
       " Industrials                 -0.566  -0.163        -0.361 -0.538\n",
       " Real Estate                 -0.685   0.250         0.157 -0.205\n",
       " Technology                   0.284  -1.000         0.169 -1.000\n",
       " Utilities                    0.449  -0.388         0.071 -0.403}"
      ]
     },
     "execution_count": 227,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weekly_dfs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "27cca588-76ce-44ba-858a-4c317de1d282",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Normalize each metric independently\n",
    "for metric in metrics:\n",
    "    sector_metrics[metric] = normalize_minus1_to_1(sector_metrics[metric])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "id": "ed5d1fec-e6ae-49fb-bb75-d71edff31c53",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'n0gY5'"
      ]
     },
     "execution_count": 232,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chart_ids[week]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "169c8b43-ecea-4c74-84a8-626fc24b1213",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sector</th>\n",
       "      <th>week</th>\n",
       "      <th>accounting</th>\n",
       "      <th>events</th>\n",
       "      <th>misstatement</th>\n",
       "      <th>risk</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Basic Materials</td>\n",
       "      <td>Week 1</td>\n",
       "      <td>-0.469</td>\n",
       "      <td>-0.418</td>\n",
       "      <td>-0.709</td>\n",
       "      <td>-0.481</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Basic Materials</td>\n",
       "      <td>Week 10</td>\n",
       "      <td>-0.385</td>\n",
       "      <td>-0.373</td>\n",
       "      <td>0.898</td>\n",
       "      <td>-0.389</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Basic Materials</td>\n",
       "      <td>Week 11</td>\n",
       "      <td>-0.322</td>\n",
       "      <td>-0.366</td>\n",
       "      <td>0.926</td>\n",
       "      <td>-0.362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Basic Materials</td>\n",
       "      <td>Week 12</td>\n",
       "      <td>-0.221</td>\n",
       "      <td>-0.204</td>\n",
       "      <td>0.963</td>\n",
       "      <td>-0.195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Basic Materials</td>\n",
       "      <td>Week 13</td>\n",
       "      <td>-0.173</td>\n",
       "      <td>-0.140</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138</th>\n",
       "      <td>Utilities</td>\n",
       "      <td>Week 5</td>\n",
       "      <td>-0.579</td>\n",
       "      <td>-0.867</td>\n",
       "      <td>-0.857</td>\n",
       "      <td>-0.891</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>139</th>\n",
       "      <td>Utilities</td>\n",
       "      <td>Week 6</td>\n",
       "      <td>-0.576</td>\n",
       "      <td>-0.890</td>\n",
       "      <td>-0.884</td>\n",
       "      <td>-0.909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140</th>\n",
       "      <td>Utilities</td>\n",
       "      <td>Week 7</td>\n",
       "      <td>-0.538</td>\n",
       "      <td>-0.901</td>\n",
       "      <td>-0.921</td>\n",
       "      <td>-0.907</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>Utilities</td>\n",
       "      <td>Week 8</td>\n",
       "      <td>-0.549</td>\n",
       "      <td>-0.914</td>\n",
       "      <td>-0.933</td>\n",
       "      <td>-0.921</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142</th>\n",
       "      <td>Utilities</td>\n",
       "      <td>Week 9</td>\n",
       "      <td>-0.545</td>\n",
       "      <td>-0.924</td>\n",
       "      <td>-0.950</td>\n",
       "      <td>-0.929</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>143 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              sector     week  accounting  events  misstatement   risk\n",
       "0    Basic Materials   Week 1      -0.469  -0.418        -0.709 -0.481\n",
       "1    Basic Materials  Week 10      -0.385  -0.373         0.898 -0.389\n",
       "2    Basic Materials  Week 11      -0.322  -0.366         0.926 -0.362\n",
       "3    Basic Materials  Week 12      -0.221  -0.204         0.963 -0.195\n",
       "4    Basic Materials  Week 13      -0.173  -0.140         1.000 -0.125\n",
       "..               ...      ...         ...     ...           ...    ...\n",
       "138        Utilities   Week 5      -0.579  -0.867        -0.857 -0.891\n",
       "139        Utilities   Week 6      -0.576  -0.890        -0.884 -0.909\n",
       "140        Utilities   Week 7      -0.538  -0.901        -0.921 -0.907\n",
       "141        Utilities   Week 8      -0.549  -0.914        -0.933 -0.921\n",
       "142        Utilities   Week 9      -0.545  -0.924        -0.950 -0.929\n",
       "\n",
       "[143 rows x 6 columns]"
      ]
     },
     "execution_count": 161,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sector_metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "00d61ed7-2f7c-4f8d-90e8-2cbe26b40982",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plotly.com"
       },
       "data": [
        {
         "colorbar": {
          "title": {
           "text": "Normalized Value"
          }
         },
         "colorscale": [
          [
           0,
           "green"
          ],
          [
           0.5,
           "white"
          ],
          [
           1,
           "red"
          ]
         ],
         "type": "heatmap",
         "x": [
          "Basic Materials",
          "Communication Services",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Energy",
          "Financial Services",
          "Healthcare",
          "Industrials",
          "Real Estate",
          "Technology",
          "Utilities"
         ],
         "y": [
          "accounting",
          "events",
          "misstatement",
          "risk"
         ],
         "z": [
          [
           -0.80530703,
           -0.5288011,
           -0.3389688,
           0.20996308,
           1,
           -0.14756715,
           -0.8181075,
           -0.38051647,
           -0.3727175,
           -0.48394066,
           -1
          ],
          [
           -1,
           0.74090946,
           -0.13368344,
           0.98713994,
           0.29144382,
           0.079969525,
           0.060003877,
           -0.91934264,
           -0.28990173,
           -0.4465868,
           1
          ],
          [
           0.19938242,
           -1,
           -0.025914788,
           1,
           0.37532377,
           0.16861546,
           0.5351323,
           -0.9957719,
           -0.83941245,
           -0.23310441,
           0.6637001
          ],
          [
           -1,
           0.5596565,
           -0.12434518,
           1,
           0.6372138,
           0.11567962,
           -0.09791428,
           -0.812217,
           -0.27223378,
           -0.43532532,
           0.6505419
          ]
         ],
         "zmax": 1,
         "zmin": -1
        }
       ],
       "layout": {
        "height": 600,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#f2f5fa"
            },
            "error_y": {
             "color": "#f2f5fa"
            },
            "marker": {
             "line": {
              "color": "rgb(17,17,17)",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "rgb(17,17,17)",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#A2B1C6",
             "gridcolor": "#506784",
             "linecolor": "#506784",
             "minorgridcolor": "#506784",
             "startlinecolor": "#A2B1C6"
            },
            "baxis": {
             "endlinecolor": "#A2B1C6",
             "gridcolor": "#506784",
             "linecolor": "#506784",
             "minorgridcolor": "#506784",
             "startlinecolor": "#A2B1C6"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "line": {
              "color": "#283442"
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "line": {
              "color": "#283442"
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#506784"
             },
             "line": {
              "color": "rgb(17,17,17)"
             }
            },
            "header": {
             "fill": {
              "color": "#2a3f5f"
             },
             "line": {
              "color": "rgb(17,17,17)"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#f2f5fa",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#f2f5fa"
          },
          "geo": {
           "bgcolor": "rgb(17,17,17)",
           "lakecolor": "rgb(17,17,17)",
           "landcolor": "rgb(17,17,17)",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "#506784"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "dark"
          },
          "paper_bgcolor": "rgb(17,17,17)",
          "plot_bgcolor": "rgb(17,17,17)",
          "polar": {
           "angularaxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           },
           "bgcolor": "rgb(17,17,17)",
           "radialaxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "rgb(17,17,17)",
            "gridcolor": "#506784",
            "gridwidth": 2,
            "linecolor": "#506784",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#C8D4E3"
           },
           "yaxis": {
            "backgroundcolor": "rgb(17,17,17)",
            "gridcolor": "#506784",
            "gridwidth": 2,
            "linecolor": "#506784",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#C8D4E3"
           },
           "zaxis": {
            "backgroundcolor": "rgb(17,17,17)",
            "gridcolor": "#506784",
            "gridwidth": 2,
            "linecolor": "#506784",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "#C8D4E3"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#f2f5fa"
           }
          },
          "sliderdefaults": {
           "bgcolor": "#C8D4E3",
           "bordercolor": "rgb(17,17,17)",
           "borderwidth": 1,
           "tickwidth": 0
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           },
           "bgcolor": "rgb(17,17,17)",
           "caxis": {
            "gridcolor": "#506784",
            "linecolor": "#506784",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "updatemenudefaults": {
           "bgcolor": "#506784",
           "borderwidth": 0
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "#283442",
           "linecolor": "#506784",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "#283442",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "#283442",
           "linecolor": "#506784",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "#283442",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Normalized Metrics by Sector"
        },
        "width": 1000,
        "xaxis": {
         "autorange": true,
         "range": [
          -0.5,
          10.5
         ],
         "tickangle": 45,
         "title": {
          "text": "Sector"
         },
         "type": "category"
        },
        "yaxis": {
         "autorange": true,
         "range": [
          -0.5,
          3.5
         ],
         "title": {
          "text": "Metric"
         },
         "type": "category"
        }
       }
      },
      "image/png": "",
      "text/html": [
       "<div>                            <div id=\"7d972001-0f4e-42c9-8cd3-0a1b7297dffa\" class=\"plotly-graph-div\" style=\"height:600px; width:1000px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"7d972001-0f4e-42c9-8cd3-0a1b7297dffa\")) {                    Plotly.newPlot(                        \"7d972001-0f4e-42c9-8cd3-0a1b7297dffa\",                        [{\"colorbar\":{\"title\":{\"text\":\"Normalized Value\"}},\"colorscale\":[[0,\"green\"],[0.5,\"white\"],[1,\"red\"]],\"x\":[\"Basic Materials\",\"Communication Services\",\"Consumer Cyclical\",\"Consumer Defensive\",\"Energy\",\"Financial Services\",\"Healthcare\",\"Industrials\",\"Real Estate\",\"Technology\",\"Utilities\"],\"y\":[\"accounting\",\"events\",\"misstatement\",\"risk\"],\"z\":[[-0.80530703,-0.5288011,-0.3389688,0.20996308,1.0,-0.14756715,-0.8181075,-0.38051647,-0.3727175,-0.48394066,-1.0],[-1.0,0.74090946,-0.13368344,0.98713994,0.29144382,0.079969525,0.060003877,-0.91934264,-0.28990173,-0.4465868,1.0],[0.19938242,-1.0,-0.025914788,1.0,0.37532377,0.16861546,0.5351323,-0.9957719,-0.83941245,-0.23310441,0.6637001],[-1.0,0.5596565,-0.12434518,1.0,0.6372138,0.11567962,-0.09791428,-0.812217,-0.27223378,-0.43532532,0.6505419]],\"zmax\":1,\"zmin\":-1,\"type\":\"heatmap\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#f2f5fa\"},\"error_y\":{\"color\":\"#f2f5fa\"},\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scattergl\"}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"baxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#506784\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"header\":{\"fill\":{\"color\":\"#2a3f5f\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#f2f5fa\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"rgb(17,17,17)\",\"plot_bgcolor\":\"rgb(17,17,17)\",\"polar\":{\"bgcolor\":\"rgb(17,17,17)\",\"angularaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"rgb(17,17,17)\",\"aaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#f2f5fa\"}},\"annotationdefaults\":{\"arrowcolor\":\"#f2f5fa\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"rgb(17,17,17)\",\"landcolor\":\"rgb(17,17,17)\",\"subunitcolor\":\"#506784\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"rgb(17,17,17)\"},\"title\":{\"x\":0.05},\"updatemenudefaults\":{\"bgcolor\":\"#506784\",\"borderwidth\":0},\"sliderdefaults\":{\"bgcolor\":\"#C8D4E3\",\"borderwidth\":1,\"bordercolor\":\"rgb(17,17,17)\",\"tickwidth\":0},\"mapbox\":{\"style\":\"dark\"}}},\"title\":{\"text\":\"Normalized Metrics by Sector\"},\"xaxis\":{\"title\":{\"text\":\"Sector\"},\"tickangle\":45},\"yaxis\":{\"title\":{\"text\":\"Metric\"}},\"height\":600,\"width\":1000},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('7d972001-0f4e-42c9-8cd3-0a1b7297dffa');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "\n",
    "# Prepare data for heatmap\n",
    "sectors = sector_metrics['sector'].tolist()\n",
    "z_values = sector_metrics[metrics].values.T\n",
    "\n",
    "# Create the heatmap\n",
    "fig = go.Figure(data=go.Heatmap(\n",
    "    z=z_values,\n",
    "    x=sectors,\n",
    "    y=metrics,\n",
    "    colorscale=[\n",
    "        [0, 'green'],\n",
    "        [0.5, 'white'],\n",
    "        [1, 'red']\n",
    "    ],\n",
    "    zmin=-1,\n",
    "    zmax=1,\n",
    "    colorbar=dict(title='Normalized Value'),\n",
    "))\n",
    "\n",
    "# Update layout\n",
    "fig.update_layout(\n",
    "    title='Normalized Metrics by Sector',\n",
    "    xaxis_title='Sector',\n",
    "    yaxis_title='Metric',\n",
    "    height=600,\n",
    "    width=1000,\n",
    ")\n",
    "\n",
    "# Rotate x-axis labels for better readability\n",
    "fig.update_xaxes(tickangle=45)\n",
    "\n",
    "# Show the plot\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "eb11ff12-9d09-43c1-ad6b-8a221d59218d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.42847338, 0.43216535, 0.4316513 , 0.43813866, 0.43993753,\n",
       "        0.4301162 , 0.42647746, 0.4323109 , 0.4298397 , 0.43286982,\n",
       "        0.43097973],\n",
       "       [0.6095472 , 0.64597106, 0.62837636, 0.6466671 , 0.6354688 ,\n",
       "        0.63110816, 0.6291115 , 0.6079443 , 0.6214616 , 0.6237623 ,\n",
       "        0.6529739 ],\n",
       "       [0.51867855, 0.5155366 , 0.51914656, 0.5201118 , 0.5202507 ,\n",
       "        0.5200216 , 0.52080053, 0.51831645, 0.5171165 , 0.519345  ,\n",
       "        0.5172722 ],\n",
       "       [0.50153667, 0.5347863 , 0.51990664, 0.5406629 , 0.5328892 ,\n",
       "        0.520918  , 0.5162091 , 0.50344336, 0.51252073, 0.51711595,\n",
       "        0.5396869 ]], dtype=float32)"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "z_values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "353e4343-8108-4976-890d-0fcc94165a70",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ticker</th>\n",
       "      <th>date</th>\n",
       "      <th>sector</th>\n",
       "      <th>percentilerisk</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A</td>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>Accounting Risk</td>\n",
       "      <td>0.426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A</td>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>Events Risk</td>\n",
       "      <td>0.626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A</td>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>Misstatement Risk</td>\n",
       "      <td>0.515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A</td>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>Overall Risk</td>\n",
       "      <td>0.518</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AA</td>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>Accounting Risk</td>\n",
       "      <td>0.422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14683</th>\n",
       "      <td>ZYME</td>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>Overall Risk</td>\n",
       "      <td>0.519</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14684</th>\n",
       "      <td>ZYXI</td>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>Accounting Risk</td>\n",
       "      <td>0.428</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14685</th>\n",
       "      <td>ZYXI</td>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>Events Risk</td>\n",
       "      <td>0.626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14686</th>\n",
       "      <td>ZYXI</td>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>Misstatement Risk</td>\n",
       "      <td>0.515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14687</th>\n",
       "      <td>ZYXI</td>\n",
       "      <td>2024-10-18</td>\n",
       "      <td>Overall Risk</td>\n",
       "      <td>0.519</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>14688 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      ticker       date             sector  percentilerisk\n",
       "0          A 2024-10-18    Accounting Risk           0.426\n",
       "1          A 2024-10-18        Events Risk           0.626\n",
       "2          A 2024-10-18  Misstatement Risk           0.515\n",
       "3          A 2024-10-18       Overall Risk           0.518\n",
       "4         AA 2024-10-18    Accounting Risk           0.422\n",
       "...      ...        ...                ...             ...\n",
       "14683   ZYME 2024-10-18       Overall Risk           0.519\n",
       "14684   ZYXI 2024-10-18    Accounting Risk           0.428\n",
       "14685   ZYXI 2024-10-18        Events Risk           0.626\n",
       "14686   ZYXI 2024-10-18  Misstatement Risk           0.515\n",
       "14687   ZYXI 2024-10-18       Overall Risk           0.519\n",
       "\n",
       "[14688 rows x 4 columns]"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_long"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "d8327a81-7641-4127-8ba6-a459fd578362",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Assuming df_complaints is your original DataFrame\n",
    "# First, let's convert the 'date' column to datetime if it's not already\n",
    "df_complaints['date'] = pd.to_datetime(df_complaints['date'])\n",
    "\n",
    "# Find the max date in the dataset\n",
    "max_date = df_complaints['date'].max()\n",
    "\n",
    "# Function to get the same day of the month as max_date, but for each month\n",
    "def get_monthly_end_date(dt):\n",
    "    return dt.replace(day=max_date.day) if dt.day <= max_date.day else (\n",
    "        dt + pd.offsets.MonthEnd(0) - pd.Timedelta(days=max_date.day-1)\n",
    "    )\n",
    "\n",
    "# Apply the function to get the end date for each month\n",
    "df_complaints['month_end'] = df_complaints['date'].apply(get_monthly_end_date)\n",
    "\n",
    "# Set the month_end as index\n",
    "df_complaints.set_index('month_end', inplace=True)\n",
    "\n",
    "# Resample to the specific day of each month and aggregate\n",
    "df_monthly = df_complaints.groupby('ticker').resample('M', label='right', closed='right').agg({\n",
    "    'company': 'first',\n",
    "    'ticker': 'count',\n",
    "    'culpability_score': 'mean',\n",
    "    'complaint_score': 'mean',\n",
    "    'grievance_score': 'mean',\n",
    "    'total_risk_rating': 'mean',\n",
    "    'similarity': 'mean'\n",
    "})\n",
    "\n",
    "# Rename the 'ticker' column to make it clear it's a count\n",
    "df_monthly.rename(columns={'ticker': 'complaint_count'}, inplace=True)\n",
    "\n",
    "# Reset the index\n",
    "df_monthly.reset_index(inplace=True)\n",
    "\n",
    "# Sort the DataFrame by month_end (descending) and ticker\n",
    "df_monthly.sort_values(['month_end', 'ticker'], ascending=[False, True], inplace=True)\n",
    "\n",
    "df_monthly['month_end'] = df_monthly['month_end'].apply(\n",
    "    lambda x: x.replace(day=max_date.day) if x.month != max_date.month or x.year != max_date.year\n",
    "    else max_date\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "41d27acf-b869-4406-b8ed-cddd9ff5d47b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ticker</th>\n",
       "      <th>month_end</th>\n",
       "      <th>company</th>\n",
       "      <th>complaint_count</th>\n",
       "      <th>culpability_score</th>\n",
       "      <th>complaint_score</th>\n",
       "      <th>grievance_score</th>\n",
       "      <th>total_risk_rating</th>\n",
       "      <th>similarity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>789</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-10-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>1</td>\n",
       "      <td>0.159</td>\n",
       "      <td>-0.321</td>\n",
       "      <td>0.050</td>\n",
       "      <td>-0.038</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>788</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-09-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>468</td>\n",
       "      <td>0.158</td>\n",
       "      <td>-0.312</td>\n",
       "      <td>-0.233</td>\n",
       "      <td>-0.129</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>787</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-08-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>592</td>\n",
       "      <td>0.155</td>\n",
       "      <td>-0.269</td>\n",
       "      <td>-0.237</td>\n",
       "      <td>-0.117</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>786</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-07-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>623</td>\n",
       "      <td>0.149</td>\n",
       "      <td>-0.339</td>\n",
       "      <td>-0.275</td>\n",
       "      <td>-0.155</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>785</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-06-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>565</td>\n",
       "      <td>0.158</td>\n",
       "      <td>-0.381</td>\n",
       "      <td>-0.276</td>\n",
       "      <td>-0.166</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>784</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-05-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>647</td>\n",
       "      <td>0.161</td>\n",
       "      <td>-0.384</td>\n",
       "      <td>-0.280</td>\n",
       "      <td>-0.168</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>783</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-04-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>885</td>\n",
       "      <td>0.172</td>\n",
       "      <td>-0.361</td>\n",
       "      <td>-0.290</td>\n",
       "      <td>-0.160</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>782</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-03-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>846</td>\n",
       "      <td>0.204</td>\n",
       "      <td>-0.360</td>\n",
       "      <td>-0.287</td>\n",
       "      <td>-0.148</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>781</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-02-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>789</td>\n",
       "      <td>0.187</td>\n",
       "      <td>-0.371</td>\n",
       "      <td>-0.290</td>\n",
       "      <td>-0.158</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>780</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-01-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>896</td>\n",
       "      <td>0.191</td>\n",
       "      <td>-0.400</td>\n",
       "      <td>-0.325</td>\n",
       "      <td>-0.178</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>779</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2023-12-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>854</td>\n",
       "      <td>0.181</td>\n",
       "      <td>-0.417</td>\n",
       "      <td>-0.331</td>\n",
       "      <td>-0.189</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>778</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2023-11-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>653</td>\n",
       "      <td>0.181</td>\n",
       "      <td>-0.395</td>\n",
       "      <td>-0.298</td>\n",
       "      <td>-0.171</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>777</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2023-10-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>644</td>\n",
       "      <td>0.185</td>\n",
       "      <td>-0.374</td>\n",
       "      <td>-0.308</td>\n",
       "      <td>-0.166</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>776</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2023-09-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>549</td>\n",
       "      <td>0.183</td>\n",
       "      <td>-0.403</td>\n",
       "      <td>-0.313</td>\n",
       "      <td>-0.177</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>775</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2023-08-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>159</td>\n",
       "      <td>0.182</td>\n",
       "      <td>-0.352</td>\n",
       "      <td>-0.231</td>\n",
       "      <td>-0.134</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    ticker  month_end                   company  complaint_count  \\\n",
       "789    AXP 2024-10-04  american express company                1   \n",
       "788    AXP 2024-09-04  american express company              468   \n",
       "787    AXP 2024-08-04  american express company              592   \n",
       "786    AXP 2024-07-04  american express company              623   \n",
       "785    AXP 2024-06-04  american express company              565   \n",
       "784    AXP 2024-05-04  american express company              647   \n",
       "783    AXP 2024-04-04  american express company              885   \n",
       "782    AXP 2024-03-04  american express company              846   \n",
       "781    AXP 2024-02-04  american express company              789   \n",
       "780    AXP 2024-01-04  american express company              896   \n",
       "779    AXP 2023-12-04  american express company              854   \n",
       "778    AXP 2023-11-04  american express company              653   \n",
       "777    AXP 2023-10-04  american express company              644   \n",
       "776    AXP 2023-09-04  american express company              549   \n",
       "775    AXP 2023-08-04  american express company              159   \n",
       "\n",
       "     culpability_score  complaint_score  grievance_score  total_risk_rating  \\\n",
       "789              0.159           -0.321            0.050             -0.038   \n",
       "788              0.158           -0.312           -0.233             -0.129   \n",
       "787              0.155           -0.269           -0.237             -0.117   \n",
       "786              0.149           -0.339           -0.275             -0.155   \n",
       "785              0.158           -0.381           -0.276             -0.166   \n",
       "784              0.161           -0.384           -0.280             -0.168   \n",
       "783              0.172           -0.361           -0.290             -0.160   \n",
       "782              0.204           -0.360           -0.287             -0.148   \n",
       "781              0.187           -0.371           -0.290             -0.158   \n",
       "780              0.191           -0.400           -0.325             -0.178   \n",
       "779              0.181           -0.417           -0.331             -0.189   \n",
       "778              0.181           -0.395           -0.298             -0.171   \n",
       "777              0.185           -0.374           -0.308             -0.166   \n",
       "776              0.183           -0.403           -0.313             -0.177   \n",
       "775              0.182           -0.352           -0.231             -0.134   \n",
       "\n",
       "     similarity  \n",
       "789       1.000  \n",
       "788       1.000  \n",
       "787       1.000  \n",
       "786       1.000  \n",
       "785       1.000  \n",
       "784       1.000  \n",
       "783       1.000  \n",
       "782       1.000  \n",
       "781       1.000  \n",
       "780       1.000  \n",
       "779       1.000  \n",
       "778       1.000  \n",
       "777       1.000  \n",
       "776       1.000  \n",
       "775       1.000  "
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_monthly[df_monthly[\"ticker\"]==\"AXP\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "0c5ab5e3-e3b3-46b2-a532-9f359dfc50ff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ticker</th>\n",
       "      <th>month_end</th>\n",
       "      <th>company</th>\n",
       "      <th>complaint_count</th>\n",
       "      <th>culpability_score</th>\n",
       "      <th>complaint_score</th>\n",
       "      <th>grievance_score</th>\n",
       "      <th>total_risk_rating</th>\n",
       "      <th>similarity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>701</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-10-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>1</td>\n",
       "      <td>0.159</td>\n",
       "      <td>-0.321</td>\n",
       "      <td>0.050</td>\n",
       "      <td>-0.038</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>700</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-09-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>468</td>\n",
       "      <td>0.158</td>\n",
       "      <td>-0.312</td>\n",
       "      <td>-0.233</td>\n",
       "      <td>-0.129</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>699</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-08-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>592</td>\n",
       "      <td>0.155</td>\n",
       "      <td>-0.269</td>\n",
       "      <td>-0.237</td>\n",
       "      <td>-0.117</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>698</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-07-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>623</td>\n",
       "      <td>0.149</td>\n",
       "      <td>-0.339</td>\n",
       "      <td>-0.275</td>\n",
       "      <td>-0.155</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>697</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-06-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>565</td>\n",
       "      <td>0.158</td>\n",
       "      <td>-0.381</td>\n",
       "      <td>-0.276</td>\n",
       "      <td>-0.166</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>696</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-05-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>647</td>\n",
       "      <td>0.161</td>\n",
       "      <td>-0.384</td>\n",
       "      <td>-0.280</td>\n",
       "      <td>-0.168</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>695</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-04-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>885</td>\n",
       "      <td>0.172</td>\n",
       "      <td>-0.361</td>\n",
       "      <td>-0.290</td>\n",
       "      <td>-0.160</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>694</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-03-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>846</td>\n",
       "      <td>0.204</td>\n",
       "      <td>-0.360</td>\n",
       "      <td>-0.287</td>\n",
       "      <td>-0.148</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>693</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-02-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>789</td>\n",
       "      <td>0.187</td>\n",
       "      <td>-0.371</td>\n",
       "      <td>-0.290</td>\n",
       "      <td>-0.158</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>692</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2024-01-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>896</td>\n",
       "      <td>0.191</td>\n",
       "      <td>-0.400</td>\n",
       "      <td>-0.325</td>\n",
       "      <td>-0.178</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>691</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2023-12-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>854</td>\n",
       "      <td>0.181</td>\n",
       "      <td>-0.417</td>\n",
       "      <td>-0.331</td>\n",
       "      <td>-0.189</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>690</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2023-11-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>653</td>\n",
       "      <td>0.181</td>\n",
       "      <td>-0.395</td>\n",
       "      <td>-0.298</td>\n",
       "      <td>-0.171</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>689</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2023-10-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>644</td>\n",
       "      <td>0.185</td>\n",
       "      <td>-0.374</td>\n",
       "      <td>-0.308</td>\n",
       "      <td>-0.166</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>688</th>\n",
       "      <td>AXP</td>\n",
       "      <td>2023-09-04</td>\n",
       "      <td>american express company</td>\n",
       "      <td>178</td>\n",
       "      <td>0.181</td>\n",
       "      <td>-0.423</td>\n",
       "      <td>-0.349</td>\n",
       "      <td>-0.197</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    ticker  month_end                   company  complaint_count  \\\n",
       "701    AXP 2024-10-04  american express company                1   \n",
       "700    AXP 2024-09-04  american express company              468   \n",
       "699    AXP 2024-08-04  american express company              592   \n",
       "698    AXP 2024-07-04  american express company              623   \n",
       "697    AXP 2024-06-04  american express company              565   \n",
       "696    AXP 2024-05-04  american express company              647   \n",
       "695    AXP 2024-04-04  american express company              885   \n",
       "694    AXP 2024-03-04  american express company              846   \n",
       "693    AXP 2024-02-04  american express company              789   \n",
       "692    AXP 2024-01-04  american express company              896   \n",
       "691    AXP 2023-12-04  american express company              854   \n",
       "690    AXP 2023-11-04  american express company              653   \n",
       "689    AXP 2023-10-04  american express company              644   \n",
       "688    AXP 2023-09-04  american express company              178   \n",
       "\n",
       "     culpability_score  complaint_score  grievance_score  total_risk_rating  \\\n",
       "701              0.159           -0.321            0.050             -0.038   \n",
       "700              0.158           -0.312           -0.233             -0.129   \n",
       "699              0.155           -0.269           -0.237             -0.117   \n",
       "698              0.149           -0.339           -0.275             -0.155   \n",
       "697              0.158           -0.381           -0.276             -0.166   \n",
       "696              0.161           -0.384           -0.280             -0.168   \n",
       "695              0.172           -0.361           -0.290             -0.160   \n",
       "694              0.204           -0.360           -0.287             -0.148   \n",
       "693              0.187           -0.371           -0.290             -0.158   \n",
       "692              0.191           -0.400           -0.325             -0.178   \n",
       "691              0.181           -0.417           -0.331             -0.189   \n",
       "690              0.181           -0.395           -0.298             -0.171   \n",
       "689              0.185           -0.374           -0.308             -0.166   \n",
       "688              0.181           -0.423           -0.349             -0.197   \n",
       "\n",
       "     similarity  \n",
       "701       1.000  \n",
       "700       1.000  \n",
       "699       1.000  \n",
       "698       1.000  \n",
       "697       1.000  \n",
       "696       1.000  \n",
       "695       1.000  \n",
       "694       1.000  \n",
       "693       1.000  \n",
       "692       1.000  \n",
       "691       1.000  \n",
       "690       1.000  \n",
       "689       1.000  \n",
       "688       1.000  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_monthly[df_monthly[\"ticker\"]==\"AXP\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "0b699b7a-986b-4d86-a763-36f1f4fb09c9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ticker</th>\n",
       "      <th>month_end</th>\n",
       "      <th>company</th>\n",
       "      <th>complaint_count</th>\n",
       "      <th>culpability_score</th>\n",
       "      <th>complaint_score</th>\n",
       "      <th>grievance_score</th>\n",
       "      <th>total_risk_rating</th>\n",
       "      <th>similarity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1316</th>\n",
       "      <td>CCGFF</td>\n",
       "      <td>2024-10-04</td>\n",
       "      <td>credit control, llc</td>\n",
       "      <td>4</td>\n",
       "      <td>0.836</td>\n",
       "      <td>-0.321</td>\n",
       "      <td>-0.168</td>\n",
       "      <td>0.116</td>\n",
       "      <td>0.958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1315</th>\n",
       "      <td>CCGFF</td>\n",
       "      <td>2024-09-04</td>\n",
       "      <td>credit control, llc</td>\n",
       "      <td>332</td>\n",
       "      <td>0.824</td>\n",
       "      <td>-0.275</td>\n",
       "      <td>0.089</td>\n",
       "      <td>0.213</td>\n",
       "      <td>0.917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1314</th>\n",
       "      <td>CCGFF</td>\n",
       "      <td>2024-08-04</td>\n",
       "      <td>credit corp solutions inc.</td>\n",
       "      <td>408</td>\n",
       "      <td>0.824</td>\n",
       "      <td>-0.213</td>\n",
       "      <td>0.120</td>\n",
       "      <td>0.243</td>\n",
       "      <td>0.915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1313</th>\n",
       "      <td>CCGFF</td>\n",
       "      <td>2024-07-04</td>\n",
       "      <td>credit control, llc</td>\n",
       "      <td>337</td>\n",
       "      <td>0.825</td>\n",
       "      <td>-0.144</td>\n",
       "      <td>0.110</td>\n",
       "      <td>0.264</td>\n",
       "      <td>0.917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1312</th>\n",
       "      <td>CCGFF</td>\n",
       "      <td>2024-06-04</td>\n",
       "      <td>associated credit services, inc.</td>\n",
       "      <td>320</td>\n",
       "      <td>0.828</td>\n",
       "      <td>-0.127</td>\n",
       "      <td>0.127</td>\n",
       "      <td>0.276</td>\n",
       "      <td>0.915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1311</th>\n",
       "      <td>CCGFF</td>\n",
       "      <td>2024-05-04</td>\n",
       "      <td>credit control, llc</td>\n",
       "      <td>400</td>\n",
       "      <td>0.829</td>\n",
       "      <td>-0.132</td>\n",
       "      <td>0.142</td>\n",
       "      <td>0.279</td>\n",
       "      <td>0.916</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1310</th>\n",
       "      <td>CCGFF</td>\n",
       "      <td>2024-04-04</td>\n",
       "      <td>credit bureau data, inc.</td>\n",
       "      <td>530</td>\n",
       "      <td>0.826</td>\n",
       "      <td>-0.125</td>\n",
       "      <td>0.110</td>\n",
       "      <td>0.270</td>\n",
       "      <td>0.924</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1309</th>\n",
       "      <td>CCGFF</td>\n",
       "      <td>2024-03-04</td>\n",
       "      <td>associated credit services, inc.</td>\n",
       "      <td>447</td>\n",
       "      <td>0.826</td>\n",
       "      <td>-0.132</td>\n",
       "      <td>0.136</td>\n",
       "      <td>0.277</td>\n",
       "      <td>0.928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1308</th>\n",
       "      <td>CCGFF</td>\n",
       "      <td>2024-02-04</td>\n",
       "      <td>credit corp solutions inc.</td>\n",
       "      <td>382</td>\n",
       "      <td>0.814</td>\n",
       "      <td>-0.080</td>\n",
       "      <td>0.158</td>\n",
       "      <td>0.297</td>\n",
       "      <td>0.925</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1307</th>\n",
       "      <td>CCGFF</td>\n",
       "      <td>2024-01-04</td>\n",
       "      <td>agency of credit control</td>\n",
       "      <td>315</td>\n",
       "      <td>0.825</td>\n",
       "      <td>-0.094</td>\n",
       "      <td>0.163</td>\n",
       "      <td>0.298</td>\n",
       "      <td>0.922</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1306</th>\n",
       "      <td>CCGFF</td>\n",
       "      <td>2023-12-04</td>\n",
       "      <td>financial credit network inc</td>\n",
       "      <td>293</td>\n",
       "      <td>0.817</td>\n",
       "      <td>-0.099</td>\n",
       "      <td>0.145</td>\n",
       "      <td>0.288</td>\n",
       "      <td>0.928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1305</th>\n",
       "      <td>CCGFF</td>\n",
       "      <td>2023-11-04</td>\n",
       "      <td>credit control, llc</td>\n",
       "      <td>253</td>\n",
       "      <td>0.821</td>\n",
       "      <td>-0.095</td>\n",
       "      <td>0.147</td>\n",
       "      <td>0.291</td>\n",
       "      <td>0.925</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1304</th>\n",
       "      <td>CCGFF</td>\n",
       "      <td>2023-10-04</td>\n",
       "      <td>credit systems international, inc.</td>\n",
       "      <td>252</td>\n",
       "      <td>0.819</td>\n",
       "      <td>-0.120</td>\n",
       "      <td>0.178</td>\n",
       "      <td>0.293</td>\n",
       "      <td>0.927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1303</th>\n",
       "      <td>CCGFF</td>\n",
       "      <td>2023-09-04</td>\n",
       "      <td>credit control, llc</td>\n",
       "      <td>71</td>\n",
       "      <td>0.820</td>\n",
       "      <td>-0.090</td>\n",
       "      <td>0.139</td>\n",
       "      <td>0.290</td>\n",
       "      <td>0.927</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     ticker  month_end                             company  complaint_count  \\\n",
       "1316  CCGFF 2024-10-04                 credit control, llc                4   \n",
       "1315  CCGFF 2024-09-04                 credit control, llc              332   \n",
       "1314  CCGFF 2024-08-04          credit corp solutions inc.              408   \n",
       "1313  CCGFF 2024-07-04                 credit control, llc              337   \n",
       "1312  CCGFF 2024-06-04    associated credit services, inc.              320   \n",
       "1311  CCGFF 2024-05-04                 credit control, llc              400   \n",
       "1310  CCGFF 2024-04-04            credit bureau data, inc.              530   \n",
       "1309  CCGFF 2024-03-04    associated credit services, inc.              447   \n",
       "1308  CCGFF 2024-02-04          credit corp solutions inc.              382   \n",
       "1307  CCGFF 2024-01-04            agency of credit control              315   \n",
       "1306  CCGFF 2023-12-04        financial credit network inc              293   \n",
       "1305  CCGFF 2023-11-04                 credit control, llc              253   \n",
       "1304  CCGFF 2023-10-04  credit systems international, inc.              252   \n",
       "1303  CCGFF 2023-09-04                 credit control, llc               71   \n",
       "\n",
       "      culpability_score  complaint_score  grievance_score  total_risk_rating  \\\n",
       "1316              0.836           -0.321           -0.168              0.116   \n",
       "1315              0.824           -0.275            0.089              0.213   \n",
       "1314              0.824           -0.213            0.120              0.243   \n",
       "1313              0.825           -0.144            0.110              0.264   \n",
       "1312              0.828           -0.127            0.127              0.276   \n",
       "1311              0.829           -0.132            0.142              0.279   \n",
       "1310              0.826           -0.125            0.110              0.270   \n",
       "1309              0.826           -0.132            0.136              0.277   \n",
       "1308              0.814           -0.080            0.158              0.297   \n",
       "1307              0.825           -0.094            0.163              0.298   \n",
       "1306              0.817           -0.099            0.145              0.288   \n",
       "1305              0.821           -0.095            0.147              0.291   \n",
       "1304              0.819           -0.120            0.178              0.293   \n",
       "1303              0.820           -0.090            0.139              0.290   \n",
       "\n",
       "      similarity  \n",
       "1316       0.958  \n",
       "1315       0.917  \n",
       "1314       0.915  \n",
       "1313       0.917  \n",
       "1312       0.915  \n",
       "1311       0.916  \n",
       "1310       0.924  \n",
       "1309       0.928  \n",
       "1308       0.925  \n",
       "1307       0.922  \n",
       "1306       0.928  \n",
       "1305       0.925  \n",
       "1304       0.927  \n",
       "1303       0.927  "
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_monthly[df_monthly[\"ticker\"]==\"CCGFF\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "abe3914b-73fd-4cbe-974a-bd4556f511dc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Missing Values in Each Column:\n",
      " month_end            0\n",
      "ticker               0\n",
      "company              0\n",
      "complaint_count      0\n",
      "culpability_score    0\n",
      "complaint_score      0\n",
      "grievance_score      0\n",
      "total_risk_rating    0\n",
      "similarity           0\n",
      "dtype: int64\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Top 10 Anomalies Based on Composite Anomaly Score:\n",
      "   ticker                            company  anomaly_score\n",
      "19  CCGFF                credit control, llc         13.374\n",
      "25    AXP           american express company         11.915\n",
      "35    WFC              wells fargo & company         11.565\n",
      "29    COF  capital one financial corporation         10.846\n",
      "45   STLY                          hgreg.com          8.394\n",
      "62  HYMLF            hyundai capital america          6.846\n",
      "1   DMLRY   mercedes benz financial services          6.224\n",
      "11   FISV                        fiserv inc.          6.161\n",
      "57  MUPQF                     m.a.r.s., inc.          5.902\n",
      "42    THC       tenet healthcare corporation          5.568\n",
      "\n",
      "Anomalies Identified by Isolation Forest:\n",
      "   ticker                   company  anomaly_score\n",
      "19  CCGFF       credit control, llc         13.374\n",
      "25    AXP  american express company         11.915\n",
      "35    WFC     wells fargo & company         11.565\n",
      "41   TWNE    towne mortgage company          4.454\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Anomaly detection completed and results have been saved to CSV files.\n"
     ]
    }
   ],
   "source": [
    "# Import necessary libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from scipy.stats import zscore\n",
    "from sklearn.ensemble import IsolationForest\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# -------------------------------\n",
    "# 1. Data Preprocessing\n",
    "# -------------------------------\n",
    "# Check for missing values\n",
    "\n",
    "# Sort the DataFrame by 'month_end' (descending) and 'ticker' (ascending)\n",
    "df_monthly.sort_values(['month_end', 'ticker'], ascending=[False, True], inplace=True)\n",
    "\n",
    "\n",
    "missing_values = df_monthly.isnull().sum()\n",
    "print(\"Missing Values in Each Column:\\n\", missing_values)\n",
    "\n",
    "# Handle missing values\n",
    "# For numerical columns, fill missing values with the median\n",
    "numerical_cols = ['complaint_count', 'culpability_score', 'complaint_score',\n",
    "                  'grievance_score', 'total_risk_rating', 'similarity']\n",
    "df_monthly[numerical_cols] = df_monthly[numerical_cols].fillna(df_monthly[numerical_cols].median())\n",
    "\n",
    "# For categorical columns ('ticker' and 'company'), fill missing values with a placeholder\n",
    "df_monthly['ticker'] = df_monthly['ticker'].fillna('UNKNOWN')\n",
    "df_monthly['company'] = df_monthly['company'].fillna('UNKNOWN')\n",
    "\n",
    "# -------------------------------\n",
    "# 4. Define the Anomaly Detection Function\n",
    "# -------------------------------\n",
    "\n",
    "def detect_anomalies(df, metrics, historical_months=12, contamination=0.05):\n",
    "    \"\"\"\n",
    "    Detect anomalies in the latest month's data based on historical data.\n",
    "    \n",
    "    Parameters:\n",
    "    - df (pd.DataFrame): The monthly aggregated data DataFrame.\n",
    "    - metrics (list): List of metric column names to use for anomaly detection.\n",
    "    - historical_months (int): Number of months to consider as historical data.\n",
    "    - contamination (float): The proportion of anomalies in the data set for Isolation Forest.\n",
    "    \n",
    "    Returns:\n",
    "    - pd.DataFrame: DataFrame with anomaly scores and labels.\n",
    "    \"\"\"\n",
    "    # Ensure 'month_end' is in datetime format\n",
    "    df['month_end'] = pd.to_datetime(df['month_end'])\n",
    "    \n",
    "    # Sort data by 'month_end' to ensure chronological order\n",
    "    df = df.sort_values('month_end')\n",
    "    \n",
    "    # Identify the latest month in the data\n",
    "    latest_month = df['month_end'].max()\n",
    "    \n",
    "    # Define the historical period\n",
    "    historical_start_date = latest_month - pd.DateOffset(months=historical_months)\n",
    "    \n",
    "    # Extract historical data (12 months before the latest month)\n",
    "    historical_data = df[(df['month_end'] >= historical_start_date) & \n",
    "                         (df['month_end'] < latest_month)]\n",
    "    \n",
    "    # Extract current month data\n",
    "    current_month_data = df[df['month_end'] == latest_month]\n",
    "    \n",
    "    # Check if historical_data is empty\n",
    "    if historical_data.empty:\n",
    "        raise ValueError(\"Historical data is empty. Adjust the historical_months parameter or check the data.\")\n",
    "    \n",
    "    # a. Calculate historical statistics (mean and std) for each metric per ticker\n",
    "    stats = historical_data.groupby('ticker')[metrics].agg(['mean', 'std']).reset_index()\n",
    "    \n",
    "    # Flatten MultiIndex columns\n",
    "    stats.columns = ['ticker'] + [f\"{metric}_{stat}\" for metric in metrics for stat in ['mean', 'std']]\n",
    "    \n",
    "    # b. Merge historical statistics with current month data\n",
    "    merged_data = current_month_data.merge(stats, on='ticker', how='left')\n",
    "    \n",
    "    # c. Handle missing statistics\n",
    "    for metric in metrics:\n",
    "        mean_col = f\"{metric}_mean\"\n",
    "        std_col = f\"{metric}_std\"\n",
    "        merged_data[mean_col] = merged_data[mean_col].fillna(merged_data[metric])\n",
    "        merged_data[std_col] = merged_data[std_col].fillna(0)\n",
    "    \n",
    "    # d. Calculate Z-Scores for each metric\n",
    "    for metric in metrics:\n",
    "        z_col = f\"{metric}_z\"\n",
    "        mean_col = f\"{metric}_mean\"\n",
    "        std_col = f\"{metric}_std\"\n",
    "        # Avoid division by zero by replacing 0 std with a small number\n",
    "        merged_data[z_col] = (merged_data[metric] - merged_data[mean_col]) / merged_data[std_col].replace(0, 1e-6)\n",
    "        merged_data[z_col] = merged_data[z_col].fillna(0)\n",
    "    \n",
    "    # e. Combine Z-Scores into a Composite Anomaly Score using Euclidean Distance\n",
    "    merged_data['anomaly_score'] = np.sqrt(\n",
    "        sum(merged_data[f\"{metric}_z\"]**2 for metric in metrics)\n",
    "    )\n",
    "    \n",
    "    # f. Isolation Forest for advanced anomaly detection\n",
    "    feature_cols = [f\"{metric}_z\" for metric in metrics]\n",
    "    X = merged_data[feature_cols].fillna(0)\n",
    "    \n",
    "    # Initialize Isolation Forest\n",
    "    iso_forest = IsolationForest(contamination=contamination, random_state=42)\n",
    "    \n",
    "    # Fit the model and predict anomalies\n",
    "    merged_data['anomaly_label_iso'] = iso_forest.fit_predict(X)\n",
    "    \n",
    "    # Anomaly labels: -1 for anomalies, 1 for normal\n",
    "    merged_data['is_anomaly_iso'] = merged_data['anomaly_label_iso'].apply(lambda x: 1 if x == -1 else 0)\n",
    "    \n",
    "    return merged_data\n",
    "\n",
    "# -------------------------------\n",
    "# 5. Define Metrics and Detect Anomalies\n",
    "# -------------------------------\n",
    "\n",
    "# Define the metrics to be used for anomaly detection\n",
    "metrics = [\n",
    "    'complaint_count', \n",
    "    'culpability_score', \n",
    "    'complaint_score', \n",
    "    'grievance_score', \n",
    "    'total_risk_rating', \n",
    "    'similarity'\n",
    "]\n",
    "\n",
    "# Call the anomaly detection function\n",
    "try:\n",
    "    analyzed_data = detect_anomalies(df_monthly, metrics)\n",
    "except ValueError as ve:\n",
    "    print(f\"Error: {ve}\")\n",
    "    analyzed_data = pd.DataFrame()  # Create an empty DataFrame in case of error\n",
    "\n",
    "# -------------------------------\n",
    "# 6. Representation and Visualization\n",
    "# -------------------------------\n",
    "\n",
    "if not analyzed_data.empty:\n",
    "    # a. Select relevant columns for the final representation\n",
    "    final_representation = analyzed_data[[\n",
    "        'month_end', 'ticker', 'company', 'complaint_count', 'culpability_score',\n",
    "        'complaint_score', 'grievance_score', 'total_risk_rating',\n",
    "        'similarity', 'anomaly_score', 'is_anomaly_iso'\n",
    "    ]]\n",
    "    \n",
    "    # b. Visualize the distribution of anomaly scores\n",
    "    plt.figure(figsize=(12, 6))\n",
    "    sns.histplot(final_representation['anomaly_score'], bins=50, kde=True, color='skyblue')\n",
    "    plt.title('Distribution of Composite Anomaly Scores for Current Month')\n",
    "    plt.xlabel('Anomaly Score')\n",
    "    plt.ylabel('Frequency')\n",
    "    # Add a vertical line at the 95th percentile\n",
    "    threshold = final_representation['anomaly_score'].quantile(0.95)\n",
    "    plt.axvline(threshold, color='red', linestyle='--', label=f'95th Percentile ({threshold:.2f})')\n",
    "    plt.legend()\n",
    "    plt.show()\n",
    "    \n",
    "    # c. Highlight top anomalies based on Composite Anomaly Score\n",
    "    top_anomalies = final_representation.sort_values('anomaly_score', ascending=False).head(10)\n",
    "    print(\"\\nTop 10 Anomalies Based on Composite Anomaly Score:\")\n",
    "    print(top_anomalies[['ticker', 'company', 'anomaly_score']])\n",
    "    \n",
    "    # d. Highlight anomalies identified by Isolation Forest\n",
    "    anomalies_iso = final_representation[final_representation['is_anomaly_iso'] == 1]\n",
    "    print(\"\\nAnomalies Identified by Isolation Forest:\")\n",
    "    print(anomalies_iso[['ticker', 'company', 'anomaly_score']])\n",
    "    \n",
    "    # e. Scatter Plot Highlighting Anomalies\n",
    "    plt.figure(figsize=(12, 6))\n",
    "    sns.scatterplot(\n",
    "        data=final_representation, \n",
    "        x='complaint_count', \n",
    "        y='total_risk_rating', \n",
    "        hue='is_anomaly_iso', \n",
    "        palette={0: 'blue', 1: 'red'}, \n",
    "        alpha=0.6\n",
    "    )\n",
    "    plt.title('Anomalies Identified by Isolation Forest')\n",
    "    plt.xlabel('Complaint Count')\n",
    "    plt.ylabel('Total Risk Rating')\n",
    "    plt.legend(title='Is Anomaly', labels=['No', 'Yes'])\n",
    "    plt.show()\n",
    "    \n",
    "    # -------------------------------\n",
    "    # 7. Save or Export Anomalies (Optional)\n",
    "    # -------------------------------\n",
    "    \n",
    "    # Save the final representation with anomaly scores to a CSV file\n",
    "    final_representation.to_csv('analyzed_monthly_data_with_anomalies.csv', index=False)\n",
    "    \n",
    "    # Save top anomalies to a separate CSV file\n",
    "    top_anomalies.to_csv('top_anomalies_composite_score.csv', index=False)\n",
    "    \n",
    "    # Save Isolation Forest anomalies to a separate CSV file\n",
    "    anomalies_iso.to_csv('anomalies_isolation_forest.csv', index=False)\n",
    "    \n",
    "    print(\"\\nAnomaly detection completed and results have been saved to CSV files.\")\n",
    "else:\n",
    "    print(\"No analyzed data to display.\")\n",
    "\n",
    "# -------------------------------\n",
    "# End of Script"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9d84807f-68c4-416a-83d7-45427028a183",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
